;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 19/oct./2022 11:09:42 a. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF00BEF05  	GOTO        5642
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_Delay_10us:
;__Lib_Delays.c,11 :: 		void Delay_10us() {
;__Lib_Delays.c,12 :: 		Delay_us(10);
0x001C	0x0E06      	MOVLW       6
0x001E	0x6E0D      	MOVWF       R13, 0
L_Delay_10us0:
0x0020	0x2E0D      	DECFSZ      R13, 1, 0
0x0022	0xD7FE      	BRA         L_Delay_10us0
0x0024	0x0000      	NOP
;__Lib_Delays.c,13 :: 		}
L_end_Delay_10us:
0x0026	0x0012      	RETURN      0
; end of _Delay_10us
__Lib_Glcd_Strobe:
;__Lib_Glcd.c,32 :: 		
;__Lib_Glcd.c,33 :: 		
0x0028	0xDFF9      	RCALL       _Delay_10us
;__Lib_Glcd.c,34 :: 		
0x002A	0x888A      	BSF         GLCD_EN, BitPos(GLCD_EN+0) 
;__Lib_Glcd.c,35 :: 		
0x002C	0xDFF7      	RCALL       _Delay_10us
;__Lib_Glcd.c,36 :: 		
0x002E	0x988A      	BCF         GLCD_EN, BitPos(GLCD_EN+0) 
;__Lib_Glcd.c,37 :: 		
L_end_Strobe:
0x0030	0x0012      	RETURN      0
; end of __Lib_Glcd_Strobe
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0032	0x0000      	NOP
0x0034	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0036	0x0012      	RETURN      0
; end of _Delay_1us
_Glcd_Read_Data:
;__Lib_Glcd.c,75 :: 		
;__Lib_Glcd.c,80 :: 		
0x0038	0x0E12      	MOVLW       18
0x003A	0x6E00      	MOVWF       R0 
0x003C	0x0E00      	MOVLW       0
0x003E	0x6E01      	MOVWF       R1 
0x0040	0x0E83      	MOVLW       GLCD_DataPort
0x0042	0x2400      	ADDWF       R0, 0 
0x0044	0x6EE1      	MOVWF       FSR1L 
0x0046	0x0E0F      	MOVLW       hi_addr(GLCD_DataPort)
0x0048	0x2001      	ADDWFC      R1, 0 
0x004A	0x6EE2      	MOVWF       FSR1H 
0x004C	0x0EFF      	MOVLW       255
0x004E	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Glcd.c,82 :: 		
0x0050	0xDFF0      	RCALL       _Delay_1us
;__Lib_Glcd.c,83 :: 		
0x0052	0xDFEF      	RCALL       _Delay_1us
;__Lib_Glcd.c,85 :: 		
0x0054	0x848A      	BSF         GLCD_RS, BitPos(GLCD_RS+0) 
;__Lib_Glcd.c,86 :: 		
0x0056	0x988A      	BCF         GLCD_EN, BitPos(GLCD_EN+0) 
;__Lib_Glcd.c,87 :: 		
0x0058	0x868A      	BSF         GLCD_RW, BitPos(GLCD_RW+0) 
;__Lib_Glcd.c,89 :: 		
0x005A	0x888A      	BSF         GLCD_EN, BitPos(GLCD_EN+0) 
;__Lib_Glcd.c,91 :: 		
0x005C	0xDFDF      	RCALL       _Delay_10us
;__Lib_Glcd.c,99 :: 		
0x005E	0xF19DCF83  	MOVFF       GLCD_DataPort, Glcd_Read_Data_local_L0
;__Lib_Glcd.c,101 :: 		
0x0062	0x988A      	BCF         GLCD_EN, BitPos(GLCD_EN+0) 
;__Lib_Glcd.c,102 :: 		
0x0064	0x968A      	BCF         GLCD_RW, BitPos(GLCD_RW+0) 
;__Lib_Glcd.c,104 :: 		
0x0066	0xDFE5      	RCALL       _Delay_1us
;__Lib_Glcd.c,105 :: 		
0x0068	0xDFE4      	RCALL       _Delay_1us
;__Lib_Glcd.c,108 :: 		
0x006A	0x0E12      	MOVLW       18
0x006C	0x6E00      	MOVWF       R0 
0x006E	0x0E00      	MOVLW       0
0x0070	0x6E01      	MOVWF       R1 
0x0072	0x0E83      	MOVLW       GLCD_DataPort
0x0074	0x2400      	ADDWF       R0, 0 
0x0076	0x6EE1      	MOVWF       FSR1L 
0x0078	0x0E0F      	MOVLW       hi_addr(GLCD_DataPort)
0x007A	0x2001      	ADDWFC      R1, 0 
0x007C	0x6EE2      	MOVWF       FSR1H 
0x007E	0x6AE6      	CLRF        POSTINC1 
;__Lib_Glcd.c,110 :: 		
0x0080	0xF000C19D  	MOVFF       Glcd_Read_Data_local_L0, R0
;__Lib_Glcd.c,111 :: 		
L_end_Glcd_Read_Data:
0x0084	0x0012      	RETURN      0
; end of _Glcd_Read_Data
_Glcd_Write_Data:
;__Lib_Glcd.c,114 :: 		
;__Lib_Glcd.c,116 :: 		
0x0086	0x988A      	BCF         GLCD_EN, BitPos(GLCD_EN+0) 
;__Lib_Glcd.c,117 :: 		
0x0088	0x848A      	BSF         GLCD_RS, BitPos(GLCD_RS+0) 
;__Lib_Glcd.c,118 :: 		
0x008A	0x968A      	BCF         GLCD_RW, BitPos(GLCD_RW+0) 
;__Lib_Glcd.c,120 :: 		
0x008C	0xFF83C19D  	MOVFF       FARG_Glcd_Write_Data_ddata, GLCD_DataPort
;__Lib_Glcd.c,121 :: 		
0x0090	0xDFCB      	RCALL       __Lib_Glcd_Strobe
;__Lib_Glcd.c,122 :: 		
L_end_Glcd_Write_Data:
0x0092	0x0012      	RETURN      0
; end of _Glcd_Write_Data
_Glcd_Set_Side:
;__Lib_Glcd.c,49 :: 		
;__Lib_Glcd.c,50 :: 		
0x0094	0x0E7F      	MOVLW       127
0x0096	0x0101      	MOVLB       1
0x0098	0x159D      	ANDWF       FARG_Glcd_Set_Side_x_pos, 0, 1
0x009A	0x6E01      	MOVWF       R1 
0x009C	0xF19DC001  	MOVFF       R1, FARG_Glcd_Set_Side_x_pos
;__Lib_Glcd.c,51 :: 		
0x00A0	0xAC01      	BTFSS       R1, 6 
0x00A2	0xD003      	BRA         L_Glcd_Set_Side0
;__Lib_Glcd.c,52 :: 		
0x00A4	0x808A      	BSF         GLCD_CS1, BitPos(GLCD_CS1+0) 
;__Lib_Glcd.c,53 :: 		
0x00A6	0x928A      	BCF         GLCD_CS2, BitPos(GLCD_CS2+0) 
;__Lib_Glcd.c,54 :: 		
0x00A8	0xD002      	BRA         L_Glcd_Set_Side1
L_Glcd_Set_Side0:
;__Lib_Glcd.c,55 :: 		
0x00AA	0x908A      	BCF         GLCD_CS1, BitPos(GLCD_CS1+0) 
;__Lib_Glcd.c,56 :: 		
0x00AC	0x828A      	BSF         GLCD_CS2, BitPos(GLCD_CS2+0) 
;__Lib_Glcd.c,57 :: 		
L_Glcd_Set_Side1:
;__Lib_Glcd.c,58 :: 		
L_end_Glcd_Set_Side:
0x00AE	0x0012      	RETURN      0
; end of _Glcd_Set_Side
_Glcd_Set_Page:
;__Lib_Glcd.c,40 :: 		
;__Lib_Glcd.c,42 :: 		
0x00B0	0x948A      	BCF         GLCD_RS, BitPos(GLCD_RS+0) 
;__Lib_Glcd.c,43 :: 		
0x00B2	0x968A      	BCF         GLCD_RW, BitPos(GLCD_RW+0) 
;__Lib_Glcd.c,44 :: 		
0x00B4	0x0EB8      	MOVLW       184
0x00B6	0x0101      	MOVLB       1
0x00B8	0x119D      	IORWF       FARG_Glcd_Set_Page_page, 0, 1
0x00BA	0x6E83      	MOVWF       GLCD_DataPort 
;__Lib_Glcd.c,45 :: 		
0x00BC	0xDFB5      	RCALL       __Lib_Glcd_Strobe
;__Lib_Glcd.c,46 :: 		
L_end_Glcd_Set_Page:
0x00BE	0x0012      	RETURN      0
; end of _Glcd_Set_Page
_Glcd_Set_X:
;__Lib_Glcd.c,61 :: 		
;__Lib_Glcd.c,63 :: 		
0x00C0	0x0E7F      	MOVLW       127
0x00C2	0x0101      	MOVLB       1
0x00C4	0x159D      	ANDWF       FARG_Glcd_Set_X_x_pos, 0, 1
0x00C6	0x6E00      	MOVWF       R0 
0x00C8	0xF19DC000  	MOVFF       R0, FARG_Glcd_Set_X_x_pos
;__Lib_Glcd.c,64 :: 		
0x00CC	0x948A      	BCF         GLCD_RS, BitPos(GLCD_RS+0) 
;__Lib_Glcd.c,65 :: 		
0x00CE	0x968A      	BCF         GLCD_RW, BitPos(GLCD_RW+0) 
;__Lib_Glcd.c,67 :: 		
0x00D0	0x0EBF      	MOVLW       191
0x00D2	0x1600      	ANDWF       R0, 1 
0x00D4	0xF19DC000  	MOVFF       R0, FARG_Glcd_Set_X_x_pos
;__Lib_Glcd.c,68 :: 		
0x00D8	0x8C00      	BSF         R0, 6 
0x00DA	0xF19DC000  	MOVFF       R0, FARG_Glcd_Set_X_x_pos
;__Lib_Glcd.c,70 :: 		
0x00DE	0xFF83C000  	MOVFF       R0, GLCD_DataPort
;__Lib_Glcd.c,71 :: 		
0x00E2	0xDFA2      	RCALL       __Lib_Glcd_Strobe
;__Lib_Glcd.c,72 :: 		
L_end_Glcd_Set_X:
0x00E4	0x0012      	RETURN      0
; end of _Glcd_Set_X
_Glcd_Dot:
;__Lib_Glcd.c,321 :: 		
;__Lib_Glcd.c,325 :: 		
0x00E6	0x0E00      	MOVLW       0
0x00E8	0x0101      	MOVLB       1
0x00EA	0x5D97      	SUBWF       FARG_Glcd_Dot_x_pos, 0, 1
0x00EC	0xE30A      	BNC         L__Glcd_Dot299
0x00EE	0x5197      	MOVF        FARG_Glcd_Dot_x_pos, 0, 1
0x00F0	0x087F      	SUBLW       127
0x00F2	0xE307      	BNC         L__Glcd_Dot299
0x00F4	0x0E00      	MOVLW       0
0x00F6	0x5D98      	SUBWF       FARG_Glcd_Dot_y_pos, 0, 1
0x00F8	0xE304      	BNC         L__Glcd_Dot299
0x00FA	0x5198      	MOVF        FARG_Glcd_Dot_y_pos, 0, 1
0x00FC	0x083F      	SUBLW       63
0x00FE	0xE301      	BNC         L__Glcd_Dot299
0x0100	0xD001      	BRA         L_Glcd_Dot36
L__Glcd_Dot299:
;__Lib_Glcd.c,326 :: 		
0x0102	0xD04A      	BRA         L_end_Glcd_Dot
L_Glcd_Dot36:
;__Lib_Glcd.c,329 :: 		
0x0104	0xF19DC197  	MOVFF       FARG_Glcd_Dot_x_pos, FARG_Glcd_Set_Side_x_pos
0x0108	0xDFC5      	RCALL       _Glcd_Set_Side
;__Lib_Glcd.c,330 :: 		
0x010A	0xF19DC198  	MOVFF       FARG_Glcd_Dot_y_pos, FARG_Glcd_Set_Page_page
0x010E	0x339D      	RRCF        FARG_Glcd_Set_Page_page, 1, 1
0x0110	0x9F9D      	BCF         FARG_Glcd_Set_Page_page, 7, 1
0x0112	0x339D      	RRCF        FARG_Glcd_Set_Page_page, 1, 1
0x0114	0x9F9D      	BCF         FARG_Glcd_Set_Page_page, 7, 1
0x0116	0x339D      	RRCF        FARG_Glcd_Set_Page_page, 1, 1
0x0118	0x9F9D      	BCF         FARG_Glcd_Set_Page_page, 7, 1
0x011A	0xDFCA      	RCALL       _Glcd_Set_Page
;__Lib_Glcd.c,331 :: 		
0x011C	0xF19DC197  	MOVFF       FARG_Glcd_Dot_x_pos, FARG_Glcd_Set_X_x_pos
0x0120	0xDFCF      	RCALL       _Glcd_Set_X
;__Lib_Glcd.c,334 :: 		
0x0122	0xDF8A      	RCALL       _Glcd_Read_Data
0x0124	0xF19CC000  	MOVFF       R0, Glcd_Dot_ddata_L0
;__Lib_Glcd.c,335 :: 		
0x0128	0xDF87      	RCALL       _Glcd_Read_Data
0x012A	0xF19CC000  	MOVFF       R0, Glcd_Dot_ddata_L0
;__Lib_Glcd.c,337 :: 		
0x012E	0xF19DC198  	MOVFF       FARG_Glcd_Dot_y_pos, FARG_Glcd_Set_Page_page
0x0132	0x339D      	RRCF        FARG_Glcd_Set_Page_page, 1, 1
0x0134	0x9F9D      	BCF         FARG_Glcd_Set_Page_page, 7, 1
0x0136	0x339D      	RRCF        FARG_Glcd_Set_Page_page, 1, 1
0x0138	0x9F9D      	BCF         FARG_Glcd_Set_Page_page, 7, 1
0x013A	0x339D      	RRCF        FARG_Glcd_Set_Page_page, 1, 1
0x013C	0x9F9D      	BCF         FARG_Glcd_Set_Page_page, 7, 1
0x013E	0xDFB8      	RCALL       _Glcd_Set_Page
;__Lib_Glcd.c,338 :: 		
0x0140	0xF19DC197  	MOVFF       FARG_Glcd_Dot_x_pos, FARG_Glcd_Set_X_x_pos
0x0144	0xDFBD      	RCALL       _Glcd_Set_X
;__Lib_Glcd.c,340 :: 		
0x0146	0x0E07      	MOVLW       7
0x0148	0x1598      	ANDWF       FARG_Glcd_Dot_y_pos, 0, 1
0x014A	0x6E00      	MOVWF       R0 
0x014C	0xF19AC000  	MOVFF       R0, Glcd_Dot_bit_mask1_L0
;__Lib_Glcd.c,341 :: 		
0x0150	0xF001C000  	MOVFF       R0, R1
0x0154	0x0E01      	MOVLW       1
0x0156	0x6E00      	MOVWF       R0 
0x0158	0x5001      	MOVF        R1, 0 
L__Glcd_Dot324:
0x015A	0xE004      	BZ          L__Glcd_Dot325
0x015C	0x3600      	RLCF        R0, 1 
0x015E	0x9000      	BCF         R0, 0 
0x0160	0x0FFF      	ADDLW       255
0x0162	0xD7FB      	BRA         L__Glcd_Dot324
L__Glcd_Dot325:
0x0164	0xF19AC000  	MOVFF       R0, Glcd_Dot_bit_mask1_L0
;__Lib_Glcd.c,342 :: 		
0x0168	0x1C00      	COMF        R0, 0 
0x016A	0x6F9B      	MOVWF       Glcd_Dot_bit_mask0_L0, 1
;__Lib_Glcd.c,345 :: 		
0x016C	0xD009      	BRA         L_Glcd_Dot37
;__Lib_Glcd.c,346 :: 		
L_Glcd_Dot39:
;__Lib_Glcd.c,347 :: 		
0x016E	0x519B      	MOVF        Glcd_Dot_bit_mask0_L0, 0, 1
0x0170	0x179C      	ANDWF       Glcd_Dot_ddata_L0, 1, 1
;__Lib_Glcd.c,348 :: 		
0x0172	0xD00F      	BRA         L_Glcd_Dot38
;__Lib_Glcd.c,349 :: 		
L_Glcd_Dot40:
;__Lib_Glcd.c,350 :: 		
0x0174	0x519A      	MOVF        Glcd_Dot_bit_mask1_L0, 0, 1
0x0176	0x139C      	IORWF       Glcd_Dot_ddata_L0, 1, 1
;__Lib_Glcd.c,351 :: 		
0x0178	0xD00C      	BRA         L_Glcd_Dot38
;__Lib_Glcd.c,352 :: 		
L_Glcd_Dot41:
;__Lib_Glcd.c,353 :: 		
0x017A	0x519A      	MOVF        Glcd_Dot_bit_mask1_L0, 0, 1
0x017C	0x1B9C      	XORWF       Glcd_Dot_ddata_L0, 1, 1
;__Lib_Glcd.c,354 :: 		
0x017E	0xD009      	BRA         L_Glcd_Dot38
L_Glcd_Dot37:
0x0180	0x5199      	MOVF        FARG_Glcd_Dot_color, 0, 1
0x0182	0x0A00      	XORLW       0
0x0184	0xE0F4      	BZ          L_Glcd_Dot39
0x0186	0x5199      	MOVF        FARG_Glcd_Dot_color, 0, 1
0x0188	0x0A01      	XORLW       1
0x018A	0xE0F4      	BZ          L_Glcd_Dot40
0x018C	0x5199      	MOVF        FARG_Glcd_Dot_color, 0, 1
0x018E	0x0A02      	XORLW       2
0x0190	0xE0F4      	BZ          L_Glcd_Dot41
L_Glcd_Dot38:
;__Lib_Glcd.c,356 :: 		
0x0192	0xF19DC19C  	MOVFF       Glcd_Dot_ddata_L0, FARG_Glcd_Write_Data_ddata
0x0196	0xDF77      	RCALL       _Glcd_Write_Data
;__Lib_Glcd.c,357 :: 		
L_end_Glcd_Dot:
0x0198	0x0012      	RETURN      0
; end of _Glcd_Dot
_Glcd_V_Line:
;__Lib_Glcd.c,473 :: 		
;__Lib_Glcd.c,475 :: 		
0x019A	0x0E00      	MOVLW       0
0x019C	0x0101      	MOVLB       1
0x019E	0x5D94      	SUBWF       FARG_Glcd_V_Line_x_pos, 0, 1
0x01A0	0xE304      	BNC         L__Glcd_V_Line301
0x01A2	0x5194      	MOVF        FARG_Glcd_V_Line_x_pos, 0, 1
0x01A4	0x087F      	SUBLW       127
0x01A6	0xE301      	BNC         L__Glcd_V_Line301
0x01A8	0xD001      	BRA         L_Glcd_V_Line74
L__Glcd_V_Line301:
;__Lib_Glcd.c,476 :: 		
0x01AA	0xD027      	BRA         L_end_Glcd_V_Line
L_Glcd_V_Line74:
;__Lib_Glcd.c,478 :: 		
0x01AC	0x0E00      	MOVLW       0
0x01AE	0x5D92      	SUBWF       FARG_Glcd_V_Line_y_start, 0, 1
0x01B0	0xA0D8      	BTFSS       STATUS, 0 
;__Lib_Glcd.c,479 :: 		
0x01B2	0x6B92      	CLRF        FARG_Glcd_V_Line_y_start, 1
L_Glcd_V_Line75:
;__Lib_Glcd.c,480 :: 		
0x01B4	0x5192      	MOVF        FARG_Glcd_V_Line_y_start, 0, 1
0x01B6	0x083F      	SUBLW       63
0x01B8	0xE202      	BC          L_Glcd_V_Line76
;__Lib_Glcd.c,481 :: 		
0x01BA	0x0E3F      	MOVLW       63
0x01BC	0x6F92      	MOVWF       FARG_Glcd_V_Line_y_start, 1
L_Glcd_V_Line76:
;__Lib_Glcd.c,483 :: 		
0x01BE	0x0E00      	MOVLW       0
0x01C0	0x5D93      	SUBWF       FARG_Glcd_V_Line_y_end, 0, 1
0x01C2	0xA0D8      	BTFSS       STATUS, 0 
;__Lib_Glcd.c,484 :: 		
0x01C4	0x6B93      	CLRF        FARG_Glcd_V_Line_y_end, 1
L_Glcd_V_Line77:
;__Lib_Glcd.c,485 :: 		
0x01C6	0x5193      	MOVF        FARG_Glcd_V_Line_y_end, 0, 1
0x01C8	0x083F      	SUBLW       63
0x01CA	0xE202      	BC          L_Glcd_V_Line78
;__Lib_Glcd.c,486 :: 		
0x01CC	0x0E3F      	MOVLW       63
0x01CE	0x6F93      	MOVWF       FARG_Glcd_V_Line_y_end, 1
L_Glcd_V_Line78:
;__Lib_Glcd.c,488 :: 		
0x01D0	0x5192      	MOVF        FARG_Glcd_V_Line_y_start, 0, 1
0x01D2	0x5D93      	SUBWF       FARG_Glcd_V_Line_y_end, 0, 1
0x01D4	0xE206      	BC          L_Glcd_V_Line79
;__Lib_Glcd.c,489 :: 		
0x01D6	0xF196C192  	MOVFF       FARG_Glcd_V_Line_y_start, Glcd_V_Line_loc_L0
;__Lib_Glcd.c,490 :: 		
0x01DA	0xF192C193  	MOVFF       FARG_Glcd_V_Line_y_end, FARG_Glcd_V_Line_y_start
;__Lib_Glcd.c,491 :: 		
0x01DE	0xF193C196  	MOVFF       Glcd_V_Line_loc_L0, FARG_Glcd_V_Line_y_end
;__Lib_Glcd.c,492 :: 		
L_Glcd_V_Line79:
;__Lib_Glcd.c,494 :: 		
L_Glcd_V_Line80:
0x01E2	0x5192      	MOVF        FARG_Glcd_V_Line_y_start, 0, 1
0x01E4	0x5D93      	SUBWF       FARG_Glcd_V_Line_y_end, 0, 1
0x01E6	0xE309      	BNC         L_Glcd_V_Line81
;__Lib_Glcd.c,495 :: 		
0x01E8	0xF197C194  	MOVFF       FARG_Glcd_V_Line_x_pos, FARG_Glcd_Dot_x_pos
0x01EC	0xF198C192  	MOVFF       FARG_Glcd_V_Line_y_start, FARG_Glcd_Dot_y_pos
0x01F0	0xF199C195  	MOVFF       FARG_Glcd_V_Line_color, FARG_Glcd_Dot_color
0x01F4	0xDF78      	RCALL       _Glcd_Dot
;__Lib_Glcd.c,496 :: 		
0x01F6	0x2B92      	INCF        FARG_Glcd_V_Line_y_start, 1, 1
;__Lib_Glcd.c,497 :: 		
0x01F8	0xD7F4      	BRA         L_Glcd_V_Line80
L_Glcd_V_Line81:
;__Lib_Glcd.c,498 :: 		
L_end_Glcd_V_Line:
0x01FA	0x0012      	RETURN      0
; end of _Glcd_V_Line
_Mul_16X16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x01FC	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,448 :: 		
0x01FE	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,449 :: 		
0x0200	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,450 :: 		
0x0202	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x0204	0x0204      	MULWF       R4, 0
;__Lib_Math.c,453 :: 		
0x0206	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x020A	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x020E	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x0210	0x0205      	MULWF       R5, 0
;__Lib_Math.c,458 :: 		
0x0212	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x0216	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x021A	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x021C	0x0205      	MULWF       R5, 0
;__Lib_Math.c,463 :: 		
0x021E	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x0220	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x0222	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x0224	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x0226	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,468 :: 		
0x0228	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x022A	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x022C	0x0204      	MULWF       R4, 0
;__Lib_Math.c,472 :: 		
0x022E	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x0230	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x0232	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x0234	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x0236	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,477 :: 		
0x0238	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x023A	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x023E	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x0242	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x0246	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16X16_U:
0x024A	0x0012      	RETURN      0
; end of _Mul_16X16_U
_Glcd_Write_Char:
;__Lib_Glcd.c,217 :: 		
;__Lib_Glcd.c,221 :: 		
0x024C	0x0101      	MOVLB       1
0x024E	0x518A      	MOVF        FARG_Glcd_Write_Char_page_num, 0, 1
0x0250	0x0807      	SUBLW       7
0x0252	0xE201      	BC          L_Glcd_Write_Char14
;__Lib_Glcd.c,222 :: 		
0x0254	0xD082      	BRA         L_end_Glcd_Write_Char
L_Glcd_Write_Char14:
;__Lib_Glcd.c,224 :: 		
0x0256	0x5173      	MOVF        __Lib_Glcd_fontOffset, 0, 1
0x0258	0x5D88      	SUBWF       FARG_Glcd_Write_Char_chr, 0, 1
0x025A	0x6E00      	MOVWF       R0 
0x025C	0xF001C174  	MOVFF       __Lib_Glcd_fontOffset+1, R1
0x0260	0x0E00      	MOVLW       0
0x0262	0x5601      	SUBFWB      R1, 1 
0x0264	0xF004C15D  	MOVFF       __Lib_Glcd_fontW, R4
0x0268	0x0E00      	MOVLW       0
0x026A	0x6E05      	MOVWF       R5 
0x026C	0xDFC7      	RCALL       _Mul_16X16_U
0x026E	0xF190C000  	MOVFF       R0, Glcd_Write_Char_pointer_L0
0x0272	0xF191C001  	MOVFF       R1, Glcd_Write_Char_pointer_L0+1
;__Lib_Glcd.c,226 :: 		
0x0276	0xF19DC189  	MOVFF       FARG_Glcd_Write_Char_x_pos, FARG_Glcd_Set_X_x_pos
0x027A	0xDF22      	RCALL       _Glcd_Set_X
;__Lib_Glcd.c,227 :: 		
0x027C	0xF19DC18A  	MOVFF       FARG_Glcd_Write_Char_page_num, FARG_Glcd_Set_Page_page
0x0280	0xDF17      	RCALL       _Glcd_Set_Page
;__Lib_Glcd.c,229 :: 		
0x0282	0x6B8C      	CLRF        Glcd_Write_Char_ii_L0, 1
L_Glcd_Write_Char15:
0x0284	0x515D      	MOVF        __Lib_Glcd_fontW, 0, 1
0x0286	0x5D8C      	SUBWF       Glcd_Write_Char_ii_L0, 0, 1
0x0288	0xE249      	BC          L_Glcd_Write_Char16
;__Lib_Glcd.c,230 :: 		
0x028A	0x5189      	MOVF        FARG_Glcd_Write_Char_x_pos, 0, 1
0x028C	0x087F      	SUBLW       127
0x028E	0xE201      	BC          L_Glcd_Write_Char18
;__Lib_Glcd.c,231 :: 		
0x0290	0xD064      	BRA         L_end_Glcd_Write_Char
L_Glcd_Write_Char18:
;__Lib_Glcd.c,232 :: 		
0x0292	0xF19DC189  	MOVFF       FARG_Glcd_Write_Char_x_pos, FARG_Glcd_Set_Side_x_pos
0x0296	0xDEFE      	RCALL       _Glcd_Set_Side
;__Lib_Glcd.c,233 :: 		
0x0298	0xF19DC18A  	MOVFF       FARG_Glcd_Write_Char_page_num, FARG_Glcd_Set_Page_page
0x029C	0xDF09      	RCALL       _Glcd_Set_Page
;__Lib_Glcd.c,234 :: 		
0x029E	0xF19DC189  	MOVFF       FARG_Glcd_Write_Char_x_pos, FARG_Glcd_Set_X_x_pos
0x02A2	0xDF0E      	RCALL       _Glcd_Set_X
;__Lib_Glcd.c,236 :: 		
0x02A4	0xDEC9      	RCALL       _Glcd_Read_Data
0x02A6	0xF18DC000  	MOVFF       R0, Glcd_Write_Char_data_read_L0
;__Lib_Glcd.c,237 :: 		
0x02AA	0xDEC6      	RCALL       _Glcd_Read_Data
0x02AC	0xF18DC000  	MOVFF       R0, Glcd_Write_Char_data_read_L0
;__Lib_Glcd.c,239 :: 		
0x02B0	0xF19DC189  	MOVFF       FARG_Glcd_Write_Char_x_pos, FARG_Glcd_Set_Side_x_pos
0x02B4	0xDEEF      	RCALL       _Glcd_Set_Side
;__Lib_Glcd.c,240 :: 		
0x02B6	0xF19DC18A  	MOVFF       FARG_Glcd_Write_Char_page_num, FARG_Glcd_Set_Page_page
0x02BA	0xDEFA      	RCALL       _Glcd_Set_Page
;__Lib_Glcd.c,241 :: 		
0x02BC	0xF19DC189  	MOVFF       FARG_Glcd_Write_Char_x_pos, FARG_Glcd_Set_X_x_pos
0x02C0	0xDEFF      	RCALL       _Glcd_Set_X
;__Lib_Glcd.c,244 :: 		
0x02C2	0x5190      	MOVF        Glcd_Write_Char_pointer_L0, 0, 1
0x02C4	0x255E      	ADDWF       __Lib_Glcd_fontDef, 0, 1
0x02C6	0x6EF6      	MOVWF       4086 
0x02C8	0x5191      	MOVF        Glcd_Write_Char_pointer_L0+1, 0, 1
0x02CA	0x215F      	ADDWFC      __Lib_Glcd_fontDef+1, 0, 1
0x02CC	0x6EF7      	MOVWF       TBLPTRH 
0x02CE	0x0E00      	MOVLW       0
0x02D0	0xBF91      	BTFSC       Glcd_Write_Char_pointer_L0+1, 7, 1
0x02D2	0x0EFF      	MOVLW       255
0x02D4	0x2160      	ADDWFC      __Lib_Glcd_fontDef+2, 0, 1
0x02D6	0x6EF8      	MOVWF       TBLPTRU 
0x02D8	0x0009      	TBLRD*+
0x02DA	0xF000CFF5  	MOVFF       TABLAT, R0
0x02DE	0xF18EC000  	MOVFF       R0, Glcd_Write_Char_font_ch_L0
0x02E2	0x4B90      	INFSNZ      Glcd_Write_Char_pointer_L0, 1, 1
0x02E4	0x2B91      	INCF        Glcd_Write_Char_pointer_L0+1, 1, 1
;__Lib_Glcd.c,245 :: 		
0x02E6	0x1C00      	COMF        R0, 0 
0x02E8	0x6F8F      	MOVWF       Glcd_Write_Char_font_ch_inv_L0, 1
;__Lib_Glcd.c,248 :: 		
0x02EA	0xD009      	BRA         L_Glcd_Write_Char19
;__Lib_Glcd.c,249 :: 		
L_Glcd_Write_Char21:
0x02EC	0xF18DC18F  	MOVFF       Glcd_Write_Char_font_ch_inv_L0, Glcd_Write_Char_data_read_L0
0x02F0	0xD00F      	BRA         L_Glcd_Write_Char20
;__Lib_Glcd.c,250 :: 		
L_Glcd_Write_Char22:
0x02F2	0xF18DC18E  	MOVFF       Glcd_Write_Char_font_ch_L0, Glcd_Write_Char_data_read_L0
0x02F6	0xD00C      	BRA         L_Glcd_Write_Char20
;__Lib_Glcd.c,251 :: 		
L_Glcd_Write_Char23:
0x02F8	0x518E      	MOVF        Glcd_Write_Char_font_ch_L0, 0, 1
0x02FA	0x1B8D      	XORWF       Glcd_Write_Char_data_read_L0, 1, 1
;__Lib_Glcd.c,252 :: 		
0x02FC	0xD009      	BRA         L_Glcd_Write_Char20
L_Glcd_Write_Char19:
0x02FE	0x518B      	MOVF        FARG_Glcd_Write_Char_color, 0, 1
0x0300	0x0A00      	XORLW       0
0x0302	0xE0F4      	BZ          L_Glcd_Write_Char21
0x0304	0x518B      	MOVF        FARG_Glcd_Write_Char_color, 0, 1
0x0306	0x0A01      	XORLW       1
0x0308	0xE0F4      	BZ          L_Glcd_Write_Char22
0x030A	0x518B      	MOVF        FARG_Glcd_Write_Char_color, 0, 1
0x030C	0x0A02      	XORLW       2
0x030E	0xE0F4      	BZ          L_Glcd_Write_Char23
L_Glcd_Write_Char20:
;__Lib_Glcd.c,254 :: 		
0x0310	0xF19DC18D  	MOVFF       Glcd_Write_Char_data_read_L0, FARG_Glcd_Write_Data_ddata
0x0314	0xDEB8      	RCALL       _Glcd_Write_Data
;__Lib_Glcd.c,255 :: 		
0x0316	0x2B89      	INCF        FARG_Glcd_Write_Char_x_pos, 1, 1
;__Lib_Glcd.c,229 :: 		
0x0318	0x2B8C      	INCF        Glcd_Write_Char_ii_L0, 1, 1
;__Lib_Glcd.c,256 :: 		
0x031A	0xD7B4      	BRA         L_Glcd_Write_Char15
L_Glcd_Write_Char16:
;__Lib_Glcd.c,259 :: 		
0x031C	0xF19DC189  	MOVFF       FARG_Glcd_Write_Char_x_pos, FARG_Glcd_Set_Side_x_pos
0x0320	0xDEB9      	RCALL       _Glcd_Set_Side
;__Lib_Glcd.c,260 :: 		
0x0322	0xF19DC18A  	MOVFF       FARG_Glcd_Write_Char_page_num, FARG_Glcd_Set_Page_page
0x0326	0xDEC4      	RCALL       _Glcd_Set_Page
;__Lib_Glcd.c,261 :: 		
0x0328	0xF19DC189  	MOVFF       FARG_Glcd_Write_Char_x_pos, FARG_Glcd_Set_X_x_pos
0x032C	0xDEC9      	RCALL       _Glcd_Set_X
;__Lib_Glcd.c,263 :: 		
0x032E	0x0EFF      	MOVLW       255
0x0330	0x6F8E      	MOVWF       Glcd_Write_Char_font_ch_L0, 1
;__Lib_Glcd.c,264 :: 		
0x0332	0x6B8F      	CLRF        Glcd_Write_Char_font_ch_inv_L0, 1
;__Lib_Glcd.c,266 :: 		
0x0334	0xD00C      	BRA         L_Glcd_Write_Char24
;__Lib_Glcd.c,267 :: 		
L_Glcd_Write_Char26:
;__Lib_Glcd.c,268 :: 		
0x0336	0xF18DC18E  	MOVFF       Glcd_Write_Char_font_ch_L0, Glcd_Write_Char_data_read_L0
;__Lib_Glcd.c,269 :: 		
0x033A	0xF19DC18E  	MOVFF       Glcd_Write_Char_font_ch_L0, FARG_Glcd_Write_Data_ddata
0x033E	0xDEA3      	RCALL       _Glcd_Write_Data
;__Lib_Glcd.c,270 :: 		
0x0340	0xD00C      	BRA         L_Glcd_Write_Char25
;__Lib_Glcd.c,271 :: 		
L_Glcd_Write_Char27:
;__Lib_Glcd.c,272 :: 		
0x0342	0xF18DC18F  	MOVFF       Glcd_Write_Char_font_ch_inv_L0, Glcd_Write_Char_data_read_L0
;__Lib_Glcd.c,273 :: 		
0x0346	0xF19DC18F  	MOVFF       Glcd_Write_Char_font_ch_inv_L0, FARG_Glcd_Write_Data_ddata
0x034A	0xDE9D      	RCALL       _Glcd_Write_Data
;__Lib_Glcd.c,274 :: 		
0x034C	0xD006      	BRA         L_Glcd_Write_Char25
;__Lib_Glcd.c,275 :: 		
L_Glcd_Write_Char24:
0x034E	0x518B      	MOVF        FARG_Glcd_Write_Char_color, 0, 1
0x0350	0x0A00      	XORLW       0
0x0352	0xE0F1      	BZ          L_Glcd_Write_Char26
0x0354	0x518B      	MOVF        FARG_Glcd_Write_Char_color, 0, 1
0x0356	0x0A01      	XORLW       1
0x0358	0xE0F4      	BZ          L_Glcd_Write_Char27
L_Glcd_Write_Char25:
;__Lib_Glcd.c,277 :: 		
L_end_Glcd_Write_Char:
0x035A	0x0012      	RETURN      0
; end of _Glcd_Write_Char
_draw_player:
;space.c,68 :: 		void draw_player(unsigned short x, unsigned short y,unsigned short color){
;space.c,70 :: 		Glcd_V_Line(y,y+6, x,color);
0x035C	0xF192C189  	MOVFF       FARG_draw_player_y, FARG_Glcd_V_Line_y_start
0x0360	0x0E06      	MOVLW       6
0x0362	0x0101      	MOVLB       1
0x0364	0x2589      	ADDWF       FARG_draw_player_y, 0, 1
0x0366	0x6F93      	MOVWF       FARG_Glcd_V_Line_y_end, 1
0x0368	0xF194C188  	MOVFF       FARG_draw_player_x, FARG_Glcd_V_Line_x_pos
0x036C	0xF195C18A  	MOVFF       FARG_draw_player_color, FARG_Glcd_V_Line_color
0x0370	0xDF14      	RCALL       _Glcd_V_Line
;space.c,71 :: 		Glcd_V_Line(y,y+6, x+1,color);
0x0372	0xF192C189  	MOVFF       FARG_draw_player_y, FARG_Glcd_V_Line_y_start
0x0376	0x0E06      	MOVLW       6
0x0378	0x2589      	ADDWF       FARG_draw_player_y, 0, 1
0x037A	0x6F93      	MOVWF       FARG_Glcd_V_Line_y_end, 1
0x037C	0x5188      	MOVF        FARG_draw_player_x, 0, 1
0x037E	0x0F01      	ADDLW       1
0x0380	0x6F94      	MOVWF       FARG_Glcd_V_Line_x_pos, 1
0x0382	0xF195C18A  	MOVFF       FARG_draw_player_color, FARG_Glcd_V_Line_color
0x0386	0xDF09      	RCALL       _Glcd_V_Line
;space.c,72 :: 		Glcd_V_Line(y,y+6, x+2,color);
0x0388	0xF192C189  	MOVFF       FARG_draw_player_y, FARG_Glcd_V_Line_y_start
0x038C	0x0E06      	MOVLW       6
0x038E	0x2589      	ADDWF       FARG_draw_player_y, 0, 1
0x0390	0x6F93      	MOVWF       FARG_Glcd_V_Line_y_end, 1
0x0392	0x0E02      	MOVLW       2
0x0394	0x2588      	ADDWF       FARG_draw_player_x, 0, 1
0x0396	0x6F94      	MOVWF       FARG_Glcd_V_Line_x_pos, 1
0x0398	0xF195C18A  	MOVFF       FARG_draw_player_color, FARG_Glcd_V_Line_color
0x039C	0xDEFE      	RCALL       _Glcd_V_Line
;space.c,73 :: 		Glcd_V_Line(y,y+6, x+3,color);
0x039E	0xF192C189  	MOVFF       FARG_draw_player_y, FARG_Glcd_V_Line_y_start
0x03A2	0x0E06      	MOVLW       6
0x03A4	0x2589      	ADDWF       FARG_draw_player_y, 0, 1
0x03A6	0x6F93      	MOVWF       FARG_Glcd_V_Line_y_end, 1
0x03A8	0x0E03      	MOVLW       3
0x03AA	0x2588      	ADDWF       FARG_draw_player_x, 0, 1
0x03AC	0x6F94      	MOVWF       FARG_Glcd_V_Line_x_pos, 1
0x03AE	0xF195C18A  	MOVFF       FARG_draw_player_color, FARG_Glcd_V_Line_color
0x03B2	0xDEF3      	RCALL       _Glcd_V_Line
;space.c,74 :: 		Glcd_V_Line(y,y+6, x+4,color);
0x03B4	0xF192C189  	MOVFF       FARG_draw_player_y, FARG_Glcd_V_Line_y_start
0x03B8	0x0E06      	MOVLW       6
0x03BA	0x2589      	ADDWF       FARG_draw_player_y, 0, 1
0x03BC	0x6F93      	MOVWF       FARG_Glcd_V_Line_y_end, 1
0x03BE	0x0E04      	MOVLW       4
0x03C0	0x2588      	ADDWF       FARG_draw_player_x, 0, 1
0x03C2	0x6F94      	MOVWF       FARG_Glcd_V_Line_x_pos, 1
0x03C4	0xF195C18A  	MOVFF       FARG_draw_player_color, FARG_Glcd_V_Line_color
0x03C8	0xDEE8      	RCALL       _Glcd_V_Line
;space.c,76 :: 		Glcd_Dot(x-1,y+6, color);
0x03CA	0x0588      	DECF        FARG_draw_player_x, 0, 1
0x03CC	0x6F97      	MOVWF       FARG_Glcd_Dot_x_pos, 1
0x03CE	0x0E06      	MOVLW       6
0x03D0	0x2589      	ADDWF       FARG_draw_player_y, 0, 1
0x03D2	0x6F98      	MOVWF       FARG_Glcd_Dot_y_pos, 1
0x03D4	0xF199C18A  	MOVFF       FARG_draw_player_color, FARG_Glcd_Dot_color
0x03D8	0xDE86      	RCALL       _Glcd_Dot
;space.c,77 :: 		Glcd_Dot(x-1,y+5, color);
0x03DA	0x0588      	DECF        FARG_draw_player_x, 0, 1
0x03DC	0x6F97      	MOVWF       FARG_Glcd_Dot_x_pos, 1
0x03DE	0x0E05      	MOVLW       5
0x03E0	0x2589      	ADDWF       FARG_draw_player_y, 0, 1
0x03E2	0x6F98      	MOVWF       FARG_Glcd_Dot_y_pos, 1
0x03E4	0xF199C18A  	MOVFF       FARG_draw_player_color, FARG_Glcd_Dot_color
0x03E8	0xDE7E      	RCALL       _Glcd_Dot
;space.c,78 :: 		Glcd_Dot(x-2,y+6, color);
0x03EA	0x0E02      	MOVLW       2
0x03EC	0x5D88      	SUBWF       FARG_draw_player_x, 0, 1
0x03EE	0x6F97      	MOVWF       FARG_Glcd_Dot_x_pos, 1
0x03F0	0x0E06      	MOVLW       6
0x03F2	0x2589      	ADDWF       FARG_draw_player_y, 0, 1
0x03F4	0x6F98      	MOVWF       FARG_Glcd_Dot_y_pos, 1
0x03F6	0xF199C18A  	MOVFF       FARG_draw_player_color, FARG_Glcd_Dot_color
0x03FA	0xDE75      	RCALL       _Glcd_Dot
;space.c,79 :: 		Glcd_Dot(x+5,y+6,color);
0x03FC	0x0E05      	MOVLW       5
0x03FE	0x2588      	ADDWF       FARG_draw_player_x, 0, 1
0x0400	0x6F97      	MOVWF       FARG_Glcd_Dot_x_pos, 1
0x0402	0x0E06      	MOVLW       6
0x0404	0x2589      	ADDWF       FARG_draw_player_y, 0, 1
0x0406	0x6F98      	MOVWF       FARG_Glcd_Dot_y_pos, 1
0x0408	0xF199C18A  	MOVFF       FARG_draw_player_color, FARG_Glcd_Dot_color
0x040C	0xDE6C      	RCALL       _Glcd_Dot
;space.c,80 :: 		Glcd_Dot(x+5,y+5, color);
0x040E	0x0E05      	MOVLW       5
0x0410	0x2588      	ADDWF       FARG_draw_player_x, 0, 1
0x0412	0x6F97      	MOVWF       FARG_Glcd_Dot_x_pos, 1
0x0414	0x0E05      	MOVLW       5
0x0416	0x2589      	ADDWF       FARG_draw_player_y, 0, 1
0x0418	0x6F98      	MOVWF       FARG_Glcd_Dot_y_pos, 1
0x041A	0xF199C18A  	MOVFF       FARG_draw_player_color, FARG_Glcd_Dot_color
0x041E	0xDE63      	RCALL       _Glcd_Dot
;space.c,81 :: 		Glcd_Dot(x+6, y+6, color);
0x0420	0x0E06      	MOVLW       6
0x0422	0x2588      	ADDWF       FARG_draw_player_x, 0, 1
0x0424	0x6F97      	MOVWF       FARG_Glcd_Dot_x_pos, 1
0x0426	0x0E06      	MOVLW       6
0x0428	0x2589      	ADDWF       FARG_draw_player_y, 0, 1
0x042A	0x6F98      	MOVWF       FARG_Glcd_Dot_y_pos, 1
0x042C	0xF199C18A  	MOVFF       FARG_draw_player_color, FARG_Glcd_Dot_color
0x0430	0xDE5A      	RCALL       _Glcd_Dot
;space.c,82 :: 		Glcd_Dot(x+5,y+6, color);
0x0432	0x0E05      	MOVLW       5
0x0434	0x2588      	ADDWF       FARG_draw_player_x, 0, 1
0x0436	0x6F97      	MOVWF       FARG_Glcd_Dot_x_pos, 1
0x0438	0x0E06      	MOVLW       6
0x043A	0x2589      	ADDWF       FARG_draw_player_y, 0, 1
0x043C	0x6F98      	MOVWF       FARG_Glcd_Dot_y_pos, 1
0x043E	0xF199C18A  	MOVFF       FARG_draw_player_color, FARG_Glcd_Dot_color
0x0442	0xDE51      	RCALL       _Glcd_Dot
;space.c,83 :: 		}
L_end_draw_player:
0x0444	0x0012      	RETURN      0
; end of _draw_player
_UART1_Write:
;__Lib_UART_c67.c,58 :: 		
;__Lib_UART_c67.c,59 :: 		
L_UART1_Write3:
0x0446	0xB2AC      	BTFSC       TXSTA, 1 
0x0448	0xD002      	BRA         L_UART1_Write4
;__Lib_UART_c67.c,60 :: 		
0x044A	0x0000      	NOP
0x044C	0xD7FC      	BRA         L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,61 :: 		
0x044E	0xFFADC188  	MOVFF       FARG_UART1_Write_data_, TXREG
;__Lib_UART_c67.c,62 :: 		
L_end_UART1_Write:
0x0452	0x0012      	RETURN      0
; end of _UART1_Write
_Delay_500us:
;__Lib_Delays.c,27 :: 		void Delay_500us() {
;__Lib_Delays.c,28 :: 		Delay_us(498);
0x0454	0x0E02      	MOVLW       2
0x0456	0x6E0C      	MOVWF       R12, 0
0x0458	0x0E49      	MOVLW       73
0x045A	0x6E0D      	MOVWF       R13, 0
L_Delay_500us4:
0x045C	0x2E0D      	DECFSZ      R13, 1, 0
0x045E	0xD7FE      	BRA         L_Delay_500us4
0x0460	0x2E0C      	DECFSZ      R12, 1, 0
0x0462	0xD7FC      	BRA         L_Delay_500us4
0x0464	0x0000      	NOP
0x0466	0x0000      	NOP
;__Lib_Delays.c,29 :: 		}
L_end_Delay_500us:
0x0468	0x0012      	RETURN      0
; end of _Delay_500us
_UART1_Tx_Idle:
;__Lib_UART_c67.c,52 :: 		
;__Lib_UART_c67.c,53 :: 		
0x046A	0x0E00      	MOVLW       0
0x046C	0xB2AC      	BTFSC       TXSTA, 1 
0x046E	0x0E01      	MOVLW       1
0x0470	0x6E00      	MOVWF       R0 
;__Lib_UART_c67.c,54 :: 		
L_end_UART1_Tx_Idle:
0x0472	0x0012      	RETURN      0
; end of _UART1_Tx_Idle
_UART1_Read:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,42 :: 		
0x0474	0xF001CFAE  	MOVFF       RCREG, R1
;__Lib_UART_c67.c,43 :: 		
0x0478	0xA2AB      	BTFSS       RCSTA, 1 
0x047A	0xD002      	BRA         L_UART1_Read2
;__Lib_UART_c67.c,44 :: 		
0x047C	0x98AB      	BCF         RCSTA, 4 
;__Lib_UART_c67.c,45 :: 		
0x047E	0x88AB      	BSF         RCSTA, 4 
;__Lib_UART_c67.c,46 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,47 :: 		
0x0480	0xF000C001  	MOVFF       R1, R0
;__Lib_UART_c67.c,48 :: 		
L_end_UART1_Read:
0x0484	0x0012      	RETURN      0
; end of _UART1_Read
_UART1_Data_Ready:
;__Lib_UART_c67.c,34 :: 		
;__Lib_UART_c67.c,35 :: 		
0x0486	0x0E00      	MOVLW       0
0x0488	0xBA9E      	BTFSC       PIR1, 5 
0x048A	0x0E01      	MOVLW       1
0x048C	0x6E00      	MOVWF       R0 
;__Lib_UART_c67.c,36 :: 		
L_end_UART1_Data_Ready:
0x048E	0x0012      	RETURN      0
; end of _UART1_Data_Ready
_Button:
;__Lib_Button.c,6 :: 		
;__Lib_Button.c,8 :: 		
0x0490	0x0101      	MOVLB       1
0x0492	0x6B87      	CLRF        Button_rslt_L0, 1
;__Lib_Button.c,11 :: 		
0x0494	0xF001C183  	MOVFF       FARG_Button_pin, R1
0x0498	0x0E01      	MOVLW       1
0x049A	0x6E00      	MOVWF       R0 
0x049C	0x5001      	MOVF        R1, 0 
L__Button5:
0x049E	0xE004      	BZ          L__Button6
0x04A0	0x3600      	RLCF        R0, 1 
0x04A2	0x9000      	BCF         R0, 0 
0x04A4	0x0FFF      	ADDLW       255
0x04A6	0xD7FB      	BRA         L__Button5
L__Button6:
0x04A8	0xF186C000  	MOVFF       R0, Button_pMask_L0
;__Lib_Button.c,13 :: 		
0x04AC	0xFFE9C181  	MOVFF       FARG_Button_port, FSR0L
0x04B0	0xFFEAC182  	MOVFF       FARG_Button_port+1, FSR0H
0x04B4	0x5000      	MOVF        R0, 0 
0x04B6	0x14EE      	ANDWF       POSTINC0, 0 
0x04B8	0x6E01      	MOVWF       R1 
0x04BA	0x5201      	MOVF        R1, 1 
0x04BC	0x0E01      	MOVLW       1
0x04BE	0xA4D8      	BTFSS       STATUS, 2 
0x04C0	0x0E00      	MOVLW       0
0x04C2	0x6E00      	MOVWF       R0 
0x04C4	0x5185      	MOVF        FARG_Button_active_state, 0, 1
0x04C6	0x1A00      	XORWF       R0, 1 
0x04C8	0xE018      	BZ          L_Button0
;__Lib_Button.c,15 :: 		
L_Button1:
0x04CA	0x5184      	MOVF        FARG_Button_time_ms, 0, 1
0x04CC	0x0800      	SUBLW       0
0x04CE	0xE204      	BC          L_Button2
;__Lib_Button.c,16 :: 		
0x04D0	0xDFC1      	RCALL       _Delay_500us
;__Lib_Button.c,17 :: 		
0x04D2	0xDFC0      	RCALL       _Delay_500us
;__Lib_Button.c,18 :: 		
0x04D4	0x0784      	DECF        FARG_Button_time_ms, 1, 1
;__Lib_Button.c,19 :: 		
0x04D6	0xD7F9      	BRA         L_Button1
L_Button2:
;__Lib_Button.c,21 :: 		
0x04D8	0xFFE9C181  	MOVFF       FARG_Button_port, FSR0L
0x04DC	0xFFEAC182  	MOVFF       FARG_Button_port+1, FSR0H
0x04E0	0x5186      	MOVF        Button_pMask_L0, 0, 1
0x04E2	0x14EE      	ANDWF       POSTINC0, 0 
0x04E4	0x6E01      	MOVWF       R1 
0x04E6	0x5201      	MOVF        R1, 1 
0x04E8	0x0E01      	MOVLW       1
0x04EA	0xA4D8      	BTFSS       STATUS, 2 
0x04EC	0x0E00      	MOVLW       0
0x04EE	0x6E00      	MOVWF       R0 
0x04F0	0x5185      	MOVF        FARG_Button_active_state, 0, 1
0x04F2	0x1A00      	XORWF       R0, 1 
0x04F4	0xE002      	BZ          L_Button3
;__Lib_Button.c,22 :: 		
0x04F6	0x0EFF      	MOVLW       255
0x04F8	0x6F87      	MOVWF       Button_rslt_L0, 1
L_Button3:
;__Lib_Button.c,23 :: 		
L_Button0:
;__Lib_Button.c,25 :: 		
0x04FA	0xF000C187  	MOVFF       Button_rslt_L0, R0
;__Lib_Button.c,26 :: 		
L_end_Button:
0x04FE	0x0012      	RETURN      0
; end of _Button
_Glcd_Fill:
;__Lib_Glcd.c,125 :: 		
;__Lib_Glcd.c,128 :: 		
0x0500	0x908A      	BCF         GLCD_CS1, BitPos(GLCD_CS1+0) 
0x0502	0x828A      	BSF         GLCD_CS2, BitPos(GLCD_CS2+0) 
;__Lib_Glcd.c,129 :: 		
0x0504	0x0101      	MOVLB       1
0x0506	0x6B83      	CLRF        Glcd_Fill_page_L0, 1
L_Glcd_Fill2:
0x0508	0x5183      	MOVF        Glcd_Fill_page_L0, 0, 1
0x050A	0x0807      	SUBLW       7
0x050C	0xE30E      	BNC         L_Glcd_Fill3
;__Lib_Glcd.c,130 :: 		
0x050E	0xF19DC183  	MOVFF       Glcd_Fill_page_L0, FARG_Glcd_Set_Page_page
0x0512	0xDDCE      	RCALL       _Glcd_Set_Page
;__Lib_Glcd.c,132 :: 		
0x0514	0x6B82      	CLRF        Glcd_Fill_yy_L0, 1
L_Glcd_Fill5:
0x0516	0x5182      	MOVF        Glcd_Fill_yy_L0, 0, 1
0x0518	0x083F      	SUBLW       63
0x051A	0xE305      	BNC         L_Glcd_Fill6
;__Lib_Glcd.c,133 :: 		
0x051C	0xF19DC181  	MOVFF       FARG_Glcd_Fill_pattern, FARG_Glcd_Write_Data_ddata
0x0520	0xDDB2      	RCALL       _Glcd_Write_Data
;__Lib_Glcd.c,132 :: 		
0x0522	0x2B82      	INCF        Glcd_Fill_yy_L0, 1, 1
;__Lib_Glcd.c,135 :: 		
0x0524	0xD7F8      	BRA         L_Glcd_Fill5
L_Glcd_Fill6:
;__Lib_Glcd.c,129 :: 		
0x0526	0x2B83      	INCF        Glcd_Fill_page_L0, 1, 1
;__Lib_Glcd.c,136 :: 		
0x0528	0xD7EF      	BRA         L_Glcd_Fill2
L_Glcd_Fill3:
;__Lib_Glcd.c,138 :: 		
0x052A	0x928A      	BCF         GLCD_CS2, BitPos(GLCD_CS2+0) 
0x052C	0x808A      	BSF         GLCD_CS1, BitPos(GLCD_CS1+0) 
;__Lib_Glcd.c,139 :: 		
0x052E	0x6B83      	CLRF        Glcd_Fill_page_L0, 1
L_Glcd_Fill8:
0x0530	0x5183      	MOVF        Glcd_Fill_page_L0, 0, 1
0x0532	0x0807      	SUBLW       7
0x0534	0xE30E      	BNC         L_Glcd_Fill9
;__Lib_Glcd.c,140 :: 		
0x0536	0xF19DC183  	MOVFF       Glcd_Fill_page_L0, FARG_Glcd_Set_Page_page
0x053A	0xDDBA      	RCALL       _Glcd_Set_Page
;__Lib_Glcd.c,141 :: 		
0x053C	0x6B82      	CLRF        Glcd_Fill_yy_L0, 1
L_Glcd_Fill11:
0x053E	0x5182      	MOVF        Glcd_Fill_yy_L0, 0, 1
0x0540	0x083F      	SUBLW       63
0x0542	0xE305      	BNC         L_Glcd_Fill12
;__Lib_Glcd.c,142 :: 		
0x0544	0xF19DC181  	MOVFF       FARG_Glcd_Fill_pattern, FARG_Glcd_Write_Data_ddata
0x0548	0xDD9E      	RCALL       _Glcd_Write_Data
;__Lib_Glcd.c,141 :: 		
0x054A	0x2B82      	INCF        Glcd_Fill_yy_L0, 1, 1
;__Lib_Glcd.c,142 :: 		
0x054C	0xD7F8      	BRA         L_Glcd_Fill11
L_Glcd_Fill12:
;__Lib_Glcd.c,139 :: 		
0x054E	0x2B83      	INCF        Glcd_Fill_page_L0, 1, 1
;__Lib_Glcd.c,143 :: 		
0x0550	0xD7EF      	BRA         L_Glcd_Fill8
L_Glcd_Fill9:
;__Lib_Glcd.c,144 :: 		
L_end_Glcd_Fill:
0x0552	0x0012      	RETURN      0
; end of _Glcd_Fill
_Glcd_Write_Text:
;__Lib_Glcd.c,281 :: 		
;__Lib_Glcd.c,282 :: 		
0x0554	0x0101      	MOVLB       1
0x0556	0x6B86      	CLRF        Glcd_Write_Text_i_L0, 1
;__Lib_Glcd.c,284 :: 		
0x0558	0x515B      	MOVF        __Lib_Glcd_FontInitialized, 0, 1
0x055A	0x0A00      	XORLW       0
0x055C	0xE10E      	BNZ         L_Glcd_Write_Text28
;__Lib_Glcd.c,286 :: 		
0x055E	0x0E05      	MOVLW       5
0x0560	0x6F5D      	MOVWF       __Lib_Glcd_fontW, 1
;__Lib_Glcd.c,287 :: 		
0x0562	0x0E07      	MOVLW       7
0x0564	0x6F5C      	MOVWF       __Lib_Glcd_fontH, 1
;__Lib_Glcd.c,288 :: 		
0x0566	0x0EBC      	MOVLW       _font5x7
0x0568	0x6F5E      	MOVWF       __Lib_Glcd_fontDef, 1
0x056A	0x0E1B      	MOVLW       hi_addr(_font5x7)
0x056C	0x6F5F      	MOVWF       __Lib_Glcd_fontDef+1, 1
0x056E	0x0E00      	MOVLW       higher_addr(_font5x7)
0x0570	0x6F60      	MOVWF       __Lib_Glcd_fontDef+2, 1
;__Lib_Glcd.c,289 :: 		
0x0572	0x0E20      	MOVLW       32
0x0574	0x6F73      	MOVWF       __Lib_Glcd_fontOffset, 1
0x0576	0x0E00      	MOVLW       0
0x0578	0x6F74      	MOVWF       __Lib_Glcd_fontOffset+1, 1
;__Lib_Glcd.c,290 :: 		
L_Glcd_Write_Text28:
;__Lib_Glcd.c,293 :: 		
L_Glcd_Write_Text29:
0x057A	0x5186      	MOVF        Glcd_Write_Text_i_L0, 0, 1
0x057C	0x2581      	ADDWF       FARG_Glcd_Write_Text_text, 0, 1
0x057E	0x6EE9      	MOVWF       FSR0L 
0x0580	0x0E00      	MOVLW       0
0x0582	0x2182      	ADDWFC      FARG_Glcd_Write_Text_text+1, 0, 1
0x0584	0x6EEA      	MOVWF       FSR0H 
0x0586	0x52EE      	MOVF        POSTINC0, 1 
0x0588	0xE016      	BZ          L_Glcd_Write_Text30
;__Lib_Glcd.c,294 :: 		
0x058A	0x5186      	MOVF        Glcd_Write_Text_i_L0, 0, 1
0x058C	0x2581      	ADDWF       FARG_Glcd_Write_Text_text, 0, 1
0x058E	0x6EE9      	MOVWF       FSR0L 
0x0590	0x0E00      	MOVLW       0
0x0592	0x2182      	ADDWFC      FARG_Glcd_Write_Text_text+1, 0, 1
0x0594	0x6EEA      	MOVWF       FSR0H 
0x0596	0xF188CFEE  	MOVFF       POSTINC0, FARG_Glcd_Write_Char_chr
0x059A	0xF189C183  	MOVFF       FARG_Glcd_Write_Text_x_pos, FARG_Glcd_Write_Char_x_pos
0x059E	0xF18AC184  	MOVFF       FARG_Glcd_Write_Text_page_num, FARG_Glcd_Write_Char_page_num
0x05A2	0xF18BC185  	MOVFF       FARG_Glcd_Write_Text_color, FARG_Glcd_Write_Char_color
0x05A6	0xDE52      	RCALL       _Glcd_Write_Char
;__Lib_Glcd.c,295 :: 		
0x05A8	0x515D      	MOVF        __Lib_Glcd_fontW, 0, 1
0x05AA	0x0F01      	ADDLW       1
0x05AC	0x6E00      	MOVWF       R0 
0x05AE	0x5000      	MOVF        R0, 0 
0x05B0	0x2783      	ADDWF       FARG_Glcd_Write_Text_x_pos, 1, 1
;__Lib_Glcd.c,296 :: 		
0x05B2	0x2B86      	INCF        Glcd_Write_Text_i_L0, 1, 1
;__Lib_Glcd.c,297 :: 		
0x05B4	0xD7E2      	BRA         L_Glcd_Write_Text29
L_Glcd_Write_Text30:
;__Lib_Glcd.c,298 :: 		
L_end_Glcd_Write_Text:
0x05B6	0x0012      	RETURN      0
; end of _Glcd_Write_Text
_move_player:
;space.c,151 :: 		void move_player(unsigned short i, unsigned short direction,unsigned short a){  // con a = 0 es one player
;space.c,152 :: 		if(turn == 3 || a == 1){                                                //con a = 1 es multiplayer
0x05B8	0x0100      	MOVLB       0
0x05BA	0x51A5      	MOVF        _turn, 0, 1
0x05BC	0x0A03      	XORLW       3
0x05BE	0xE005      	BZ          L__move_player164
0x05C0	0x0101      	MOVLB       1
0x05C2	0x5183      	MOVF        FARG_move_player_a, 0, 1
0x05C4	0x0A01      	XORLW       1
0x05C6	0xE001      	BZ          L__move_player164
0x05C8	0xD0FE      	BRA         L_move_player22
L__move_player164:
0x05CA	0x0101      	MOVLB       1
;space.c,153 :: 		if(direction == 2){//hacia abajo
0x05CC	0x5182      	MOVF        FARG_move_player_direction, 0, 1
0x05CE	0x0A02      	XORLW       2
0x05D0	0xE147      	BNZ         L_move_player23
;space.c,154 :: 		if(ship[i].y >= 57){
0x05D2	0xF000C181  	MOVFF       FARG_move_player_i, R0
0x05D6	0x0E00      	MOVLW       0
0x05D8	0x6E01      	MOVWF       R1 
0x05DA	0x3600      	RLCF        R0, 1 
0x05DC	0x9000      	BCF         R0, 0 
0x05DE	0x3601      	RLCF        R1, 1 
0x05E0	0x0EFE      	MOVLW       _ship
0x05E2	0x2600      	ADDWF       R0, 1 
0x05E4	0x0E00      	MOVLW       hi_addr(_ship)
0x05E6	0x2201      	ADDWFC      R1, 1 
0x05E8	0x0E01      	MOVLW       1
0x05EA	0x2400      	ADDWF       R0, 0 
0x05EC	0x6EE9      	MOVWF       FSR0L 
0x05EE	0x0E00      	MOVLW       0
0x05F0	0x2001      	ADDWFC      R1, 0 
0x05F2	0x6EEA      	MOVWF       FSR0H 
0x05F4	0x0E39      	MOVLW       57
0x05F6	0x5CEE      	SUBWF       POSTINC0, 0 
0x05F8	0xE314      	BNC         L_move_player24
;space.c,155 :: 		ship[i].y = 57;
0x05FA	0xF000C181  	MOVFF       FARG_move_player_i, R0
0x05FE	0x0E00      	MOVLW       0
0x0600	0x6E01      	MOVWF       R1 
0x0602	0x3600      	RLCF        R0, 1 
0x0604	0x9000      	BCF         R0, 0 
0x0606	0x3601      	RLCF        R1, 1 
0x0608	0x0EFE      	MOVLW       _ship
0x060A	0x2600      	ADDWF       R0, 1 
0x060C	0x0E00      	MOVLW       hi_addr(_ship)
0x060E	0x2201      	ADDWFC      R1, 1 
0x0610	0x0E01      	MOVLW       1
0x0612	0x2400      	ADDWF       R0, 0 
0x0614	0x6EE1      	MOVWF       FSR1L 
0x0616	0x0E00      	MOVLW       0
0x0618	0x2001      	ADDWFC      R1, 0 
0x061A	0x6EE2      	MOVWF       FSR1H 
0x061C	0x0E39      	MOVLW       57
0x061E	0x6EE6      	MOVWF       POSTINC1 
;space.c,156 :: 		}
0x0620	0xD01E      	BRA         L_move_player25
L_move_player24:
;space.c,158 :: 		ship[i].y += 2;
0x0622	0xF000C181  	MOVFF       FARG_move_player_i, R0
0x0626	0x0E00      	MOVLW       0
0x0628	0x6E01      	MOVWF       R1 
0x062A	0x3600      	RLCF        R0, 1 
0x062C	0x9000      	BCF         R0, 0 
0x062E	0x3601      	RLCF        R1, 1 
0x0630	0x0EFE      	MOVLW       _ship
0x0632	0x2600      	ADDWF       R0, 1 
0x0634	0x0E00      	MOVLW       hi_addr(_ship)
0x0636	0x2201      	ADDWFC      R1, 1 
0x0638	0x0E01      	MOVLW       1
0x063A	0x2400      	ADDWF       R0, 0 
0x063C	0x6E02      	MOVWF       R2 
0x063E	0x0E00      	MOVLW       0
0x0640	0x2001      	ADDWFC      R1, 0 
0x0642	0x6E03      	MOVWF       R3 
0x0644	0xFFE9C002  	MOVFF       R2, FSR0L
0x0648	0xFFEAC003  	MOVFF       R3, FSR0H
0x064C	0x0E02      	MOVLW       2
0x064E	0x24EE      	ADDWF       POSTINC0, 0 
0x0650	0x6E00      	MOVWF       R0 
0x0652	0xFFE1C002  	MOVFF       R2, FSR1L
0x0656	0xFFE2C003  	MOVFF       R3, FSR1H
0x065A	0xFFE6C000  	MOVFF       R0, POSTINC1
;space.c,159 :: 		}
L_move_player25:
;space.c,160 :: 		}
0x065E	0xD0B3      	BRA         L_move_player26
L_move_player23:
0x0660	0x0101      	MOVLB       1
;space.c,161 :: 		else if(direction == 1){//hacia arriba
0x0662	0x5182      	MOVF        FARG_move_player_direction, 0, 1
0x0664	0x0A01      	XORLW       1
0x0666	0xA4D8      	BTFSS       STATUS, 2 
0x0668	0xD0AE      	BRA         L_move_player27
;space.c,162 :: 		if(ship[i].y <= 3){
0x066A	0xF000C181  	MOVFF       FARG_move_player_i, R0
0x066E	0x0E00      	MOVLW       0
0x0670	0x6E01      	MOVWF       R1 
0x0672	0x3600      	RLCF        R0, 1 
0x0674	0x9000      	BCF         R0, 0 
0x0676	0x3601      	RLCF        R1, 1 
0x0678	0x0EFE      	MOVLW       _ship
0x067A	0x2600      	ADDWF       R0, 1 
0x067C	0x0E00      	MOVLW       hi_addr(_ship)
0x067E	0x2201      	ADDWFC      R1, 1 
0x0680	0x0E01      	MOVLW       1
0x0682	0x2400      	ADDWF       R0, 0 
0x0684	0x6EE9      	MOVWF       FSR0L 
0x0686	0x0E00      	MOVLW       0
0x0688	0x2001      	ADDWFC      R1, 0 
0x068A	0x6EEA      	MOVWF       FSR0H 
0x068C	0x50EE      	MOVF        POSTINC0, 0 
0x068E	0x0803      	SUBLW       3
0x0690	0xA0D8      	BTFSS       STATUS, 0 
0x0692	0xD07B      	BRA         L_move_player28
;space.c,164 :: 		score[i] += 1;
0x0694	0x0E4A      	MOVLW       _score
0x0696	0x6E01      	MOVWF       R1 
0x0698	0x0E00      	MOVLW       hi_addr(_score)
0x069A	0x6E02      	MOVWF       R2 
0x069C	0x5181      	MOVF        FARG_move_player_i, 0, 1
0x069E	0x2601      	ADDWF       R1, 1 
0x06A0	0xB0D8      	BTFSC       STATUS, 0 
0x06A2	0x2A02      	INCF        R2, 1 
0x06A4	0xFFE9C001  	MOVFF       R1, FSR0L
0x06A8	0xFFEAC002  	MOVFF       R2, FSR0H
0x06AC	0x50EE      	MOVF        POSTINC0, 0 
0x06AE	0x0F01      	ADDLW       1
0x06B0	0x6E00      	MOVWF       R0 
0x06B2	0xFFE1C001  	MOVFF       R1, FSR1L
0x06B6	0xFFE2C002  	MOVFF       R2, FSR1H
0x06BA	0xFFE6C000  	MOVFF       R0, POSTINC1
;space.c,165 :: 		draw_player(ship[i].x, ship[i].y, 0);
0x06BE	0xF000C181  	MOVFF       FARG_move_player_i, R0
0x06C2	0x0E00      	MOVLW       0
0x06C4	0x6E01      	MOVWF       R1 
0x06C6	0x3600      	RLCF        R0, 1 
0x06C8	0x9000      	BCF         R0, 0 
0x06CA	0x3601      	RLCF        R1, 1 
0x06CC	0x0EFE      	MOVLW       _ship
0x06CE	0x2600      	ADDWF       R0, 1 
0x06D0	0x0E00      	MOVLW       hi_addr(_ship)
0x06D2	0x2201      	ADDWFC      R1, 1 
0x06D4	0xFFE9C000  	MOVFF       R0, FSR0L
0x06D8	0xFFEAC001  	MOVFF       R1, FSR0H
0x06DC	0xF188CFEE  	MOVFF       POSTINC0, FARG_draw_player_x
0x06E0	0x0E01      	MOVLW       1
0x06E2	0x2400      	ADDWF       R0, 0 
0x06E4	0x6EE9      	MOVWF       FSR0L 
0x06E6	0x0E00      	MOVLW       0
0x06E8	0x2001      	ADDWFC      R1, 0 
0x06EA	0x6EEA      	MOVWF       FSR0H 
0x06EC	0xF189CFEE  	MOVFF       POSTINC0, FARG_draw_player_y
0x06F0	0x6B8A      	CLRF        FARG_draw_player_color, 1
0x06F2	0xDE34      	RCALL       _draw_player
;space.c,166 :: 		if (i==0){
0x06F4	0x5181      	MOVF        FARG_move_player_i, 0, 1
0x06F6	0x0A00      	XORLW       0
0x06F8	0xE122      	BNZ         L_move_player29
;space.c,167 :: 		ship[i].x = 40;
0x06FA	0xF000C181  	MOVFF       FARG_move_player_i, R0
0x06FE	0x0E00      	MOVLW       0
0x0700	0x6E01      	MOVWF       R1 
0x0702	0x3600      	RLCF        R0, 1 
0x0704	0x9000      	BCF         R0, 0 
0x0706	0x3601      	RLCF        R1, 1 
0x0708	0x0EFE      	MOVLW       _ship
0x070A	0x2400      	ADDWF       R0, 0 
0x070C	0x6EE1      	MOVWF       FSR1L 
0x070E	0x0E00      	MOVLW       hi_addr(_ship)
0x0710	0x2001      	ADDWFC      R1, 0 
0x0712	0x6EE2      	MOVWF       FSR1H 
0x0714	0x0E28      	MOVLW       40
0x0716	0x6EE6      	MOVWF       POSTINC1 
;space.c,168 :: 		ship[i].y = 57;
0x0718	0xF000C181  	MOVFF       FARG_move_player_i, R0
0x071C	0x0E00      	MOVLW       0
0x071E	0x6E01      	MOVWF       R1 
0x0720	0x3600      	RLCF        R0, 1 
0x0722	0x9000      	BCF         R0, 0 
0x0724	0x3601      	RLCF        R1, 1 
0x0726	0x0EFE      	MOVLW       _ship
0x0728	0x2600      	ADDWF       R0, 1 
0x072A	0x0E00      	MOVLW       hi_addr(_ship)
0x072C	0x2201      	ADDWFC      R1, 1 
0x072E	0x0E01      	MOVLW       1
0x0730	0x2400      	ADDWF       R0, 0 
0x0732	0x6EE1      	MOVWF       FSR1L 
0x0734	0x0E00      	MOVLW       0
0x0736	0x2001      	ADDWFC      R1, 0 
0x0738	0x6EE2      	MOVWF       FSR1H 
0x073A	0x0E39      	MOVLW       57
0x073C	0x6EE6      	MOVWF       POSTINC1 
;space.c,169 :: 		}
L_move_player29:
;space.c,170 :: 		if (i==1){
0x073E	0x5181      	MOVF        FARG_move_player_i, 0, 1
0x0740	0x0A01      	XORLW       1
0x0742	0xE122      	BNZ         L_move_player30
;space.c,171 :: 		ship[i].x = 80;
0x0744	0xF000C181  	MOVFF       FARG_move_player_i, R0
0x0748	0x0E00      	MOVLW       0
0x074A	0x6E01      	MOVWF       R1 
0x074C	0x3600      	RLCF        R0, 1 
0x074E	0x9000      	BCF         R0, 0 
0x0750	0x3601      	RLCF        R1, 1 
0x0752	0x0EFE      	MOVLW       _ship
0x0754	0x2400      	ADDWF       R0, 0 
0x0756	0x6EE1      	MOVWF       FSR1L 
0x0758	0x0E00      	MOVLW       hi_addr(_ship)
0x075A	0x2001      	ADDWFC      R1, 0 
0x075C	0x6EE2      	MOVWF       FSR1H 
0x075E	0x0E50      	MOVLW       80
0x0760	0x6EE6      	MOVWF       POSTINC1 
;space.c,172 :: 		ship[i].y = 57;
0x0762	0xF000C181  	MOVFF       FARG_move_player_i, R0
0x0766	0x0E00      	MOVLW       0
0x0768	0x6E01      	MOVWF       R1 
0x076A	0x3600      	RLCF        R0, 1 
0x076C	0x9000      	BCF         R0, 0 
0x076E	0x3601      	RLCF        R1, 1 
0x0770	0x0EFE      	MOVLW       _ship
0x0772	0x2600      	ADDWF       R0, 1 
0x0774	0x0E00      	MOVLW       hi_addr(_ship)
0x0776	0x2201      	ADDWFC      R1, 1 
0x0778	0x0E01      	MOVLW       1
0x077A	0x2400      	ADDWF       R0, 0 
0x077C	0x6EE1      	MOVWF       FSR1L 
0x077E	0x0E00      	MOVLW       0
0x0780	0x2001      	ADDWFC      R1, 0 
0x0782	0x6EE2      	MOVWF       FSR1H 
0x0784	0x0E39      	MOVLW       57
0x0786	0x6EE6      	MOVWF       POSTINC1 
;space.c,173 :: 		}
L_move_player30:
;space.c,174 :: 		}
0x0788	0xD01E      	BRA         L_move_player31
L_move_player28:
;space.c,176 :: 		ship[i].y -= 2;
0x078A	0xF000C181  	MOVFF       FARG_move_player_i, R0
0x078E	0x0E00      	MOVLW       0
0x0790	0x6E01      	MOVWF       R1 
0x0792	0x3600      	RLCF        R0, 1 
0x0794	0x9000      	BCF         R0, 0 
0x0796	0x3601      	RLCF        R1, 1 
0x0798	0x0EFE      	MOVLW       _ship
0x079A	0x2600      	ADDWF       R0, 1 
0x079C	0x0E00      	MOVLW       hi_addr(_ship)
0x079E	0x2201      	ADDWFC      R1, 1 
0x07A0	0x0E01      	MOVLW       1
0x07A2	0x2400      	ADDWF       R0, 0 
0x07A4	0x6E02      	MOVWF       R2 
0x07A6	0x0E00      	MOVLW       0
0x07A8	0x2001      	ADDWFC      R1, 0 
0x07AA	0x6E03      	MOVWF       R3 
0x07AC	0xFFE9C002  	MOVFF       R2, FSR0L
0x07B0	0xFFEAC003  	MOVFF       R3, FSR0H
0x07B4	0x0E02      	MOVLW       2
0x07B6	0x5CEE      	SUBWF       POSTINC0, 0 
0x07B8	0x6E00      	MOVWF       R0 
0x07BA	0xFFE1C002  	MOVFF       R2, FSR1L
0x07BE	0xFFE2C003  	MOVFF       R3, FSR1H
0x07C2	0xFFE6C000  	MOVFF       R0, POSTINC1
;space.c,177 :: 		}
L_move_player31:
;space.c,178 :: 		}
L_move_player27:
L_move_player26:
;space.c,179 :: 		}
L_move_player22:
;space.c,180 :: 		}
L_end_move_player:
0x07C6	0x0012      	RETURN      0
; end of _move_player
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x07C8	0x0E0E      	MOVLW       14
0x07CA	0x6E0D      	MOVWF       R13, 0
L_Delay_22us1:
0x07CC	0x2E0D      	DECFSZ      R13, 1, 0
0x07CE	0xD7FE      	BRA         L_Delay_22us1
0x07D0	0x0000      	NOP
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x07D2	0x0012      	RETURN      0
; end of _Delay_22us
_UART1_Write_Text:
;__Lib_UART_c67.c,66 :: 		
;__Lib_UART_c67.c,67 :: 		
0x07D4	0x0101      	MOVLB       1
0x07D6	0x6B84      	CLRF        UART1_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,69 :: 		
0x07D8	0xFFE9C181  	MOVFF       FARG_UART1_Write_Text_uart_text, FSR0L
0x07DC	0xFFEAC182  	MOVFF       FARG_UART1_Write_Text_uart_text+1, FSR0H
0x07E0	0xF183CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,70 :: 		
L_UART1_Write_Text5:
0x07E4	0x5183      	MOVF        UART1_Write_Text_data__L0, 0, 1
0x07E6	0x0A00      	XORLW       0
0x07E8	0xE00E      	BZ          L_UART1_Write_Text6
;__Lib_UART_c67.c,71 :: 		
0x07EA	0xF188C183  	MOVFF       UART1_Write_Text_data__L0, FARG_UART1_Write_data_
0x07EE	0xDE2B      	RCALL       _UART1_Write
;__Lib_UART_c67.c,72 :: 		
0x07F0	0x0101      	MOVLB       1
0x07F2	0x2B84      	INCF        UART1_Write_Text_counter_L0, 1, 1
;__Lib_UART_c67.c,73 :: 		
0x07F4	0x5184      	MOVF        UART1_Write_Text_counter_L0, 0, 1
0x07F6	0x2581      	ADDWF       FARG_UART1_Write_Text_uart_text, 0, 1
0x07F8	0x6EE9      	MOVWF       FSR0L 
0x07FA	0x0E00      	MOVLW       0
0x07FC	0x2182      	ADDWFC      FARG_UART1_Write_Text_uart_text+1, 0, 1
0x07FE	0x6EEA      	MOVWF       FSR0H 
0x0800	0xF183CFEE  	MOVFF       POSTINC0, UART1_Write_Text_data__L0
;__Lib_UART_c67.c,74 :: 		
0x0804	0xD7EF      	BRA         L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,75 :: 		
L_end_UART1_Write_Text:
0x0806	0x0012      	RETURN      0
; end of _UART1_Write_Text
_move_ia:
;space.c,182 :: 		void move_ia(){
;space.c,186 :: 		areaX = ship[1].x;
0x0808	0xF024C100  	MOVFF       _ship+2, _areaX
;space.c,187 :: 		areaY = ship[1].y;
0x080C	0xF025C101  	MOVFF       _ship+3, _areaY
;space.c,188 :: 		centerShip = ship[1].y;
0x0810	0xF015C101  	MOVFF       _ship+3, _centerShip
;space.c,196 :: 		draw_player(ship[1].x, ship[1].y, 0);
0x0814	0xF188C100  	MOVFF       _ship+2, FARG_draw_player_x
0x0818	0xF189C101  	MOVFF       _ship+3, FARG_draw_player_y
0x081C	0x0101      	MOVLB       1
0x081E	0x6B8A      	CLRF        FARG_draw_player_color, 1
0x0820	0xDD9D      	RCALL       _draw_player
;space.c,197 :: 		move_player(1,1,1);
0x0822	0x0E01      	MOVLW       1
0x0824	0x6F81      	MOVWF       FARG_move_player_i, 1
0x0826	0x0E01      	MOVLW       1
0x0828	0x6F82      	MOVWF       FARG_move_player_direction, 1
0x082A	0x0E01      	MOVLW       1
0x082C	0x6F83      	MOVWF       FARG_move_player_a, 1
0x082E	0xDEC4      	RCALL       _move_player
;space.c,198 :: 		draw_player(ship[1].x, ship[1].y, 1);
0x0830	0xF188C100  	MOVFF       _ship+2, FARG_draw_player_x
0x0834	0xF189C101  	MOVFF       _ship+3, FARG_draw_player_y
0x0838	0x0E01      	MOVLW       1
0x083A	0x0101      	MOVLB       1
0x083C	0x6F8A      	MOVWF       FARG_draw_player_color, 1
0x083E	0xDD8E      	RCALL       _draw_player
;space.c,201 :: 		areaX = areaX - 10;
0x0840	0x0E0A      	MOVLW       10
0x0842	0x5E24      	SUBWF       _areaX, 1 
;space.c,202 :: 		areaY = areaY - 4;
0x0844	0x0E04      	MOVLW       4
0x0846	0x5E25      	SUBWF       _areaY, 1 
;space.c,203 :: 		for (j = 0; j <= 14; j++){
0x0848	0x6B79      	CLRF        move_ia_j_L0, 1
L_move_ia32:
0x084A	0x5179      	MOVF        move_ia_j_L0, 0, 1
0x084C	0x080E      	SUBLW       14
0x084E	0xA0D8      	BTFSS       STATUS, 0 
0x0850	0xD0CA      	BRA         L_move_ia33
;space.c,204 :: 		if((debris[j].x >= areaX) && (debris[j].x <= ship[1].x + 10)){
0x0852	0x0E06      	MOVLW       6
0x0854	0x6E00      	MOVWF       R0 
0x0856	0x0E00      	MOVLW       0
0x0858	0x6E01      	MOVWF       R1 
0x085A	0xF004C179  	MOVFF       move_ia_j_L0, R4
0x085E	0x0E00      	MOVLW       0
0x0860	0x6E05      	MOVWF       R5 
0x0862	0xDCCC      	RCALL       _Mul_16X16_U
0x0864	0x0E02      	MOVLW       _debris
0x0866	0x2400      	ADDWF       R0, 0 
0x0868	0x6EE9      	MOVWF       FSR0L 
0x086A	0x0E01      	MOVLW       hi_addr(_debris)
0x086C	0x2001      	ADDWFC      R1, 0 
0x086E	0x6EEA      	MOVWF       FSR0H 
0x0870	0xF001CFEE  	MOVFF       POSTINC0, R1
0x0874	0x5024      	MOVF        _areaX, 0 
0x0876	0x5C01      	SUBWF       R1, 0 
0x0878	0xA0D8      	BTFSS       STATUS, 0 
0x087A	0xD0B3      	BRA         L_move_ia37
0x087C	0x0E06      	MOVLW       6
0x087E	0x6E00      	MOVWF       R0 
0x0880	0x0E00      	MOVLW       0
0x0882	0x6E01      	MOVWF       R1 
0x0884	0xF004C179  	MOVFF       move_ia_j_L0, R4
0x0888	0x0E00      	MOVLW       0
0x088A	0x6E05      	MOVWF       R5 
0x088C	0xDCB7      	RCALL       _Mul_16X16_U
0x088E	0x0E02      	MOVLW       _debris
0x0890	0x2400      	ADDWF       R0, 0 
0x0892	0x6EE9      	MOVWF       FSR0L 
0x0894	0x0E01      	MOVLW       hi_addr(_debris)
0x0896	0x2001      	ADDWFC      R1, 0 
0x0898	0x6EEA      	MOVWF       FSR0H 
0x089A	0xF003CFEE  	MOVFF       POSTINC0, R3
0x089E	0x0E0A      	MOVLW       10
0x08A0	0x2500      	ADDWF       _ship+2, 0, 1
0x08A2	0x6E01      	MOVWF       R1 
0x08A4	0x6A02      	CLRF        R2 
0x08A6	0x0E00      	MOVLW       0
0x08A8	0x2202      	ADDWFC      R2, 1 
0x08AA	0x0E80      	MOVLW       128
0x08AC	0x1802      	XORWF       R2, 0 
0x08AE	0x6E00      	MOVWF       R0 
0x08B0	0x0E80      	MOVLW       128
0x08B2	0x5C00      	SUBWF       R0, 0 
0x08B4	0xE102      	BNZ         L__move_ia176
0x08B6	0x5003      	MOVF        R3, 0 
0x08B8	0x5C01      	SUBWF       R1, 0 
L__move_ia176:
0x08BA	0xA0D8      	BTFSS       STATUS, 0 
0x08BC	0xD092      	BRA         L_move_ia37
L__move_ia166:
;space.c,205 :: 		if((debris[j].y >= areaY) && (debris[j].y <= ship[1].y + 6)){
0x08BE	0x0E06      	MOVLW       6
0x08C0	0x6E00      	MOVWF       R0 
0x08C2	0x0E00      	MOVLW       0
0x08C4	0x6E01      	MOVWF       R1 
0x08C6	0xF004C179  	MOVFF       move_ia_j_L0, R4
0x08CA	0x0E00      	MOVLW       0
0x08CC	0x6E05      	MOVWF       R5 
0x08CE	0xDC96      	RCALL       _Mul_16X16_U
0x08D0	0x0E02      	MOVLW       _debris
0x08D2	0x2600      	ADDWF       R0, 1 
0x08D4	0x0E01      	MOVLW       hi_addr(_debris)
0x08D6	0x2201      	ADDWFC      R1, 1 
0x08D8	0x0E01      	MOVLW       1
0x08DA	0x2400      	ADDWF       R0, 0 
0x08DC	0x6EE9      	MOVWF       FSR0L 
0x08DE	0x0E00      	MOVLW       0
0x08E0	0x2001      	ADDWFC      R1, 0 
0x08E2	0x6EEA      	MOVWF       FSR0H 
0x08E4	0x5025      	MOVF        _areaY, 0 
0x08E6	0x5CEE      	SUBWF       POSTINC0, 0 
0x08E8	0xA0D8      	BTFSS       STATUS, 0 
0x08EA	0xD07B      	BRA         L_move_ia40
0x08EC	0x0E06      	MOVLW       6
0x08EE	0x6E00      	MOVWF       R0 
0x08F0	0x0E00      	MOVLW       0
0x08F2	0x6E01      	MOVWF       R1 
0x08F4	0xF004C179  	MOVFF       move_ia_j_L0, R4
0x08F8	0x0E00      	MOVLW       0
0x08FA	0x6E05      	MOVWF       R5 
0x08FC	0xDC7F      	RCALL       _Mul_16X16_U
0x08FE	0x0E02      	MOVLW       _debris
0x0900	0x2600      	ADDWF       R0, 1 
0x0902	0x0E01      	MOVLW       hi_addr(_debris)
0x0904	0x2201      	ADDWFC      R1, 1 
0x0906	0x0E01      	MOVLW       1
0x0908	0x2400      	ADDWF       R0, 0 
0x090A	0x6EE9      	MOVWF       FSR0L 
0x090C	0x0E00      	MOVLW       0
0x090E	0x2001      	ADDWFC      R1, 0 
0x0910	0x6EEA      	MOVWF       FSR0H 
0x0912	0xF003CFEE  	MOVFF       POSTINC0, R3
0x0916	0x0E06      	MOVLW       6
0x0918	0x2501      	ADDWF       _ship+3, 0, 1
0x091A	0x6E01      	MOVWF       R1 
0x091C	0x6A02      	CLRF        R2 
0x091E	0x0E00      	MOVLW       0
0x0920	0x2202      	ADDWFC      R2, 1 
0x0922	0x0E80      	MOVLW       128
0x0924	0x1802      	XORWF       R2, 0 
0x0926	0x6E00      	MOVWF       R0 
0x0928	0x0E80      	MOVLW       128
0x092A	0x5C00      	SUBWF       R0, 0 
0x092C	0xE102      	BNZ         L__move_ia177
0x092E	0x5003      	MOVF        R3, 0 
0x0930	0x5C01      	SUBWF       R1, 0 
L__move_ia177:
0x0932	0xE357      	BNC         L_move_ia40
L__move_ia165:
;space.c,206 :: 		if(debris[j].y <= centerShip){
0x0934	0x0E06      	MOVLW       6
0x0936	0x6E00      	MOVWF       R0 
0x0938	0x0E00      	MOVLW       0
0x093A	0x6E01      	MOVWF       R1 
0x093C	0xF004C179  	MOVFF       move_ia_j_L0, R4
0x0940	0x0E00      	MOVLW       0
0x0942	0x6E05      	MOVWF       R5 
0x0944	0xDC5B      	RCALL       _Mul_16X16_U
0x0946	0x0E02      	MOVLW       _debris
0x0948	0x2600      	ADDWF       R0, 1 
0x094A	0x0E01      	MOVLW       hi_addr(_debris)
0x094C	0x2201      	ADDWFC      R1, 1 
0x094E	0x0E01      	MOVLW       1
0x0950	0x2400      	ADDWF       R0, 0 
0x0952	0x6EE9      	MOVWF       FSR0L 
0x0954	0x0E00      	MOVLW       0
0x0956	0x2001      	ADDWFC      R1, 0 
0x0958	0x6EEA      	MOVWF       FSR0H 
0x095A	0x50EE      	MOVF        POSTINC0, 0 
0x095C	0x5C15      	SUBWF       _centerShip, 0 
0x095E	0xE316      	BNC         L_move_ia41
;space.c,207 :: 		draw_player(ship[1].x, ship[1].y, 0);
0x0960	0xF188C100  	MOVFF       _ship+2, FARG_draw_player_x
0x0964	0xF189C101  	MOVFF       _ship+3, FARG_draw_player_y
0x0968	0x6B8A      	CLRF        FARG_draw_player_color, 1
0x096A	0xDCF8      	RCALL       _draw_player
;space.c,208 :: 		move_player(1,2,1);
0x096C	0x0E01      	MOVLW       1
0x096E	0x6F81      	MOVWF       FARG_move_player_i, 1
0x0970	0x0E02      	MOVLW       2
0x0972	0x6F82      	MOVWF       FARG_move_player_direction, 1
0x0974	0x0E01      	MOVLW       1
0x0976	0x6F83      	MOVWF       FARG_move_player_a, 1
0x0978	0xDE1F      	RCALL       _move_player
;space.c,209 :: 		draw_player(ship[1].x, ship[1].y, 1);
0x097A	0xF188C100  	MOVFF       _ship+2, FARG_draw_player_x
0x097E	0xF189C101  	MOVFF       _ship+3, FARG_draw_player_y
0x0982	0x0E01      	MOVLW       1
0x0984	0x0101      	MOVLB       1
0x0986	0x6F8A      	MOVWF       FARG_draw_player_color, 1
0x0988	0xDCE9      	RCALL       _draw_player
;space.c,210 :: 		}
0x098A	0xD02B      	BRA         L_move_ia42
L_move_ia41:
;space.c,211 :: 		else if(debris[j].y > centerShip){
0x098C	0x0E06      	MOVLW       6
0x098E	0x6E00      	MOVWF       R0 
0x0990	0x0E00      	MOVLW       0
0x0992	0x6E01      	MOVWF       R1 
0x0994	0xF004C179  	MOVFF       move_ia_j_L0, R4
0x0998	0x0E00      	MOVLW       0
0x099A	0x6E05      	MOVWF       R5 
0x099C	0xDC2F      	RCALL       _Mul_16X16_U
0x099E	0x0E02      	MOVLW       _debris
0x09A0	0x2600      	ADDWF       R0, 1 
0x09A2	0x0E01      	MOVLW       hi_addr(_debris)
0x09A4	0x2201      	ADDWFC      R1, 1 
0x09A6	0x0E01      	MOVLW       1
0x09A8	0x2400      	ADDWF       R0, 0 
0x09AA	0x6EE9      	MOVWF       FSR0L 
0x09AC	0x0E00      	MOVLW       0
0x09AE	0x2001      	ADDWFC      R1, 0 
0x09B0	0x6EEA      	MOVWF       FSR0H 
0x09B2	0x50EE      	MOVF        POSTINC0, 0 
0x09B4	0x5C15      	SUBWF       _centerShip, 0 
0x09B6	0xE215      	BC          L_move_ia43
;space.c,212 :: 		draw_player(ship[1].x, ship[1].y, 0);
0x09B8	0xF188C100  	MOVFF       _ship+2, FARG_draw_player_x
0x09BC	0xF189C101  	MOVFF       _ship+3, FARG_draw_player_y
0x09C0	0x6B8A      	CLRF        FARG_draw_player_color, 1
0x09C2	0xDCCC      	RCALL       _draw_player
;space.c,213 :: 		move_player(1,1,1);
0x09C4	0x0E01      	MOVLW       1
0x09C6	0x6F81      	MOVWF       FARG_move_player_i, 1
0x09C8	0x0E01      	MOVLW       1
0x09CA	0x6F82      	MOVWF       FARG_move_player_direction, 1
0x09CC	0x0E01      	MOVLW       1
0x09CE	0x6F83      	MOVWF       FARG_move_player_a, 1
0x09D0	0xDDF3      	RCALL       _move_player
;space.c,214 :: 		draw_player(ship[1].x, ship[1].y, 1);
0x09D2	0xF188C100  	MOVFF       _ship+2, FARG_draw_player_x
0x09D6	0xF189C101  	MOVFF       _ship+3, FARG_draw_player_y
0x09DA	0x0E01      	MOVLW       1
0x09DC	0x0101      	MOVLB       1
0x09DE	0x6F8A      	MOVWF       FARG_draw_player_color, 1
0x09E0	0xDCBD      	RCALL       _draw_player
;space.c,215 :: 		}
L_move_ia43:
L_move_ia42:
;space.c,216 :: 		}
L_move_ia40:
;space.c,217 :: 		}
L_move_ia37:
;space.c,203 :: 		for (j = 0; j <= 14; j++){
0x09E2	0x2B79      	INCF        move_ia_j_L0, 1, 1
;space.c,218 :: 		}
0x09E4	0xD732      	BRA         L_move_ia32
L_move_ia33:
;space.c,220 :: 		}
L_end_move_ia:
0x09E6	0x0012      	RETURN      0
; end of _move_ia
_UART1_Init:
;__Lib_UART_c67.c,15 :: 		
;__Lib_UART_c67.c,18 :: 		
0x09E8	0x0E46      	MOVLW       _UART1_Write
0x09EA	0x0101      	MOVLB       1
0x09EC	0x6F6B      	MOVWF       _UART_Wr_Ptr, 1
0x09EE	0x0E04      	MOVLW       hi_addr(_UART1_Write)
0x09F0	0x6F6C      	MOVWF       _UART_Wr_Ptr+1, 1
0x09F2	0x0E88      	MOVLW       FARG_UART1_Write_data_
0x09F4	0x6F6D      	MOVWF       _UART_Wr_Ptr+2, 1
0x09F6	0x0E01      	MOVLW       hi_addr(FARG_UART1_Write_data_)
0x09F8	0x6F6E      	MOVWF       _UART_Wr_Ptr+3, 1
;__Lib_UART_c67.c,19 :: 		
0x09FA	0x0E74      	MOVLW       _UART1_Read
0x09FC	0x6F6F      	MOVWF       _UART_Rd_Ptr, 1
0x09FE	0x0E04      	MOVLW       hi_addr(_UART1_Read)
0x0A00	0x6F70      	MOVWF       _UART_Rd_Ptr+1, 1
0x0A02	0x0E00      	MOVLW       0
0x0A04	0x6F71      	MOVWF       _UART_Rd_Ptr+2, 1
0x0A06	0x0E00      	MOVLW       0
0x0A08	0x6F72      	MOVWF       _UART_Rd_Ptr+3, 1
;__Lib_UART_c67.c,20 :: 		
0x0A0A	0x0E86      	MOVLW       _UART1_Data_Ready
0x0A0C	0x6F63      	MOVWF       _UART_Rdy_Ptr, 1
0x0A0E	0x0E04      	MOVLW       hi_addr(_UART1_Data_Ready)
0x0A10	0x6F64      	MOVWF       _UART_Rdy_Ptr+1, 1
0x0A12	0x0E00      	MOVLW       0
0x0A14	0x6F65      	MOVWF       _UART_Rdy_Ptr+2, 1
0x0A16	0x0E00      	MOVLW       0
0x0A18	0x6F66      	MOVWF       _UART_Rdy_Ptr+3, 1
;__Lib_UART_c67.c,21 :: 		
0x0A1A	0x0E6A      	MOVLW       _UART1_Tx_Idle
0x0A1C	0x6F67      	MOVWF       _UART_Tx_Idle_Ptr, 1
0x0A1E	0x0E04      	MOVLW       hi_addr(_UART1_Tx_Idle)
0x0A20	0x6F68      	MOVWF       _UART_Tx_Idle_Ptr+1, 1
0x0A22	0x0E00      	MOVLW       0
0x0A24	0x6F69      	MOVWF       _UART_Tx_Idle_Ptr+2, 1
0x0A26	0x0E00      	MOVLW       0
0x0A28	0x6F6A      	MOVWF       _UART_Tx_Idle_Ptr+3, 1
;__Lib_UART_c67.c,23 :: 		
0x0A2A	0x8AAC      	BSF         TXSTA, 5 
;__Lib_UART_c67.c,24 :: 		
0x0A2C	0x0E90      	MOVLW       144
0x0A2E	0x6EAB      	MOVWF       RCSTA 
;__Lib_UART_c67.c,25 :: 		
0x0A30	0x8E94      	BSF         TRISC7_bit, BitPos(TRISC7_bit+0) 
;__Lib_UART_c67.c,26 :: 		
0x0A32	0x9C94      	BCF         TRISC6_bit, BitPos(TRISC6_bit+0) 
;__Lib_UART_c67.c,28 :: 		
L_UART1_Init0:
0x0A34	0xAA9E      	BTFSS       PIR1, 5 
0x0A36	0xD003      	BRA         L_UART1_Init1
;__Lib_UART_c67.c,29 :: 		
0x0A38	0xF000CFAE  	MOVFF       RCREG, R0
0x0A3C	0xD7FB      	BRA         L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Init:
0x0A3E	0x0012      	RETURN      0
; end of _UART1_Init
_Glcd_Init:
;__Lib_Glcd.c,147 :: 		
;__Lib_Glcd.c,148 :: 		
0x0A40	0x0101      	MOVLB       1
0x0A42	0x6B5B      	CLRF        __Lib_Glcd_FontInitialized, 1
;__Lib_Glcd.c,149 :: 		
0x0A44	0x6B61      	CLRF        __Lib_Glcd_ExternalFontSet, 1
0x0A46	0x6B62      	CLRF        __Lib_Glcd_ExternalFontSet+1, 1
;__Lib_Glcd.c,151 :: 		
0x0A48	0x9A93      	BCF         GLCD_RST_Direction, BitPos(GLCD_RST_Direction+0) 
;__Lib_Glcd.c,152 :: 		
0x0A4A	0x9893      	BCF         GLCD_EN_Direction, BitPos(GLCD_EN_Direction+0) 
;__Lib_Glcd.c,153 :: 		
0x0A4C	0x9493      	BCF         GLCD_RS_Direction, BitPos(GLCD_RS_Direction+0) 
;__Lib_Glcd.c,154 :: 		
0x0A4E	0x9693      	BCF         GLCD_RW_Direction, BitPos(GLCD_RW_Direction+0) 
;__Lib_Glcd.c,155 :: 		
0x0A50	0x9093      	BCF         GLCD_CS1_Direction, BitPos(GLCD_CS1_Direction+0) 
;__Lib_Glcd.c,156 :: 		
0x0A52	0x9293      	BCF         GLCD_CS2_Direction, BitPos(GLCD_CS2_Direction+0) 
;__Lib_Glcd.c,158 :: 		
0x0A54	0x9A8A      	BCF         GLCD_RST, BitPos(GLCD_RST+0) 
;__Lib_Glcd.c,163 :: 		
0x0A56	0x0E12      	MOVLW       18
0x0A58	0x6E00      	MOVWF       R0 
0x0A5A	0x0E00      	MOVLW       0
0x0A5C	0x6E01      	MOVWF       R1 
0x0A5E	0x0E83      	MOVLW       GLCD_DataPort
0x0A60	0x2400      	ADDWF       R0, 0 
0x0A62	0x6EE1      	MOVWF       FSR1L 
0x0A64	0x0E0F      	MOVLW       hi_addr(GLCD_DataPort)
0x0A66	0x2001      	ADDWFC      R1, 0 
0x0A68	0x6EE2      	MOVWF       FSR1H 
0x0A6A	0x6AE6      	CLRF        POSTINC1 
;__Lib_Glcd.c,173 :: 		
0x0A6C	0x948A      	BCF         GLCD_RS, BitPos(GLCD_RS+0) 
;__Lib_Glcd.c,174 :: 		
0x0A6E	0x968A      	BCF         GLCD_RW, BitPos(GLCD_RW+0) 
;__Lib_Glcd.c,176 :: 		
0x0A70	0x908A      	BCF         GLCD_CS1, BitPos(GLCD_CS1+0) 
;__Lib_Glcd.c,177 :: 		
0x0A72	0x828A      	BSF         GLCD_CS2, BitPos(GLCD_CS2+0) 
;__Lib_Glcd.c,179 :: 		
0x0A74	0x8A8A      	BSF         GLCD_RST, BitPos(GLCD_RST+0) 
;__Lib_Glcd.c,186 :: 		
0x0A76	0x0E3F      	MOVLW       63
0x0A78	0x6E83      	MOVWF       GLCD_DataPort 
;__Lib_Glcd.c,187 :: 		
0x0A7A	0xF000EC14  	CALL        __Lib_Glcd_Strobe, 0
;__Lib_Glcd.c,189 :: 		
0x0A7E	0x0EC0      	MOVLW       192
0x0A80	0x6E83      	MOVWF       GLCD_DataPort 
;__Lib_Glcd.c,190 :: 		
0x0A82	0xF000EC14  	CALL        __Lib_Glcd_Strobe, 0
;__Lib_Glcd.c,192 :: 		
0x0A86	0x808A      	BSF         GLCD_CS1, BitPos(GLCD_CS1+0) 
;__Lib_Glcd.c,193 :: 		
0x0A88	0x928A      	BCF         GLCD_CS2, BitPos(GLCD_CS2+0) 
;__Lib_Glcd.c,195 :: 		
0x0A8A	0x0E3F      	MOVLW       63
0x0A8C	0x6E83      	MOVWF       GLCD_DataPort 
;__Lib_Glcd.c,196 :: 		
0x0A8E	0xF000EC14  	CALL        __Lib_Glcd_Strobe, 0
;__Lib_Glcd.c,198 :: 		
0x0A92	0x0EC0      	MOVLW       192
0x0A94	0x6E83      	MOVWF       GLCD_DataPort 
;__Lib_Glcd.c,199 :: 		
0x0A96	0xF000EC14  	CALL        __Lib_Glcd_Strobe, 0
;__Lib_Glcd.c,201 :: 		
L_end_Glcd_Init:
0x0A9A	0x0012      	RETURN      0
; end of _Glcd_Init
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0A9C	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0A9E	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0AA2	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0AA4	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0AA6	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0AA8	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0AAA	0x0012      	RETURN      0
; end of ___CC2DW
_gen_debris:
;space.c,292 :: 		void gen_debris(){
;space.c,293 :: 		debris[0].y = 2;
0x0AAC	0x0E02      	MOVLW       2
0x0AAE	0x0101      	MOVLB       1
0x0AB0	0x6F03      	MOVWF       _debris+1, 1
;space.c,294 :: 		debris[0].x = 2;
0x0AB2	0x0E02      	MOVLW       2
0x0AB4	0x6F02      	MOVWF       _debris, 1
;space.c,295 :: 		debris[0].dir = 2;
0x0AB6	0x0E02      	MOVLW       2
0x0AB8	0x6F05      	MOVWF       _debris+3, 1
;space.c,296 :: 		debris[1].y = 4;
0x0ABA	0x0E04      	MOVLW       4
0x0ABC	0x6F09      	MOVWF       _debris+7, 1
;space.c,297 :: 		debris[1].x = 34;
0x0ABE	0x0E22      	MOVLW       34
0x0AC0	0x6F08      	MOVWF       _debris+6, 1
;space.c,298 :: 		debris[1].dir = 1;
0x0AC2	0x0E01      	MOVLW       1
0x0AC4	0x6F0B      	MOVWF       _debris+9, 1
;space.c,299 :: 		debris[2].y = 50;
0x0AC6	0x0E32      	MOVLW       50
0x0AC8	0x6F0F      	MOVWF       _debris+13, 1
;space.c,300 :: 		debris[2].x = 50;
0x0ACA	0x0E32      	MOVLW       50
0x0ACC	0x6F0E      	MOVWF       _debris+12, 1
;space.c,301 :: 		debris[2].dir = 2;
0x0ACE	0x0E02      	MOVLW       2
0x0AD0	0x6F11      	MOVWF       _debris+15, 1
;space.c,302 :: 		debris[3].y = 16;
0x0AD2	0x0E10      	MOVLW       16
0x0AD4	0x6F15      	MOVWF       _debris+19, 1
;space.c,303 :: 		debris[3].x = 87;
0x0AD6	0x0E57      	MOVLW       87
0x0AD8	0x6F14      	MOVWF       _debris+18, 1
;space.c,304 :: 		debris[3].dir = 2;
0x0ADA	0x0E02      	MOVLW       2
0x0ADC	0x6F17      	MOVWF       _debris+21, 1
;space.c,305 :: 		debris[4].y = 34;
0x0ADE	0x0E22      	MOVLW       34
0x0AE0	0x6F1B      	MOVWF       _debris+25, 1
;space.c,306 :: 		debris[4].x = 30;
0x0AE2	0x0E1E      	MOVLW       30
0x0AE4	0x6F1A      	MOVWF       _debris+24, 1
;space.c,307 :: 		debris[4].dir = 1;
0x0AE6	0x0E01      	MOVLW       1
0x0AE8	0x6F1D      	MOVWF       _debris+27, 1
;space.c,308 :: 		debris[5].y = 12;
0x0AEA	0x0E0C      	MOVLW       12
0x0AEC	0x6F21      	MOVWF       _debris+31, 1
;space.c,309 :: 		debris[5].x = 120;
0x0AEE	0x0E78      	MOVLW       120
0x0AF0	0x6F20      	MOVWF       _debris+30, 1
;space.c,310 :: 		debris[5].dir = 2;
0x0AF2	0x0E02      	MOVLW       2
0x0AF4	0x6F23      	MOVWF       _debris+33, 1
;space.c,311 :: 		debris[6].y = 24;
0x0AF6	0x0E18      	MOVLW       24
0x0AF8	0x6F27      	MOVWF       _debris+37, 1
;space.c,312 :: 		debris[6].x = 95;
0x0AFA	0x0E5F      	MOVLW       95
0x0AFC	0x6F26      	MOVWF       _debris+36, 1
;space.c,313 :: 		debris[6].dir = 1;
0x0AFE	0x0E01      	MOVLW       1
0x0B00	0x6F29      	MOVWF       _debris+39, 1
;space.c,314 :: 		debris[7].y = 20;
0x0B02	0x0E14      	MOVLW       20
0x0B04	0x6F2D      	MOVWF       _debris+43, 1
;space.c,315 :: 		debris[7].x = 67;
0x0B06	0x0E43      	MOVLW       67
0x0B08	0x6F2C      	MOVWF       _debris+42, 1
;space.c,316 :: 		debris[7].dir = 1;
0x0B0A	0x0E01      	MOVLW       1
0x0B0C	0x6F2F      	MOVWF       _debris+45, 1
;space.c,317 :: 		debris[8].y = 30;
0x0B0E	0x0E1E      	MOVLW       30
0x0B10	0x6F33      	MOVWF       _debris+49, 1
;space.c,318 :: 		debris[8].x = 93;
0x0B12	0x0E5D      	MOVLW       93
0x0B14	0x6F32      	MOVWF       _debris+48, 1
;space.c,319 :: 		debris[8].dir = 1;
0x0B16	0x0E01      	MOVLW       1
0x0B18	0x6F35      	MOVWF       _debris+51, 1
;space.c,320 :: 		debris[9].y = 28;
0x0B1A	0x0E1C      	MOVLW       28
0x0B1C	0x6F39      	MOVWF       _debris+55, 1
;space.c,321 :: 		debris[9].x = 82;
0x0B1E	0x0E52      	MOVLW       82
0x0B20	0x6F38      	MOVWF       _debris+54, 1
;space.c,322 :: 		debris[9].dir = 2;
0x0B22	0x0E02      	MOVLW       2
0x0B24	0x6F3B      	MOVWF       _debris+57, 1
;space.c,323 :: 		debris[10].y = 38;
0x0B26	0x0E26      	MOVLW       38
0x0B28	0x6F3F      	MOVWF       _debris+61, 1
;space.c,324 :: 		debris[10].x = 67;
0x0B2A	0x0E43      	MOVLW       67
0x0B2C	0x6F3E      	MOVWF       _debris+60, 1
;space.c,325 :: 		debris[10].dir = 1;
0x0B2E	0x0E01      	MOVLW       1
0x0B30	0x6F41      	MOVWF       _debris+63, 1
;space.c,326 :: 		debris[11].y = 42;
0x0B32	0x0E2A      	MOVLW       42
0x0B34	0x6F45      	MOVWF       _debris+67, 1
;space.c,327 :: 		debris[11].x =5;
0x0B36	0x0E05      	MOVLW       5
0x0B38	0x6F44      	MOVWF       _debris+66, 1
;space.c,328 :: 		debris[11].dir = 1;
0x0B3A	0x0E01      	MOVLW       1
0x0B3C	0x6F47      	MOVWF       _debris+69, 1
;space.c,329 :: 		debris[12].y = 46;
0x0B3E	0x0E2E      	MOVLW       46
0x0B40	0x6F4B      	MOVWF       _debris+73, 1
;space.c,330 :: 		debris[12].x = 10;
0x0B42	0x0E0A      	MOVLW       10
0x0B44	0x6F4A      	MOVWF       _debris+72, 1
;space.c,331 :: 		debris[12].dir = 1;
0x0B46	0x0E01      	MOVLW       1
0x0B48	0x6F4D      	MOVWF       _debris+75, 1
;space.c,332 :: 		debris[13].y = 8;
0x0B4A	0x0E08      	MOVLW       8
0x0B4C	0x6F51      	MOVWF       _debris+79, 1
;space.c,333 :: 		debris[13].x = 76;
0x0B4E	0x0E4C      	MOVLW       76
0x0B50	0x6F50      	MOVWF       _debris+78, 1
;space.c,334 :: 		debris[13].dir = 2;
0x0B52	0x0E02      	MOVLW       2
0x0B54	0x6F53      	MOVWF       _debris+81, 1
;space.c,335 :: 		debris[14].y = 54;
0x0B56	0x0E36      	MOVLW       54
0x0B58	0x6F57      	MOVWF       _debris+85, 1
;space.c,336 :: 		debris[14].x = 20;
0x0B5A	0x0E14      	MOVLW       20
0x0B5C	0x6F56      	MOVWF       _debris+84, 1
;space.c,337 :: 		debris[14].dir = 1;
0x0B5E	0x0E01      	MOVLW       1
0x0B60	0x6F59      	MOVWF       _debris+87, 1
;space.c,339 :: 		}
L_end_gen_debris:
0x0B62	0x0012      	RETURN      0
; end of _gen_debris
_ADC_Read:
;__Lib_ADC_A_D.c,51 :: 		
;__Lib_ADC_A_D.c,54 :: 		
0x0B64	0x6AC2      	CLRF        ADCON0 
;__Lib_ADC_A_D.c,55 :: 		
0x0B66	0x0100      	MOVLB       0
0x0B68	0x1D93      	COMF        _vref_mask, 0, 1
0x0B6A	0x6E00      	MOVWF       R0 
0x0B6C	0x5000      	MOVF        R0, 0 
0x0B6E	0x16C1      	ANDWF       ADCON1, 1 
;__Lib_ADC_A_D.c,56 :: 		
0x0B70	0x0E07      	MOVLW       7
0x0B72	0x12C0      	IORWF       ADCON2, 1 
;__Lib_ADC_A_D.c,57 :: 		
0x0B74	0x8EC0      	BSF         ADCON2, 7 
;__Lib_ADC_A_D.c,58 :: 		
0x0B76	0xF000C179  	MOVFF       FARG_ADC_Read_channel, R0
0x0B7A	0x3600      	RLCF        R0, 1 
0x0B7C	0x9000      	BCF         R0, 0 
0x0B7E	0x3600      	RLCF        R0, 1 
0x0B80	0x9000      	BCF         R0, 0 
0x0B82	0x5000      	MOVF        R0, 0 
0x0B84	0x12C2      	IORWF       ADCON0, 1 
;__Lib_ADC_A_D.c,59 :: 		
0x0B86	0x80C2      	BSF         ADCON0, 0 
;__Lib_ADC_A_D.c,60 :: 		
0x0B88	0xDE1F      	RCALL       _Delay_22us
;__Lib_ADC_A_D.c,61 :: 		
0x0B8A	0x82C2      	BSF         ADCON0, 1 
;__Lib_ADC_A_D.c,62 :: 		
L_ADC_Read2:
0x0B8C	0xA2C2      	BTFSS       ADCON0, 1 
0x0B8E	0xD001      	BRA         L_ADC_Read3
;__Lib_ADC_A_D.c,63 :: 		
0x0B90	0xD7FD      	BRA         L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_A_D.c,64 :: 		
0x0B92	0xF001CFC4  	MOVFF       ADRESH, R1
0x0B96	0x6A00      	CLRF        R0 
;__Lib_ADC_A_D.c,65 :: 		
0x0B98	0x50C3      	MOVF        ADRESL, 0 
0x0B9A	0x1200      	IORWF       R0, 1 
0x0B9C	0x0E00      	MOVLW       0
0x0B9E	0x1201      	IORWF       R1, 1 
;__Lib_ADC_A_D.c,66 :: 		
0x0BA0	0x90C2      	BCF         ADCON0, 0 
;__Lib_ADC_A_D.c,68 :: 		
;__Lib_ADC_A_D.c,69 :: 		
L_end_ADC_Read:
0x0BA2	0x0012      	RETURN      0
; end of _ADC_Read
_init:
;space.c,134 :: 		void init(){
;space.c,135 :: 		ship[0].x = 40;
0x0BA4	0x0E28      	MOVLW       40
0x0BA6	0x0100      	MOVLB       0
0x0BA8	0x6FFE      	MOVWF       _ship, 1
;space.c,136 :: 		ship[0].y = 57;
0x0BAA	0x0E39      	MOVLW       57
0x0BAC	0x6FFF      	MOVWF       _ship+1, 1
;space.c,138 :: 		ship[1].x = 80;
0x0BAE	0x0E50      	MOVLW       80
0x0BB0	0x0101      	MOVLB       1
0x0BB2	0x6F00      	MOVWF       _ship+2, 1
;space.c,139 :: 		ship[1].y = 57;
0x0BB4	0x0E39      	MOVLW       57
0x0BB6	0x6F01      	MOVWF       _ship+3, 1
;space.c,141 :: 		score[0] = 0;
0x0BB8	0x6A4A      	CLRF        _score 
;space.c,142 :: 		score[1] = 0;
0x0BBA	0x6A4B      	CLRF        _score+1 
;space.c,144 :: 		minutes = 64;
0x0BBC	0x0E40      	MOVLW       64
0x0BBE	0x6E40      	MOVWF       _minutes 
;space.c,146 :: 		draw_player(ship[0].x, ship[0].y, 1);
0x0BC0	0x0E28      	MOVLW       40
0x0BC2	0x6F88      	MOVWF       FARG_draw_player_x, 1
0x0BC4	0x0E39      	MOVLW       57
0x0BC6	0x6F89      	MOVWF       FARG_draw_player_y, 1
0x0BC8	0x0E01      	MOVLW       1
0x0BCA	0x6F8A      	MOVWF       FARG_draw_player_color, 1
0x0BCC	0xF001ECAE  	CALL        _draw_player, 0
;space.c,147 :: 		draw_player(ship[1].x, ship[1].y, 1);
0x0BD0	0xF188C100  	MOVFF       _ship+2, FARG_draw_player_x
0x0BD4	0xF189C101  	MOVFF       _ship+3, FARG_draw_player_y
0x0BD8	0x0E01      	MOVLW       1
0x0BDA	0x6F8A      	MOVWF       FARG_draw_player_color, 1
0x0BDC	0xF001ECAE  	CALL        _draw_player, 0
;space.c,148 :: 		}
L_end_init:
0x0BE0	0x0012      	RETURN      0
; end of _init
_draw_time:
;space.c,85 :: 		void draw_time(){
;space.c,86 :: 		Glcd_V_Line(0,minutes,64,0);
0x0BE2	0x0101      	MOVLB       1
0x0BE4	0x6B92      	CLRF        FARG_Glcd_V_Line_y_start, 1
0x0BE6	0xF193C040  	MOVFF       _minutes, FARG_Glcd_V_Line_y_end
0x0BEA	0x0E40      	MOVLW       64
0x0BEC	0x6F94      	MOVWF       FARG_Glcd_V_Line_x_pos, 1
0x0BEE	0x6B95      	CLRF        FARG_Glcd_V_Line_color, 1
0x0BF0	0xF000ECCD  	CALL        _Glcd_V_Line, 0
;space.c,87 :: 		Glcd_V_Line(64,minutes,64,1);
0x0BF4	0x0E40      	MOVLW       64
0x0BF6	0x6F92      	MOVWF       FARG_Glcd_V_Line_y_start, 1
0x0BF8	0xF193C040  	MOVFF       _minutes, FARG_Glcd_V_Line_y_end
0x0BFC	0x0E40      	MOVLW       64
0x0BFE	0x6F94      	MOVWF       FARG_Glcd_V_Line_x_pos, 1
0x0C00	0x0E01      	MOVLW       1
0x0C02	0x6F95      	MOVWF       FARG_Glcd_V_Line_color, 1
0x0C04	0xF000ECCD  	CALL        _Glcd_V_Line, 0
;space.c,88 :: 		}
L_end_draw_time:
0x0C08	0x0012      	RETURN      0
; end of _draw_time
_move_debris:
;space.c,90 :: 		void move_debris(unsigned short a){
;space.c,94 :: 		if(debris_turn == 3 || a == 1){
0x0C0A	0x5054      	MOVF        _debris_turn, 0 
0x0C0C	0x0A03      	XORLW       3
0x0C0E	0xE005      	BZ          L__move_debris163
0x0C10	0x0101      	MOVLB       1
0x0C12	0x5179      	MOVF        FARG_move_debris_a, 0, 1
0x0C14	0x0A01      	XORLW       1
0x0C16	0xE001      	BZ          L__move_debris163
0x0C18	0xD2BF      	BRA         L_move_debris2
L__move_debris163:
0x0C1A	0x0101      	MOVLB       1
;space.c,95 :: 		for(j = 0; j <= 14; j++){
0x0C1C	0x6B7B      	CLRF        move_debris_j_L0, 1
L_move_debris3:
0x0C1E	0x517B      	MOVF        move_debris_j_L0, 0, 1
0x0C20	0x080E      	SUBLW       14
0x0C22	0xA0D8      	BTFSS       STATUS, 0 
0x0C24	0xD2B9      	BRA         L_move_debris4
;space.c,96 :: 		if(debris[j].dir == 1){//asteroide moviendose de derecha a izquierda   <--
0x0C26	0x0E06      	MOVLW       6
0x0C28	0x6E00      	MOVWF       R0 
0x0C2A	0x0E00      	MOVLW       0
0x0C2C	0x6E01      	MOVWF       R1 
0x0C2E	0xF004C17B  	MOVFF       move_debris_j_L0, R4
0x0C32	0x0E00      	MOVLW       0
0x0C34	0x6E05      	MOVWF       R5 
0x0C36	0xF000ECFE  	CALL        _Mul_16X16_U, 0
0x0C3A	0x0E02      	MOVLW       _debris
0x0C3C	0x2600      	ADDWF       R0, 1 
0x0C3E	0x0E01      	MOVLW       hi_addr(_debris)
0x0C40	0x2201      	ADDWFC      R1, 1 
0x0C42	0x0E03      	MOVLW       3
0x0C44	0x2400      	ADDWF       R0, 0 
0x0C46	0x6EE9      	MOVWF       FSR0L 
0x0C48	0x0E00      	MOVLW       0
0x0C4A	0x2001      	ADDWFC      R1, 0 
0x0C4C	0x6EEA      	MOVWF       FSR0H 
0x0C4E	0x50EE      	MOVF        POSTINC0, 0 
0x0C50	0x0A01      	XORLW       1
0x0C52	0xA4D8      	BTFSS       STATUS, 2 
0x0C54	0xD0A4      	BRA         L_move_debris6
;space.c,97 :: 		Glcd_Dot(debris[j].x,debris[j].y, 0);
0x0C56	0x0E06      	MOVLW       6
0x0C58	0x6E00      	MOVWF       R0 
0x0C5A	0x0E00      	MOVLW       0
0x0C5C	0x6E01      	MOVWF       R1 
0x0C5E	0xF004C17B  	MOVFF       move_debris_j_L0, R4
0x0C62	0x0E00      	MOVLW       0
0x0C64	0x6E05      	MOVWF       R5 
0x0C66	0xF000ECFE  	CALL        _Mul_16X16_U, 0
0x0C6A	0x0E02      	MOVLW       _debris
0x0C6C	0x2600      	ADDWF       R0, 1 
0x0C6E	0x0E01      	MOVLW       hi_addr(_debris)
0x0C70	0x2201      	ADDWFC      R1, 1 
0x0C72	0xFFE9C000  	MOVFF       R0, FSR0L
0x0C76	0xFFEAC001  	MOVFF       R1, FSR0H
0x0C7A	0xF197CFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x0C7E	0x0E01      	MOVLW       1
0x0C80	0x2400      	ADDWF       R0, 0 
0x0C82	0x6EE9      	MOVWF       FSR0L 
0x0C84	0x0E00      	MOVLW       0
0x0C86	0x2001      	ADDWFC      R1, 0 
0x0C88	0x6EEA      	MOVWF       FSR0H 
0x0C8A	0xF198CFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_y_pos
0x0C8E	0x6B99      	CLRF        FARG_Glcd_Dot_color, 1
0x0C90	0xF000EC73  	CALL        _Glcd_Dot, 0
;space.c,98 :: 		debris[j].x -= 2;
0x0C94	0x0E06      	MOVLW       6
0x0C96	0x6E00      	MOVWF       R0 
0x0C98	0x0E00      	MOVLW       0
0x0C9A	0x6E01      	MOVWF       R1 
0x0C9C	0xF004C17B  	MOVFF       move_debris_j_L0, R4
0x0CA0	0x0E00      	MOVLW       0
0x0CA2	0x6E05      	MOVWF       R5 
0x0CA4	0xF000ECFE  	CALL        _Mul_16X16_U, 0
0x0CA8	0x0E02      	MOVLW       _debris
0x0CAA	0x2400      	ADDWF       R0, 0 
0x0CAC	0x6E02      	MOVWF       R2 
0x0CAE	0x0E01      	MOVLW       hi_addr(_debris)
0x0CB0	0x2001      	ADDWFC      R1, 0 
0x0CB2	0x6E03      	MOVWF       R3 
0x0CB4	0xFFE9C002  	MOVFF       R2, FSR0L
0x0CB8	0xFFEAC003  	MOVFF       R3, FSR0H
0x0CBC	0xF000CFEE  	MOVFF       POSTINC0, R0
0x0CC0	0x0E02      	MOVLW       2
0x0CC2	0x5E00      	SUBWF       R0, 1 
0x0CC4	0xFFE1C002  	MOVFF       R2, FSR1L
0x0CC8	0xFFE2C003  	MOVFF       R3, FSR1H
0x0CCC	0xFFE6C000  	MOVFF       R0, POSTINC1
;space.c,99 :: 		Glcd_Dot(debris[j].x,debris[j].y, 1);
0x0CD0	0x0E06      	MOVLW       6
0x0CD2	0x6E00      	MOVWF       R0 
0x0CD4	0x0E00      	MOVLW       0
0x0CD6	0x6E01      	MOVWF       R1 
0x0CD8	0xF004C17B  	MOVFF       move_debris_j_L0, R4
0x0CDC	0x0E00      	MOVLW       0
0x0CDE	0x6E05      	MOVWF       R5 
0x0CE0	0xF000ECFE  	CALL        _Mul_16X16_U, 0
0x0CE4	0x0E02      	MOVLW       _debris
0x0CE6	0x2600      	ADDWF       R0, 1 
0x0CE8	0x0E01      	MOVLW       hi_addr(_debris)
0x0CEA	0x2201      	ADDWFC      R1, 1 
0x0CEC	0xFFE9C000  	MOVFF       R0, FSR0L
0x0CF0	0xFFEAC001  	MOVFF       R1, FSR0H
0x0CF4	0xF197CFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x0CF8	0x0E01      	MOVLW       1
0x0CFA	0x2400      	ADDWF       R0, 0 
0x0CFC	0x6EE9      	MOVWF       FSR0L 
0x0CFE	0x0E00      	MOVLW       0
0x0D00	0x2001      	ADDWFC      R1, 0 
0x0D02	0x6EEA      	MOVWF       FSR0H 
0x0D04	0xF198CFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_y_pos
0x0D08	0x0E01      	MOVLW       1
0x0D0A	0x6F99      	MOVWF       FARG_Glcd_Dot_color, 1
0x0D0C	0xF000EC73  	CALL        _Glcd_Dot, 0
;space.c,100 :: 		if(debris[j].x <= 0){
0x0D10	0x0E06      	MOVLW       6
0x0D12	0x6E00      	MOVWF       R0 
0x0D14	0x0E00      	MOVLW       0
0x0D16	0x6E01      	MOVWF       R1 
0x0D18	0xF004C17B  	MOVFF       move_debris_j_L0, R4
0x0D1C	0x0E00      	MOVLW       0
0x0D1E	0x6E05      	MOVWF       R5 
0x0D20	0xF000ECFE  	CALL        _Mul_16X16_U, 0
0x0D24	0x0E02      	MOVLW       _debris
0x0D26	0x2400      	ADDWF       R0, 0 
0x0D28	0x6EE9      	MOVWF       FSR0L 
0x0D2A	0x0E01      	MOVLW       hi_addr(_debris)
0x0D2C	0x2001      	ADDWFC      R1, 0 
0x0D2E	0x6EEA      	MOVWF       FSR0H 
0x0D30	0xF001CFEE  	MOVFF       POSTINC0, R1
0x0D34	0x5001      	MOVF        R1, 0 
0x0D36	0x0800      	SUBLW       0
0x0D38	0xE331      	BNC         L_move_debris7
;space.c,101 :: 		Glcd_Dot(debris[j].x,debris[j].y, 0);
0x0D3A	0x0E06      	MOVLW       6
0x0D3C	0x6E00      	MOVWF       R0 
0x0D3E	0x0E00      	MOVLW       0
0x0D40	0x6E01      	MOVWF       R1 
0x0D42	0xF004C17B  	MOVFF       move_debris_j_L0, R4
0x0D46	0x0E00      	MOVLW       0
0x0D48	0x6E05      	MOVWF       R5 
0x0D4A	0xF000ECFE  	CALL        _Mul_16X16_U, 0
0x0D4E	0x0E02      	MOVLW       _debris
0x0D50	0x2600      	ADDWF       R0, 1 
0x0D52	0x0E01      	MOVLW       hi_addr(_debris)
0x0D54	0x2201      	ADDWFC      R1, 1 
0x0D56	0xFFE9C000  	MOVFF       R0, FSR0L
0x0D5A	0xFFEAC001  	MOVFF       R1, FSR0H
0x0D5E	0xF197CFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x0D62	0x0E01      	MOVLW       1
0x0D64	0x2400      	ADDWF       R0, 0 
0x0D66	0x6EE9      	MOVWF       FSR0L 
0x0D68	0x0E00      	MOVLW       0
0x0D6A	0x2001      	ADDWFC      R1, 0 
0x0D6C	0x6EEA      	MOVWF       FSR0H 
0x0D6E	0xF198CFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_y_pos
0x0D72	0x6B99      	CLRF        FARG_Glcd_Dot_color, 1
0x0D74	0xF000EC73  	CALL        _Glcd_Dot, 0
;space.c,102 :: 		debris[j].x = 128;
0x0D78	0x0E06      	MOVLW       6
0x0D7A	0x6E00      	MOVWF       R0 
0x0D7C	0x0E00      	MOVLW       0
0x0D7E	0x6E01      	MOVWF       R1 
0x0D80	0xF004C17B  	MOVFF       move_debris_j_L0, R4
0x0D84	0x0E00      	MOVLW       0
0x0D86	0x6E05      	MOVWF       R5 
0x0D88	0xF000ECFE  	CALL        _Mul_16X16_U, 0
0x0D8C	0x0E02      	MOVLW       _debris
0x0D8E	0x2400      	ADDWF       R0, 0 
0x0D90	0x6EE1      	MOVWF       FSR1L 
0x0D92	0x0E01      	MOVLW       hi_addr(_debris)
0x0D94	0x2001      	ADDWFC      R1, 0 
0x0D96	0x6EE2      	MOVWF       FSR1H 
0x0D98	0x0E80      	MOVLW       128
0x0D9A	0x6EE6      	MOVWF       POSTINC1 
;space.c,103 :: 		}
L_move_debris7:
;space.c,104 :: 		}
0x0D9C	0xD0BA      	BRA         L_move_debris8
L_move_debris6:
;space.c,105 :: 		else if(debris[j].dir == 2){//asteroide moviendose de izquierda a derecha -->
0x0D9E	0x0E06      	MOVLW       6
0x0DA0	0x6E00      	MOVWF       R0 
0x0DA2	0x0E00      	MOVLW       0
0x0DA4	0x6E01      	MOVWF       R1 
0x0DA6	0xF004C17B  	MOVFF       move_debris_j_L0, R4
0x0DAA	0x0E00      	MOVLW       0
0x0DAC	0x6E05      	MOVWF       R5 
0x0DAE	0xF000ECFE  	CALL        _Mul_16X16_U, 0
0x0DB2	0x0E02      	MOVLW       _debris
0x0DB4	0x2600      	ADDWF       R0, 1 
0x0DB6	0x0E01      	MOVLW       hi_addr(_debris)
0x0DB8	0x2201      	ADDWFC      R1, 1 
0x0DBA	0x0E03      	MOVLW       3
0x0DBC	0x2400      	ADDWF       R0, 0 
0x0DBE	0x6EE9      	MOVWF       FSR0L 
0x0DC0	0x0E00      	MOVLW       0
0x0DC2	0x2001      	ADDWFC      R1, 0 
0x0DC4	0x6EEA      	MOVWF       FSR0H 
0x0DC6	0x50EE      	MOVF        POSTINC0, 0 
0x0DC8	0x0A02      	XORLW       2
0x0DCA	0xA4D8      	BTFSS       STATUS, 2 
0x0DCC	0xD0A2      	BRA         L_move_debris9
;space.c,106 :: 		Glcd_Dot( debris[j].x,debris[j].y, 0);
0x0DCE	0x0E06      	MOVLW       6
0x0DD0	0x6E00      	MOVWF       R0 
0x0DD2	0x0E00      	MOVLW       0
0x0DD4	0x6E01      	MOVWF       R1 
0x0DD6	0xF004C17B  	MOVFF       move_debris_j_L0, R4
0x0DDA	0x0E00      	MOVLW       0
0x0DDC	0x6E05      	MOVWF       R5 
0x0DDE	0xF000ECFE  	CALL        _Mul_16X16_U, 0
0x0DE2	0x0E02      	MOVLW       _debris
0x0DE4	0x2600      	ADDWF       R0, 1 
0x0DE6	0x0E01      	MOVLW       hi_addr(_debris)
0x0DE8	0x2201      	ADDWFC      R1, 1 
0x0DEA	0xFFE9C000  	MOVFF       R0, FSR0L
0x0DEE	0xFFEAC001  	MOVFF       R1, FSR0H
0x0DF2	0xF197CFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x0DF6	0x0E01      	MOVLW       1
0x0DF8	0x2400      	ADDWF       R0, 0 
0x0DFA	0x6EE9      	MOVWF       FSR0L 
0x0DFC	0x0E00      	MOVLW       0
0x0DFE	0x2001      	ADDWFC      R1, 0 
0x0E00	0x6EEA      	MOVWF       FSR0H 
0x0E02	0xF198CFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_y_pos
0x0E06	0x6B99      	CLRF        FARG_Glcd_Dot_color, 1
0x0E08	0xF000EC73  	CALL        _Glcd_Dot, 0
;space.c,107 :: 		debris[j].x += 2;
0x0E0C	0x0E06      	MOVLW       6
0x0E0E	0x6E00      	MOVWF       R0 
0x0E10	0x0E00      	MOVLW       0
0x0E12	0x6E01      	MOVWF       R1 
0x0E14	0xF004C17B  	MOVFF       move_debris_j_L0, R4
0x0E18	0x0E00      	MOVLW       0
0x0E1A	0x6E05      	MOVWF       R5 
0x0E1C	0xF000ECFE  	CALL        _Mul_16X16_U, 0
0x0E20	0x0E02      	MOVLW       _debris
0x0E22	0x2400      	ADDWF       R0, 0 
0x0E24	0x6E02      	MOVWF       R2 
0x0E26	0x0E01      	MOVLW       hi_addr(_debris)
0x0E28	0x2001      	ADDWFC      R1, 0 
0x0E2A	0x6E03      	MOVWF       R3 
0x0E2C	0xFFE9C002  	MOVFF       R2, FSR0L
0x0E30	0xFFEAC003  	MOVFF       R3, FSR0H
0x0E34	0xF000CFEE  	MOVFF       POSTINC0, R0
0x0E38	0x0E02      	MOVLW       2
0x0E3A	0x2600      	ADDWF       R0, 1 
0x0E3C	0xFFE1C002  	MOVFF       R2, FSR1L
0x0E40	0xFFE2C003  	MOVFF       R3, FSR1H
0x0E44	0xFFE6C000  	MOVFF       R0, POSTINC1
;space.c,108 :: 		Glcd_Dot( debris[j].x,debris[j].y, 1);
0x0E48	0x0E06      	MOVLW       6
0x0E4A	0x6E00      	MOVWF       R0 
0x0E4C	0x0E00      	MOVLW       0
0x0E4E	0x6E01      	MOVWF       R1 
0x0E50	0xF004C17B  	MOVFF       move_debris_j_L0, R4
0x0E54	0x0E00      	MOVLW       0
0x0E56	0x6E05      	MOVWF       R5 
0x0E58	0xF000ECFE  	CALL        _Mul_16X16_U, 0
0x0E5C	0x0E02      	MOVLW       _debris
0x0E5E	0x2600      	ADDWF       R0, 1 
0x0E60	0x0E01      	MOVLW       hi_addr(_debris)
0x0E62	0x2201      	ADDWFC      R1, 1 
0x0E64	0xFFE9C000  	MOVFF       R0, FSR0L
0x0E68	0xFFEAC001  	MOVFF       R1, FSR0H
0x0E6C	0xF197CFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x0E70	0x0E01      	MOVLW       1
0x0E72	0x2400      	ADDWF       R0, 0 
0x0E74	0x6EE9      	MOVWF       FSR0L 
0x0E76	0x0E00      	MOVLW       0
0x0E78	0x2001      	ADDWFC      R1, 0 
0x0E7A	0x6EEA      	MOVWF       FSR0H 
0x0E7C	0xF198CFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_y_pos
0x0E80	0x0E01      	MOVLW       1
0x0E82	0x6F99      	MOVWF       FARG_Glcd_Dot_color, 1
0x0E84	0xF000EC73  	CALL        _Glcd_Dot, 0
;space.c,109 :: 		if(debris[j].x >= 128){
0x0E88	0x0E06      	MOVLW       6
0x0E8A	0x6E00      	MOVWF       R0 
0x0E8C	0x0E00      	MOVLW       0
0x0E8E	0x6E01      	MOVWF       R1 
0x0E90	0xF004C17B  	MOVFF       move_debris_j_L0, R4
0x0E94	0x0E00      	MOVLW       0
0x0E96	0x6E05      	MOVWF       R5 
0x0E98	0xF000ECFE  	CALL        _Mul_16X16_U, 0
0x0E9C	0x0E02      	MOVLW       _debris
0x0E9E	0x2400      	ADDWF       R0, 0 
0x0EA0	0x6EE9      	MOVWF       FSR0L 
0x0EA2	0x0E01      	MOVLW       hi_addr(_debris)
0x0EA4	0x2001      	ADDWFC      R1, 0 
0x0EA6	0x6EEA      	MOVWF       FSR0H 
0x0EA8	0xF001CFEE  	MOVFF       POSTINC0, R1
0x0EAC	0x0E80      	MOVLW       128
0x0EAE	0x5C01      	SUBWF       R1, 0 
0x0EB0	0xE330      	BNC         L_move_debris10
;space.c,110 :: 		Glcd_Dot(debris[j].x,debris[j].y, 0);
0x0EB2	0x0E06      	MOVLW       6
0x0EB4	0x6E00      	MOVWF       R0 
0x0EB6	0x0E00      	MOVLW       0
0x0EB8	0x6E01      	MOVWF       R1 
0x0EBA	0xF004C17B  	MOVFF       move_debris_j_L0, R4
0x0EBE	0x0E00      	MOVLW       0
0x0EC0	0x6E05      	MOVWF       R5 
0x0EC2	0xF000ECFE  	CALL        _Mul_16X16_U, 0
0x0EC6	0x0E02      	MOVLW       _debris
0x0EC8	0x2600      	ADDWF       R0, 1 
0x0ECA	0x0E01      	MOVLW       hi_addr(_debris)
0x0ECC	0x2201      	ADDWFC      R1, 1 
0x0ECE	0xFFE9C000  	MOVFF       R0, FSR0L
0x0ED2	0xFFEAC001  	MOVFF       R1, FSR0H
0x0ED6	0xF197CFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_x_pos
0x0EDA	0x0E01      	MOVLW       1
0x0EDC	0x2400      	ADDWF       R0, 0 
0x0EDE	0x6EE9      	MOVWF       FSR0L 
0x0EE0	0x0E00      	MOVLW       0
0x0EE2	0x2001      	ADDWFC      R1, 0 
0x0EE4	0x6EEA      	MOVWF       FSR0H 
0x0EE6	0xF198CFEE  	MOVFF       POSTINC0, FARG_Glcd_Dot_y_pos
0x0EEA	0x6B99      	CLRF        FARG_Glcd_Dot_color, 1
0x0EEC	0xF000EC73  	CALL        _Glcd_Dot, 0
;space.c,111 :: 		debris[j].x = 0;
0x0EF0	0x0E06      	MOVLW       6
0x0EF2	0x6E00      	MOVWF       R0 
0x0EF4	0x0E00      	MOVLW       0
0x0EF6	0x6E01      	MOVWF       R1 
0x0EF8	0xF004C17B  	MOVFF       move_debris_j_L0, R4
0x0EFC	0x0E00      	MOVLW       0
0x0EFE	0x6E05      	MOVWF       R5 
0x0F00	0xF000ECFE  	CALL        _Mul_16X16_U, 0
0x0F04	0x0E02      	MOVLW       _debris
0x0F06	0x2400      	ADDWF       R0, 0 
0x0F08	0x6EE1      	MOVWF       FSR1L 
0x0F0A	0x0E01      	MOVLW       hi_addr(_debris)
0x0F0C	0x2001      	ADDWFC      R1, 0 
0x0F0E	0x6EE2      	MOVWF       FSR1H 
0x0F10	0x6AE6      	CLRF        POSTINC1 
;space.c,112 :: 		}
L_move_debris10:
;space.c,113 :: 		}
L_move_debris9:
L_move_debris8:
;space.c,116 :: 		for(i = 0; i < 2; i++){
0x0F12	0x6B7A      	CLRF        move_debris_i_L0, 1
L_move_debris11:
0x0F14	0x0E02      	MOVLW       2
0x0F16	0x5D7A      	SUBWF       move_debris_i_L0, 0, 1
0x0F18	0xB0D8      	BTFSC       STATUS, 0 
0x0F1A	0xD13C      	BRA         L_move_debris12
;space.c,117 :: 		if((debris[j].y >= ship[i].y) && (debris[j].y <= ship[i].y + 6) && (debris[j].x >= ship[i].x) && (debris[j].x <= ship[i].x + 6)){
0x0F1C	0x0E06      	MOVLW       6
0x0F1E	0x6E00      	MOVWF       R0 
0x0F20	0x0E00      	MOVLW       0
0x0F22	0x6E01      	MOVWF       R1 
0x0F24	0xF004C17B  	MOVFF       move_debris_j_L0, R4
0x0F28	0x0E00      	MOVLW       0
0x0F2A	0x6E05      	MOVWF       R5 
0x0F2C	0xF000ECFE  	CALL        _Mul_16X16_U, 0
0x0F30	0x0E02      	MOVLW       _debris
0x0F32	0x2600      	ADDWF       R0, 1 
0x0F34	0x0E01      	MOVLW       hi_addr(_debris)
0x0F36	0x2201      	ADDWFC      R1, 1 
0x0F38	0x0E01      	MOVLW       1
0x0F3A	0x2400      	ADDWF       R0, 0 
0x0F3C	0x6EE9      	MOVWF       FSR0L 
0x0F3E	0x0E00      	MOVLW       0
0x0F40	0x2001      	ADDWFC      R1, 0 
0x0F42	0x6EEA      	MOVWF       FSR0H 
0x0F44	0xF000C17A  	MOVFF       move_debris_i_L0, R0
0x0F48	0x0E00      	MOVLW       0
0x0F4A	0x6E01      	MOVWF       R1 
0x0F4C	0x3600      	RLCF        R0, 1 
0x0F4E	0x9000      	BCF         R0, 0 
0x0F50	0x3601      	RLCF        R1, 1 
0x0F52	0x0EFE      	MOVLW       _ship
0x0F54	0x2600      	ADDWF       R0, 1 
0x0F56	0x0E00      	MOVLW       hi_addr(_ship)
0x0F58	0x2201      	ADDWFC      R1, 1 
0x0F5A	0x0E01      	MOVLW       1
0x0F5C	0x2400      	ADDWF       R0, 0 
0x0F5E	0x6ED9      	MOVWF       FSR2L 
0x0F60	0x0E00      	MOVLW       0
0x0F62	0x2001      	ADDWFC      R1, 0 
0x0F64	0x6EDA      	MOVWF       FSR2H 
0x0F66	0x50DE      	MOVF        POSTINC2, 0 
0x0F68	0x5CEE      	SUBWF       POSTINC0, 0 
0x0F6A	0xA0D8      	BTFSS       STATUS, 0 
0x0F6C	0xD111      	BRA         L_move_debris16
0x0F6E	0x0E06      	MOVLW       6
0x0F70	0x6E00      	MOVWF       R0 
0x0F72	0x0E00      	MOVLW       0
0x0F74	0x6E01      	MOVWF       R1 
0x0F76	0xF004C17B  	MOVFF       move_debris_j_L0, R4
0x0F7A	0x0E00      	MOVLW       0
0x0F7C	0x6E05      	MOVWF       R5 
0x0F7E	0xF000ECFE  	CALL        _Mul_16X16_U, 0
0x0F82	0x0E02      	MOVLW       _debris
0x0F84	0x2600      	ADDWF       R0, 1 
0x0F86	0x0E01      	MOVLW       hi_addr(_debris)
0x0F88	0x2201      	ADDWFC      R1, 1 
0x0F8A	0x0E01      	MOVLW       1
0x0F8C	0x2400      	ADDWF       R0, 0 
0x0F8E	0x6EE9      	MOVWF       FSR0L 
0x0F90	0x0E00      	MOVLW       0
0x0F92	0x2001      	ADDWFC      R1, 0 
0x0F94	0x6EEA      	MOVWF       FSR0H 
0x0F96	0xF003CFEE  	MOVFF       POSTINC0, R3
0x0F9A	0xF000C17A  	MOVFF       move_debris_i_L0, R0
0x0F9E	0x0E00      	MOVLW       0
0x0FA0	0x6E01      	MOVWF       R1 
0x0FA2	0x3600      	RLCF        R0, 1 
0x0FA4	0x9000      	BCF         R0, 0 
0x0FA6	0x3601      	RLCF        R1, 1 
0x0FA8	0x0EFE      	MOVLW       _ship
0x0FAA	0x2600      	ADDWF       R0, 1 
0x0FAC	0x0E00      	MOVLW       hi_addr(_ship)
0x0FAE	0x2201      	ADDWFC      R1, 1 
0x0FB0	0x0E01      	MOVLW       1
0x0FB2	0x2400      	ADDWF       R0, 0 
0x0FB4	0x6EE9      	MOVWF       FSR0L 
0x0FB6	0x0E00      	MOVLW       0
0x0FB8	0x2001      	ADDWFC      R1, 0 
0x0FBA	0x6EEA      	MOVWF       FSR0H 
0x0FBC	0x0E06      	MOVLW       6
0x0FBE	0x24EE      	ADDWF       POSTINC0, 0 
0x0FC0	0x6E01      	MOVWF       R1 
0x0FC2	0x6A02      	CLRF        R2 
0x0FC4	0x0E00      	MOVLW       0
0x0FC6	0x2202      	ADDWFC      R2, 1 
0x0FC8	0x0E80      	MOVLW       128
0x0FCA	0x1802      	XORWF       R2, 0 
0x0FCC	0x6E00      	MOVWF       R0 
0x0FCE	0x0E80      	MOVLW       128
0x0FD0	0x5C00      	SUBWF       R0, 0 
0x0FD2	0xE102      	BNZ         L__move_debris171
0x0FD4	0x5003      	MOVF        R3, 0 
0x0FD6	0x5C01      	SUBWF       R1, 0 
L__move_debris171:
0x0FD8	0xA0D8      	BTFSS       STATUS, 0 
0x0FDA	0xD0DA      	BRA         L_move_debris16
0x0FDC	0x0E06      	MOVLW       6
0x0FDE	0x6E00      	MOVWF       R0 
0x0FE0	0x0E00      	MOVLW       0
0x0FE2	0x6E01      	MOVWF       R1 
0x0FE4	0xF004C17B  	MOVFF       move_debris_j_L0, R4
0x0FE8	0x0E00      	MOVLW       0
0x0FEA	0x6E05      	MOVWF       R5 
0x0FEC	0xF000ECFE  	CALL        _Mul_16X16_U, 0
0x0FF0	0x0E02      	MOVLW       _debris
0x0FF2	0x2400      	ADDWF       R0, 0 
0x0FF4	0x6EE9      	MOVWF       FSR0L 
0x0FF6	0x0E01      	MOVLW       hi_addr(_debris)
0x0FF8	0x2001      	ADDWFC      R1, 0 
0x0FFA	0x6EEA      	MOVWF       FSR0H 
0x0FFC	0xF003CFEE  	MOVFF       POSTINC0, R3
0x1000	0xF000C17A  	MOVFF       move_debris_i_L0, R0
0x1004	0x0E00      	MOVLW       0
0x1006	0x6E01      	MOVWF       R1 
0x1008	0x3600      	RLCF        R0, 1 
0x100A	0x9000      	BCF         R0, 0 
0x100C	0x3601      	RLCF        R1, 1 
0x100E	0x0EFE      	MOVLW       _ship
0x1010	0x2400      	ADDWF       R0, 0 
0x1012	0x6ED9      	MOVWF       FSR2L 
0x1014	0x0E00      	MOVLW       hi_addr(_ship)
0x1016	0x2001      	ADDWFC      R1, 0 
0x1018	0x6EDA      	MOVWF       FSR2H 
0x101A	0xF001CFDE  	MOVFF       POSTINC2, R1
0x101E	0x5001      	MOVF        R1, 0 
0x1020	0x5C03      	SUBWF       R3, 0 
0x1022	0xA0D8      	BTFSS       STATUS, 0 
0x1024	0xD0B5      	BRA         L_move_debris16
0x1026	0x0E06      	MOVLW       6
0x1028	0x6E00      	MOVWF       R0 
0x102A	0x0E00      	MOVLW       0
0x102C	0x6E01      	MOVWF       R1 
0x102E	0xF004C17B  	MOVFF       move_debris_j_L0, R4
0x1032	0x0E00      	MOVLW       0
0x1034	0x6E05      	MOVWF       R5 
0x1036	0xF000ECFE  	CALL        _Mul_16X16_U, 0
0x103A	0x0E02      	MOVLW       _debris
0x103C	0x2400      	ADDWF       R0, 0 
0x103E	0x6EE9      	MOVWF       FSR0L 
0x1040	0x0E01      	MOVLW       hi_addr(_debris)
0x1042	0x2001      	ADDWFC      R1, 0 
0x1044	0x6EEA      	MOVWF       FSR0H 
0x1046	0xF003CFEE  	MOVFF       POSTINC0, R3
0x104A	0xF000C17A  	MOVFF       move_debris_i_L0, R0
0x104E	0x0E00      	MOVLW       0
0x1050	0x6E01      	MOVWF       R1 
0x1052	0x3600      	RLCF        R0, 1 
0x1054	0x9000      	BCF         R0, 0 
0x1056	0x3601      	RLCF        R1, 1 
0x1058	0x0EFE      	MOVLW       _ship
0x105A	0x2400      	ADDWF       R0, 0 
0x105C	0x6EE9      	MOVWF       FSR0L 
0x105E	0x0E00      	MOVLW       hi_addr(_ship)
0x1060	0x2001      	ADDWFC      R1, 0 
0x1062	0x6EEA      	MOVWF       FSR0H 
0x1064	0xF000CFEE  	MOVFF       POSTINC0, R0
0x1068	0x0E06      	MOVLW       6
0x106A	0x2400      	ADDWF       R0, 0 
0x106C	0x6E01      	MOVWF       R1 
0x106E	0x6A02      	CLRF        R2 
0x1070	0x0E00      	MOVLW       0
0x1072	0x2202      	ADDWFC      R2, 1 
0x1074	0x0E80      	MOVLW       128
0x1076	0x1802      	XORWF       R2, 0 
0x1078	0x6E00      	MOVWF       R0 
0x107A	0x0E80      	MOVLW       128
0x107C	0x5C00      	SUBWF       R0, 0 
0x107E	0xE102      	BNZ         L__move_debris172
0x1080	0x5003      	MOVF        R3, 0 
0x1082	0x5C01      	SUBWF       R1, 0 
L__move_debris172:
0x1084	0xA0D8      	BTFSS       STATUS, 0 
0x1086	0xD084      	BRA         L_move_debris16
L__move_debris162:
;space.c,118 :: 		draw_player(ship[i].x, ship[i].y, 0);
0x1088	0xF000C17A  	MOVFF       move_debris_i_L0, R0
0x108C	0x0E00      	MOVLW       0
0x108E	0x6E01      	MOVWF       R1 
0x1090	0x3600      	RLCF        R0, 1 
0x1092	0x9000      	BCF         R0, 0 
0x1094	0x3601      	RLCF        R1, 1 
0x1096	0x0EFE      	MOVLW       _ship
0x1098	0x2600      	ADDWF       R0, 1 
0x109A	0x0E00      	MOVLW       hi_addr(_ship)
0x109C	0x2201      	ADDWFC      R1, 1 
0x109E	0xFFE9C000  	MOVFF       R0, FSR0L
0x10A2	0xFFEAC001  	MOVFF       R1, FSR0H
0x10A6	0xF188CFEE  	MOVFF       POSTINC0, FARG_draw_player_x
0x10AA	0x0E01      	MOVLW       1
0x10AC	0x2400      	ADDWF       R0, 0 
0x10AE	0x6EE9      	MOVWF       FSR0L 
0x10B0	0x0E00      	MOVLW       0
0x10B2	0x2001      	ADDWFC      R1, 0 
0x10B4	0x6EEA      	MOVWF       FSR0H 
0x10B6	0xF189CFEE  	MOVFF       POSTINC0, FARG_draw_player_y
0x10BA	0x6B8A      	CLRF        FARG_draw_player_color, 1
0x10BC	0xF001ECAE  	CALL        _draw_player, 0
;space.c,119 :: 		if(i == 0){
0x10C0	0x517A      	MOVF        move_debris_i_L0, 0, 1
0x10C2	0x0A00      	XORLW       0
0x10C4	0xE123      	BNZ         L_move_debris17
;space.c,120 :: 		ship[i].x = 40;
0x10C6	0xF000C17A  	MOVFF       move_debris_i_L0, R0
0x10CA	0x0E00      	MOVLW       0
0x10CC	0x6E01      	MOVWF       R1 
0x10CE	0x3600      	RLCF        R0, 1 
0x10D0	0x9000      	BCF         R0, 0 
0x10D2	0x3601      	RLCF        R1, 1 
0x10D4	0x0EFE      	MOVLW       _ship
0x10D6	0x2400      	ADDWF       R0, 0 
0x10D8	0x6EE1      	MOVWF       FSR1L 
0x10DA	0x0E00      	MOVLW       hi_addr(_ship)
0x10DC	0x2001      	ADDWFC      R1, 0 
0x10DE	0x6EE2      	MOVWF       FSR1H 
0x10E0	0x0E28      	MOVLW       40
0x10E2	0x6EE6      	MOVWF       POSTINC1 
;space.c,121 :: 		ship[i].y = 57;
0x10E4	0xF000C17A  	MOVFF       move_debris_i_L0, R0
0x10E8	0x0E00      	MOVLW       0
0x10EA	0x6E01      	MOVWF       R1 
0x10EC	0x3600      	RLCF        R0, 1 
0x10EE	0x9000      	BCF         R0, 0 
0x10F0	0x3601      	RLCF        R1, 1 
0x10F2	0x0EFE      	MOVLW       _ship
0x10F4	0x2600      	ADDWF       R0, 1 
0x10F6	0x0E00      	MOVLW       hi_addr(_ship)
0x10F8	0x2201      	ADDWFC      R1, 1 
0x10FA	0x0E01      	MOVLW       1
0x10FC	0x2400      	ADDWF       R0, 0 
0x10FE	0x6EE1      	MOVWF       FSR1L 
0x1100	0x0E00      	MOVLW       0
0x1102	0x2001      	ADDWFC      R1, 0 
0x1104	0x6EE2      	MOVWF       FSR1H 
0x1106	0x0E39      	MOVLW       57
0x1108	0x6EE6      	MOVWF       POSTINC1 
;space.c,122 :: 		}
0x110A	0xD025      	BRA         L_move_debris18
L_move_debris17:
;space.c,123 :: 		else if(i == 1){
0x110C	0x517A      	MOVF        move_debris_i_L0, 0, 1
0x110E	0x0A01      	XORLW       1
0x1110	0xE122      	BNZ         L_move_debris19
;space.c,124 :: 		ship[i].x = 80;
0x1112	0xF000C17A  	MOVFF       move_debris_i_L0, R0
0x1116	0x0E00      	MOVLW       0
0x1118	0x6E01      	MOVWF       R1 
0x111A	0x3600      	RLCF        R0, 1 
0x111C	0x9000      	BCF         R0, 0 
0x111E	0x3601      	RLCF        R1, 1 
0x1120	0x0EFE      	MOVLW       _ship
0x1122	0x2400      	ADDWF       R0, 0 
0x1124	0x6EE1      	MOVWF       FSR1L 
0x1126	0x0E00      	MOVLW       hi_addr(_ship)
0x1128	0x2001      	ADDWFC      R1, 0 
0x112A	0x6EE2      	MOVWF       FSR1H 
0x112C	0x0E50      	MOVLW       80
0x112E	0x6EE6      	MOVWF       POSTINC1 
;space.c,125 :: 		ship[i].y = 57;
0x1130	0xF000C17A  	MOVFF       move_debris_i_L0, R0
0x1134	0x0E00      	MOVLW       0
0x1136	0x6E01      	MOVWF       R1 
0x1138	0x3600      	RLCF        R0, 1 
0x113A	0x9000      	BCF         R0, 0 
0x113C	0x3601      	RLCF        R1, 1 
0x113E	0x0EFE      	MOVLW       _ship
0x1140	0x2600      	ADDWF       R0, 1 
0x1142	0x0E00      	MOVLW       hi_addr(_ship)
0x1144	0x2201      	ADDWFC      R1, 1 
0x1146	0x0E01      	MOVLW       1
0x1148	0x2400      	ADDWF       R0, 0 
0x114A	0x6EE1      	MOVWF       FSR1L 
0x114C	0x0E00      	MOVLW       0
0x114E	0x2001      	ADDWFC      R1, 0 
0x1150	0x6EE2      	MOVWF       FSR1H 
0x1152	0x0E39      	MOVLW       57
0x1154	0x6EE6      	MOVWF       POSTINC1 
;space.c,126 :: 		}
L_move_debris19:
L_move_debris18:
;space.c,127 :: 		draw_player(ship[i].x, ship[i].y, 1);
0x1156	0xF000C17A  	MOVFF       move_debris_i_L0, R0
0x115A	0x0E00      	MOVLW       0
0x115C	0x6E01      	MOVWF       R1 
0x115E	0x3600      	RLCF        R0, 1 
0x1160	0x9000      	BCF         R0, 0 
0x1162	0x3601      	RLCF        R1, 1 
0x1164	0x0EFE      	MOVLW       _ship
0x1166	0x2600      	ADDWF       R0, 1 
0x1168	0x0E00      	MOVLW       hi_addr(_ship)
0x116A	0x2201      	ADDWFC      R1, 1 
0x116C	0xFFE9C000  	MOVFF       R0, FSR0L
0x1170	0xFFEAC001  	MOVFF       R1, FSR0H
0x1174	0xF188CFEE  	MOVFF       POSTINC0, FARG_draw_player_x
0x1178	0x0E01      	MOVLW       1
0x117A	0x2400      	ADDWF       R0, 0 
0x117C	0x6EE9      	MOVWF       FSR0L 
0x117E	0x0E00      	MOVLW       0
0x1180	0x2001      	ADDWFC      R1, 0 
0x1182	0x6EEA      	MOVWF       FSR0H 
0x1184	0xF189CFEE  	MOVFF       POSTINC0, FARG_draw_player_y
0x1188	0x0E01      	MOVLW       1
0x118A	0x6F8A      	MOVWF       FARG_draw_player_color, 1
0x118C	0xF001ECAE  	CALL        _draw_player, 0
;space.c,128 :: 		}
L_move_debris16:
;space.c,116 :: 		for(i = 0; i < 2; i++){
0x1190	0x2B7A      	INCF        move_debris_i_L0, 1, 1
;space.c,129 :: 		}
0x1192	0xD6C0      	BRA         L_move_debris11
L_move_debris12:
;space.c,95 :: 		for(j = 0; j <= 14; j++){
0x1194	0x2B7B      	INCF        move_debris_j_L0, 1, 1
;space.c,130 :: 		}
0x1196	0xD543      	BRA         L_move_debris3
L_move_debris4:
;space.c,131 :: 		}
L_move_debris2:
;space.c,132 :: 		}
L_end_move_debris:
0x1198	0x0012      	RETURN      0
; end of _move_debris
_game_over:
;space.c,222 :: 		void game_over(){
;space.c,223 :: 		if(score[0] > score[1]){
0x119A	0x504A      	MOVF        _score, 0 
0x119C	0x5C4B      	SUBWF       _score+1, 0 
0x119E	0xE22D      	BC          L_game_over44
;space.c,224 :: 		Glcd_Write_Text("YOU WINS",35,0,1);
0x11A0	0x0E41      	MOVLW       ?lstr1_space
0x11A2	0x0101      	MOVLB       1
0x11A4	0x6F81      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x11A6	0x0E00      	MOVLW       hi_addr(?lstr1_space)
0x11A8	0x6F82      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x11AA	0x0E23      	MOVLW       35
0x11AC	0x6F83      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x11AE	0x6B84      	CLRF        FARG_Glcd_Write_Text_page_num, 1
0x11B0	0x0E01      	MOVLW       1
0x11B2	0x6F85      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x11B4	0xF002ECAA  	CALL        _Glcd_Write_Text, 0
;space.c,225 :: 		delay_ms(5000);
0x11B8	0x0E33      	MOVLW       51
0x11BA	0x6E0B      	MOVWF       R11, 0
0x11BC	0x0EBB      	MOVLW       187
0x11BE	0x6E0C      	MOVWF       R12, 0
0x11C0	0x0EDF      	MOVLW       223
0x11C2	0x6E0D      	MOVWF       R13, 0
L_game_over45:
0x11C4	0x2E0D      	DECFSZ      R13, 1, 0
0x11C6	0xD7FE      	BRA         L_game_over45
0x11C8	0x2E0C      	DECFSZ      R12, 1, 0
0x11CA	0xD7FC      	BRA         L_game_over45
0x11CC	0x2E0B      	DECFSZ      R11, 1, 0
0x11CE	0xD7FA      	BRA         L_game_over45
0x11D0	0x0000      	NOP
0x11D2	0x0000      	NOP
;space.c,226 :: 		while(1){
L_game_over46:
;space.c,227 :: 		if(Button(&PORTC,1,1,0)){ //Quiero volver a la portada como si acabara de encender la consola
0x11D4	0x0E82      	MOVLW       PORTC
0x11D6	0x6F81      	MOVWF       FARG_Button_port, 1
0x11D8	0x0E0F      	MOVLW       hi_addr(PORTC)
0x11DA	0x6F82      	MOVWF       FARG_Button_port+1, 1
0x11DC	0x0E01      	MOVLW       1
0x11DE	0x6F83      	MOVWF       FARG_Button_pin, 1
0x11E0	0x0E01      	MOVLW       1
0x11E2	0x6F84      	MOVWF       FARG_Button_time_ms, 1
0x11E4	0x6B85      	CLRF        FARG_Button_active_state, 1
0x11E6	0xF002EC48  	CALL        _Button, 0
0x11EA	0x5200      	MOVF        R0, 1 
0x11EC	0xE004      	BZ          L_game_over48
;space.c,228 :: 		Glcd_Fill(0x00);
0x11EE	0x6B81      	CLRF        FARG_Glcd_Fill_pattern, 1
0x11F0	0xF002EC80  	CALL        _Glcd_Fill, 0
;space.c,229 :: 		break;
0x11F4	0xD001      	BRA         L_game_over47
;space.c,230 :: 		}
L_game_over48:
;space.c,231 :: 		}
0x11F6	0xD7EE      	BRA         L_game_over46
L_game_over47:
;space.c,232 :: 		}
0x11F8	0xD05F      	BRA         L_game_over49
L_game_over44:
;space.c,233 :: 		else if(score[0] < score[1]){
0x11FA	0x504B      	MOVF        _score+1, 0 
0x11FC	0x5C4A      	SUBWF       _score, 0 
0x11FE	0xE22D      	BC          L_game_over50
;space.c,234 :: 		Glcd_Write_Text("PC WINS",35,0,1);
0x1200	0x0101      	MOVLB       1
0x1202	0x0E4C      	MOVLW       ?lstr2_space
0x1204	0x6F81      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x1206	0x0E00      	MOVLW       hi_addr(?lstr2_space)
0x1208	0x6F82      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x120A	0x0E23      	MOVLW       35
0x120C	0x6F83      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x120E	0x6B84      	CLRF        FARG_Glcd_Write_Text_page_num, 1
0x1210	0x0E01      	MOVLW       1
0x1212	0x6F85      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x1214	0xF002ECAA  	CALL        _Glcd_Write_Text, 0
;space.c,235 :: 		delay_ms(5000);
0x1218	0x0E33      	MOVLW       51
0x121A	0x6E0B      	MOVWF       R11, 0
0x121C	0x0EBB      	MOVLW       187
0x121E	0x6E0C      	MOVWF       R12, 0
0x1220	0x0EDF      	MOVLW       223
0x1222	0x6E0D      	MOVWF       R13, 0
L_game_over51:
0x1224	0x2E0D      	DECFSZ      R13, 1, 0
0x1226	0xD7FE      	BRA         L_game_over51
0x1228	0x2E0C      	DECFSZ      R12, 1, 0
0x122A	0xD7FC      	BRA         L_game_over51
0x122C	0x2E0B      	DECFSZ      R11, 1, 0
0x122E	0xD7FA      	BRA         L_game_over51
0x1230	0x0000      	NOP
0x1232	0x0000      	NOP
;space.c,237 :: 		while(1){
L_game_over52:
;space.c,238 :: 		if(Button(&PORTC,1,1,0)){ //Quiero volver a la portada como si acabara de encender la consola
0x1234	0x0E82      	MOVLW       PORTC
0x1236	0x6F81      	MOVWF       FARG_Button_port, 1
0x1238	0x0E0F      	MOVLW       hi_addr(PORTC)
0x123A	0x6F82      	MOVWF       FARG_Button_port+1, 1
0x123C	0x0E01      	MOVLW       1
0x123E	0x6F83      	MOVWF       FARG_Button_pin, 1
0x1240	0x0E01      	MOVLW       1
0x1242	0x6F84      	MOVWF       FARG_Button_time_ms, 1
0x1244	0x6B85      	CLRF        FARG_Button_active_state, 1
0x1246	0xF002EC48  	CALL        _Button, 0
0x124A	0x5200      	MOVF        R0, 1 
0x124C	0xE004      	BZ          L_game_over54
;space.c,239 :: 		Glcd_Fill(0x00);
0x124E	0x6B81      	CLRF        FARG_Glcd_Fill_pattern, 1
0x1250	0xF002EC80  	CALL        _Glcd_Fill, 0
;space.c,240 :: 		break;
0x1254	0xD001      	BRA         L_game_over53
;space.c,241 :: 		}
L_game_over54:
;space.c,242 :: 		}
0x1256	0xD7EE      	BRA         L_game_over52
L_game_over53:
;space.c,243 :: 		}
0x1258	0xD02F      	BRA         L_game_over55
L_game_over50:
;space.c,244 :: 		else if(score[0] == score[1]){
0x125A	0x504A      	MOVF        _score, 0 
0x125C	0x184B      	XORWF       _score+1, 0 
0x125E	0xE12C      	BNZ         L_game_over56
;space.c,245 :: 		Glcd_Write_Text("IT\'S A TIE",35,0,1);
0x1260	0x0101      	MOVLB       1
0x1262	0x0E55      	MOVLW       ?lstr3_space
0x1264	0x6F81      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x1266	0x0E00      	MOVLW       hi_addr(?lstr3_space)
0x1268	0x6F82      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x126A	0x0E23      	MOVLW       35
0x126C	0x6F83      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x126E	0x6B84      	CLRF        FARG_Glcd_Write_Text_page_num, 1
0x1270	0x0E01      	MOVLW       1
0x1272	0x6F85      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x1274	0xF002ECAA  	CALL        _Glcd_Write_Text, 0
;space.c,246 :: 		delay_ms(5000);
0x1278	0x0E33      	MOVLW       51
0x127A	0x6E0B      	MOVWF       R11, 0
0x127C	0x0EBB      	MOVLW       187
0x127E	0x6E0C      	MOVWF       R12, 0
0x1280	0x0EDF      	MOVLW       223
0x1282	0x6E0D      	MOVWF       R13, 0
L_game_over57:
0x1284	0x2E0D      	DECFSZ      R13, 1, 0
0x1286	0xD7FE      	BRA         L_game_over57
0x1288	0x2E0C      	DECFSZ      R12, 1, 0
0x128A	0xD7FC      	BRA         L_game_over57
0x128C	0x2E0B      	DECFSZ      R11, 1, 0
0x128E	0xD7FA      	BRA         L_game_over57
0x1290	0x0000      	NOP
0x1292	0x0000      	NOP
;space.c,248 :: 		while(1){
L_game_over58:
;space.c,249 :: 		if(Button(&PORTC,1,1,0)){ //Quiero volver a la portada como si acabara de encender la consola
0x1294	0x0E82      	MOVLW       PORTC
0x1296	0x6F81      	MOVWF       FARG_Button_port, 1
0x1298	0x0E0F      	MOVLW       hi_addr(PORTC)
0x129A	0x6F82      	MOVWF       FARG_Button_port+1, 1
0x129C	0x0E01      	MOVLW       1
0x129E	0x6F83      	MOVWF       FARG_Button_pin, 1
0x12A0	0x0E01      	MOVLW       1
0x12A2	0x6F84      	MOVWF       FARG_Button_time_ms, 1
0x12A4	0x6B85      	CLRF        FARG_Button_active_state, 1
0x12A6	0xF002EC48  	CALL        _Button, 0
0x12AA	0x5200      	MOVF        R0, 1 
0x12AC	0xE004      	BZ          L_game_over60
;space.c,250 :: 		Glcd_Fill(0x00);
0x12AE	0x6B81      	CLRF        FARG_Glcd_Fill_pattern, 1
0x12B0	0xF002EC80  	CALL        _Glcd_Fill, 0
;space.c,251 :: 		break;
0x12B4	0xD001      	BRA         L_game_over59
;space.c,252 :: 		}
L_game_over60:
;space.c,253 :: 		}
0x12B6	0xD7EE      	BRA         L_game_over58
L_game_over59:
;space.c,254 :: 		}
L_game_over56:
L_game_over55:
L_game_over49:
;space.c,255 :: 		}
L_end_game_over:
0x12B8	0x0012      	RETURN      0
; end of _game_over
_output_data:
;space.c,358 :: 		void output_data(char *serial_dir){
;space.c,359 :: 		while (UART1_Tx_Idle()!= 1);
L_output_data82:
0x12BA	0xF002EC35  	CALL        _UART1_Tx_Idle, 0
0x12BE	0x5000      	MOVF        R0, 0 
0x12C0	0x0A01      	XORLW       1
0x12C2	0xE001      	BZ          L_output_data83
0x12C4	0xD7FA      	BRA         L_output_data82
L_output_data83:
;space.c,360 :: 		UART1_Write_Text(serial_dir);
0x12C6	0xF181C179  	MOVFF       FARG_output_data_serial_dir, FARG_UART1_Write_Text_uart_text
0x12CA	0xF182C17A  	MOVFF       FARG_output_data_serial_dir+1, FARG_UART1_Write_Text_uart_text+1
0x12CE	0xF003ECEA  	CALL        _UART1_Write_Text, 0
;space.c,361 :: 		}
L_end_output_data:
0x12D2	0x0012      	RETURN      0
; end of _output_data
_data_pack:
;space.c,363 :: 		void data_pack() {  //Funcion para empaquetar datos a enviar     ///serial_pack_data //Hay que ver como hago para enviar la ubicacion en y de cada asteroide
;space.c,365 :: 		info[0] = ship[0].y + '0';
0x12D4	0x0E30      	MOVLW       48
0x12D6	0x0100      	MOVLB       0
0x12D8	0x25FF      	ADDWF       _ship+1, 0, 1
0x12DA	0x0101      	MOVLB       1
0x12DC	0x6F56      	MOVWF       _info, 1
;space.c,366 :: 		info[1] = ship[1].y + '0';
0x12DE	0x0E30      	MOVLW       48
0x12E0	0x2501      	ADDWF       _ship+3, 0, 1
0x12E2	0x6F57      	MOVWF       _info+1, 1
;space.c,367 :: 		info[2] = score[0] + '0';
0x12E4	0x0E30      	MOVLW       48
0x12E6	0x244A      	ADDWF       _score, 0 
0x12E8	0x6F58      	MOVWF       _info+2, 1
;space.c,368 :: 		info[3] = score[1] + '0';
0x12EA	0x0E30      	MOVLW       48
0x12EC	0x244B      	ADDWF       _score+1, 0 
0x12EE	0x6F59      	MOVWF       _info+3, 1
;space.c,369 :: 		info[4] = 'P';
0x12F0	0x0E50      	MOVLW       80
0x12F2	0x6F5A      	MOVWF       _info+4, 1
;space.c,370 :: 		}
L_end_data_pack:
0x12F4	0x0012      	RETURN      0
; end of _data_pack
_UART1_Read_Text:
;__Lib_UART_c67.c,78 :: 		
;__Lib_UART_c67.c,79 :: 		
0x12F6	0x0101      	MOVLB       1
0x12F8	0x6B7F      	CLRF        UART1_Read_Text_out_idx_L0, 1
0x12FA	0x6B80      	CLRF        UART1_Read_Text_delim_idx_L0, 1
;__Lib_UART_c67.c,81 :: 		
L_UART1_Read_Text7:
0x12FC	0x537D      	MOVF        FARG_UART1_Read_Text_Attempts, 1, 1
0x12FE	0xE044      	BZ          L_UART1_Read_Text8
;__Lib_UART_c67.c,83 :: 		
0x1300	0x517D      	MOVF        FARG_UART1_Read_Text_Attempts, 0, 1
0x1302	0x0AFF      	XORLW       255
0x1304	0xA4D8      	BTFSS       STATUS, 2 
;__Lib_UART_c67.c,84 :: 		
0x1306	0x077D      	DECF        FARG_UART1_Read_Text_Attempts, 1, 1
L_UART1_Read_Text9:
;__Lib_UART_c67.c,86 :: 		
L_UART1_Read_Text10:
0x1308	0xF002EC43  	CALL        _UART1_Data_Ready, 0
0x130C	0x5000      	MOVF        R0, 0 
0x130E	0x0A00      	XORLW       0
0x1310	0xE101      	BNZ         L_UART1_Read_Text11
;__Lib_UART_c67.c,87 :: 		
0x1312	0xD7FA      	BRA         L_UART1_Read_Text10
L_UART1_Read_Text11:
;__Lib_UART_c67.c,89 :: 		
0x1314	0xF002EC3A  	CALL        _UART1_Read, 0
0x1318	0xF17EC000  	MOVFF       R0, UART1_Read_Text_r_data_L0
;__Lib_UART_c67.c,90 :: 		
0x131C	0x0101      	MOVLB       1
0x131E	0x517F      	MOVF        UART1_Read_Text_out_idx_L0, 0, 1
0x1320	0x2579      	ADDWF       FARG_UART1_Read_Text_Output, 0, 1
0x1322	0x6EE1      	MOVWF       FSR1L 
0x1324	0x0E00      	MOVLW       0
0x1326	0x217A      	ADDWFC      FARG_UART1_Read_Text_Output+1, 0, 1
0x1328	0x6EE2      	MOVWF       FSR1H 
0x132A	0xFFE6C000  	MOVFF       R0, POSTINC1
0x132E	0x2B7F      	INCF        UART1_Read_Text_out_idx_L0, 1, 1
;__Lib_UART_c67.c,91 :: 		
0x1330	0x5180      	MOVF        UART1_Read_Text_delim_idx_L0, 0, 1
0x1332	0x257B      	ADDWF       FARG_UART1_Read_Text_Delimiter, 0, 1
0x1334	0x6EE9      	MOVWF       FSR0L 
0x1336	0x0E00      	MOVLW       0
0x1338	0x217C      	ADDWFC      FARG_UART1_Read_Text_Delimiter+1, 0, 1
0x133A	0x6EEA      	MOVWF       FSR0H 
0x133C	0x50EE      	MOVF        POSTINC0, 0 
0x133E	0x197E      	XORWF       UART1_Read_Text_r_data_L0, 0, 1
0x1340	0xE102      	BNZ         L_UART1_Read_Text12
;__Lib_UART_c67.c,92 :: 		
0x1342	0x2B80      	INCF        UART1_Read_Text_delim_idx_L0, 1, 1
;__Lib_UART_c67.c,93 :: 		
0x1344	0xD009      	BRA         L_UART1_Read_Text13
L_UART1_Read_Text12:
;__Lib_UART_c67.c,95 :: 		
0x1346	0x6B80      	CLRF        UART1_Read_Text_delim_idx_L0, 1
;__Lib_UART_c67.c,96 :: 		
0x1348	0xFFE9C17B  	MOVFF       FARG_UART1_Read_Text_Delimiter, FSR0L
0x134C	0xFFEAC17C  	MOVFF       FARG_UART1_Read_Text_Delimiter+1, FSR0H
0x1350	0x50EE      	MOVF        POSTINC0, 0 
0x1352	0x197E      	XORWF       UART1_Read_Text_r_data_L0, 0, 1
0x1354	0xB4D8      	BTFSC       STATUS, 2 
;__Lib_UART_c67.c,97 :: 		
0x1356	0x2B80      	INCF        UART1_Read_Text_delim_idx_L0, 1, 1
;__Lib_UART_c67.c,98 :: 		
L_UART1_Read_Text14:
;__Lib_UART_c67.c,99 :: 		
L_UART1_Read_Text13:
;__Lib_UART_c67.c,101 :: 		
0x1358	0x5180      	MOVF        UART1_Read_Text_delim_idx_L0, 0, 1
0x135A	0x257B      	ADDWF       FARG_UART1_Read_Text_Delimiter, 0, 1
0x135C	0x6EE9      	MOVWF       FSR0L 
0x135E	0x0E00      	MOVLW       0
0x1360	0x217C      	ADDWFC      FARG_UART1_Read_Text_Delimiter+1, 0, 1
0x1362	0x6EEA      	MOVWF       FSR0H 
0x1364	0x50EE      	MOVF        POSTINC0, 0 
0x1366	0x0A00      	XORLW       0
0x1368	0xE10E      	BNZ         L_UART1_Read_Text15
;__Lib_UART_c67.c,102 :: 		
0x136A	0x5180      	MOVF        UART1_Read_Text_delim_idx_L0, 0, 1
0x136C	0x5D7F      	SUBWF       UART1_Read_Text_out_idx_L0, 0, 1
0x136E	0x6E00      	MOVWF       R0 
0x1370	0x6A01      	CLRF        R1 
0x1372	0x0E00      	MOVLW       0
0x1374	0x5A01      	SUBWFB      R1, 1 
0x1376	0x5000      	MOVF        R0, 0 
0x1378	0x2579      	ADDWF       FARG_UART1_Read_Text_Output, 0, 1
0x137A	0x6EE1      	MOVWF       FSR1L 
0x137C	0x5001      	MOVF        R1, 0 
0x137E	0x217A      	ADDWFC      FARG_UART1_Read_Text_Output+1, 0, 1
0x1380	0x6EE2      	MOVWF       FSR1H 
0x1382	0x6AE6      	CLRF        POSTINC1 
;__Lib_UART_c67.c,103 :: 		
0x1384	0xD006      	BRA         L_end_UART1_Read_Text
;__Lib_UART_c67.c,104 :: 		
L_UART1_Read_Text15:
;__Lib_UART_c67.c,106 :: 		
0x1386	0xD7BA      	BRA         L_UART1_Read_Text7
L_UART1_Read_Text8:
;__Lib_UART_c67.c,107 :: 		
0x1388	0xFFE1C179  	MOVFF       FARG_UART1_Read_Text_Output, FSR1L
0x138C	0xFFE2C17A  	MOVFF       FARG_UART1_Read_Text_Output+1, FSR1H
0x1390	0x6AE6      	CLRF        POSTINC1 
;__Lib_UART_c67.c,108 :: 		
L_end_UART1_Read_Text:
0x1392	0x0012      	RETURN      0
; end of _UART1_Read_Text
_desdata_pack:
;space.c,341 :: 		void desdata_pack(){   // Funcion para extraer datos del paquete recibido por esclavo
;space.c,342 :: 		ship[0].y   =   info[0] - '0';
0x1394	0x0E30      	MOVLW       48
0x1396	0x0101      	MOVLB       1
0x1398	0x5D56      	SUBWF       _info, 0, 1
0x139A	0x6E00      	MOVWF       R0 
0x139C	0xF0FFC000  	MOVFF       R0, _ship+1
;space.c,343 :: 		ship[1].y   =   info[1] - '0';
0x13A0	0x0E30      	MOVLW       48
0x13A2	0x5D57      	SUBWF       _info+1, 0, 1
0x13A4	0x6E00      	MOVWF       R0 
0x13A6	0xF101C000  	MOVFF       R0, _ship+3
;space.c,344 :: 		score[0]    =   info[2] - '0';
0x13AA	0x0E30      	MOVLW       48
0x13AC	0x5D58      	SUBWF       _info+2, 0, 1
0x13AE	0x6E4A      	MOVWF       _score 
;space.c,345 :: 		score[1]    =   info[3] - '0';
0x13B0	0x0E30      	MOVLW       48
0x13B2	0x5D59      	SUBWF       _info+3, 0, 1
0x13B4	0x6E4B      	MOVWF       _score+1 
;space.c,346 :: 		}
L_end_desdata_pack:
0x13B6	0x0012      	RETURN      0
; end of _desdata_pack
_save_old_data:
;space.c,372 :: 		void save_old_data(){
;space.c,373 :: 		unsigned short i = 0;
0x13B8	0x0101      	MOVLB       1
0x13BA	0x6B79      	CLRF        save_old_data_i_L0, 1
;space.c,374 :: 		old_ship[0].y = ship[0].y;
0x13BC	0xF0FBC0FF  	MOVFF       _ship+1, _old_ship+1
;space.c,375 :: 		old_ship[1].y = ship[1].y;
0x13C0	0xF0FDC101  	MOVFF       _ship+3, _old_ship+3
;space.c,376 :: 		for(i = 0; i < 15; i++){
0x13C4	0x6B79      	CLRF        save_old_data_i_L0, 1
L_save_old_data84:
0x13C6	0x0E0F      	MOVLW       15
0x13C8	0x5D79      	SUBWF       save_old_data_i_L0, 0, 1
0x13CA	0xB0D8      	BTFSC       STATUS, 0 
0x13CC	0xD082      	BRA         L_save_old_data85
;space.c,377 :: 		old_debris[i].x = debris[i].x;
0x13CE	0x0E06      	MOVLW       6
0x13D0	0x6E00      	MOVWF       R0 
0x13D2	0x0E00      	MOVLW       0
0x13D4	0x6E01      	MOVWF       R1 
0x13D6	0xF004C179  	MOVFF       save_old_data_i_L0, R4
0x13DA	0x0E00      	MOVLW       0
0x13DC	0x6E05      	MOVWF       R5 
0x13DE	0xF000ECFE  	CALL        _Mul_16X16_U, 0
0x13E2	0x0EA6      	MOVLW       _old_debris
0x13E4	0x2400      	ADDWF       R0, 0 
0x13E6	0x6EE1      	MOVWF       FSR1L 
0x13E8	0x0E00      	MOVLW       hi_addr(_old_debris)
0x13EA	0x2001      	ADDWFC      R1, 0 
0x13EC	0x6EE2      	MOVWF       FSR1H 
0x13EE	0x0E02      	MOVLW       _debris
0x13F0	0x2400      	ADDWF       R0, 0 
0x13F2	0x6EE9      	MOVWF       FSR0L 
0x13F4	0x0E01      	MOVLW       hi_addr(_debris)
0x13F6	0x2001      	ADDWFC      R1, 0 
0x13F8	0x6EEA      	MOVWF       FSR0H 
0x13FA	0xF000CFEE  	MOVFF       POSTINC0, R0
0x13FE	0xFFE6C000  	MOVFF       R0, POSTINC1
;space.c,378 :: 		old_debris[i].y = debris[i].y;
0x1402	0x0E06      	MOVLW       6
0x1404	0x6E00      	MOVWF       R0 
0x1406	0x0E00      	MOVLW       0
0x1408	0x6E01      	MOVWF       R1 
0x140A	0xF004C179  	MOVFF       save_old_data_i_L0, R4
0x140E	0x0E00      	MOVLW       0
0x1410	0x6E05      	MOVWF       R5 
0x1412	0xF000ECFE  	CALL        _Mul_16X16_U, 0
0x1416	0x0EA6      	MOVLW       _old_debris
0x1418	0x2400      	ADDWF       R0, 0 
0x141A	0x6E02      	MOVWF       R2 
0x141C	0x0E00      	MOVLW       hi_addr(_old_debris)
0x141E	0x2001      	ADDWFC      R1, 0 
0x1420	0x6E03      	MOVWF       R3 
0x1422	0x0E01      	MOVLW       1
0x1424	0x2402      	ADDWF       R2, 0 
0x1426	0x6EE1      	MOVWF       FSR1L 
0x1428	0x0E00      	MOVLW       0
0x142A	0x2003      	ADDWFC      R3, 0 
0x142C	0x6EE2      	MOVWF       FSR1H 
0x142E	0x0E02      	MOVLW       _debris
0x1430	0x2600      	ADDWF       R0, 1 
0x1432	0x0E01      	MOVLW       hi_addr(_debris)
0x1434	0x2201      	ADDWFC      R1, 1 
0x1436	0x0E01      	MOVLW       1
0x1438	0x2400      	ADDWF       R0, 0 
0x143A	0x6EE9      	MOVWF       FSR0L 
0x143C	0x0E00      	MOVLW       0
0x143E	0x2001      	ADDWFC      R1, 0 
0x1440	0x6EEA      	MOVWF       FSR0H 
0x1442	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;space.c,379 :: 		old_debris[i].dx = debris[i].dx;
0x1446	0x0E06      	MOVLW       6
0x1448	0x6E00      	MOVWF       R0 
0x144A	0x0E00      	MOVLW       0
0x144C	0x6E01      	MOVWF       R1 
0x144E	0xF004C179  	MOVFF       save_old_data_i_L0, R4
0x1452	0x0E00      	MOVLW       0
0x1454	0x6E05      	MOVWF       R5 
0x1456	0xF000ECFE  	CALL        _Mul_16X16_U, 0
0x145A	0x0EA6      	MOVLW       _old_debris
0x145C	0x2400      	ADDWF       R0, 0 
0x145E	0x6E02      	MOVWF       R2 
0x1460	0x0E00      	MOVLW       hi_addr(_old_debris)
0x1462	0x2001      	ADDWFC      R1, 0 
0x1464	0x6E03      	MOVWF       R3 
0x1466	0x0E02      	MOVLW       2
0x1468	0x2402      	ADDWF       R2, 0 
0x146A	0x6EE1      	MOVWF       FSR1L 
0x146C	0x0E00      	MOVLW       0
0x146E	0x2003      	ADDWFC      R3, 0 
0x1470	0x6EE2      	MOVWF       FSR1H 
0x1472	0x0E02      	MOVLW       _debris
0x1474	0x2600      	ADDWF       R0, 1 
0x1476	0x0E01      	MOVLW       hi_addr(_debris)
0x1478	0x2201      	ADDWFC      R1, 1 
0x147A	0x0E02      	MOVLW       2
0x147C	0x2400      	ADDWF       R0, 0 
0x147E	0x6EE9      	MOVWF       FSR0L 
0x1480	0x0E00      	MOVLW       0
0x1482	0x2001      	ADDWFC      R1, 0 
0x1484	0x6EEA      	MOVWF       FSR0H 
0x1486	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;space.c,380 :: 		old_debris[i].dir = debris[i].dir;
0x148A	0x0E06      	MOVLW       6
0x148C	0x6E00      	MOVWF       R0 
0x148E	0x0E00      	MOVLW       0
0x1490	0x6E01      	MOVWF       R1 
0x1492	0xF004C179  	MOVFF       save_old_data_i_L0, R4
0x1496	0x0E00      	MOVLW       0
0x1498	0x6E05      	MOVWF       R5 
0x149A	0xF000ECFE  	CALL        _Mul_16X16_U, 0
0x149E	0x0EA6      	MOVLW       _old_debris
0x14A0	0x2400      	ADDWF       R0, 0 
0x14A2	0x6E02      	MOVWF       R2 
0x14A4	0x0E00      	MOVLW       hi_addr(_old_debris)
0x14A6	0x2001      	ADDWFC      R1, 0 
0x14A8	0x6E03      	MOVWF       R3 
0x14AA	0x0E03      	MOVLW       3
0x14AC	0x2402      	ADDWF       R2, 0 
0x14AE	0x6EE1      	MOVWF       FSR1L 
0x14B0	0x0E00      	MOVLW       0
0x14B2	0x2003      	ADDWFC      R3, 0 
0x14B4	0x6EE2      	MOVWF       FSR1H 
0x14B6	0x0E02      	MOVLW       _debris
0x14B8	0x2600      	ADDWF       R0, 1 
0x14BA	0x0E01      	MOVLW       hi_addr(_debris)
0x14BC	0x2201      	ADDWFC      R1, 1 
0x14BE	0x0E03      	MOVLW       3
0x14C0	0x2400      	ADDWF       R0, 0 
0x14C2	0x6EE9      	MOVWF       FSR0L 
0x14C4	0x0E00      	MOVLW       0
0x14C6	0x2001      	ADDWFC      R1, 0 
0x14C8	0x6EEA      	MOVWF       FSR0H 
0x14CA	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;space.c,376 :: 		for(i = 0; i < 15; i++){
0x14CE	0x2B79      	INCF        save_old_data_i_L0, 1, 1
;space.c,381 :: 		}
0x14D0	0xD77A      	BRA         L_save_old_data84
L_save_old_data85:
;space.c,382 :: 		}
L_end_save_old_data:
0x14D2	0x0012      	RETURN      0
; end of _save_old_data
_output_character:
;space.c,348 :: 		void output_character(char charValue){
;space.c,349 :: 		while (UART1_Tx_Idle()!= 1);
L_output_character78:
0x14D4	0xF002EC35  	CALL        _UART1_Tx_Idle, 0
0x14D8	0x5000      	MOVF        R0, 0 
0x14DA	0x0A01      	XORLW       1
0x14DC	0xE001      	BZ          L_output_character79
0x14DE	0xD7FA      	BRA         L_output_character78
L_output_character79:
;space.c,350 :: 		UART1_Write(charValue);
0x14E0	0xF188C179  	MOVFF       FARG_output_character_charValue, FARG_UART1_Write_data_
0x14E4	0xF002EC23  	CALL        _UART1_Write, 0
;space.c,351 :: 		}
L_end_output_character:
0x14E8	0x0012      	RETURN      0
; end of _output_character
_game_over_mult:
;space.c,257 :: 		void game_over_mult(){
;space.c,258 :: 		if(score[0] > score[1]){
0x14EA	0x504A      	MOVF        _score, 0 
0x14EC	0x5C4B      	SUBWF       _score+1, 0 
0x14EE	0xE22D      	BC          L_game_over_mult61
;space.c,259 :: 		Glcd_Write_Text("PLAYER 1 WINS",35,0,1);
0x14F0	0x0E16      	MOVLW       ?lstr4_space
0x14F2	0x0101      	MOVLB       1
0x14F4	0x6F81      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x14F6	0x0E00      	MOVLW       hi_addr(?lstr4_space)
0x14F8	0x6F82      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x14FA	0x0E23      	MOVLW       35
0x14FC	0x6F83      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x14FE	0x6B84      	CLRF        FARG_Glcd_Write_Text_page_num, 1
0x1500	0x0E01      	MOVLW       1
0x1502	0x6F85      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x1504	0xF002ECAA  	CALL        _Glcd_Write_Text, 0
;space.c,260 :: 		delay_ms(5000);
0x1508	0x0E33      	MOVLW       51
0x150A	0x6E0B      	MOVWF       R11, 0
0x150C	0x0EBB      	MOVLW       187
0x150E	0x6E0C      	MOVWF       R12, 0
0x1510	0x0EDF      	MOVLW       223
0x1512	0x6E0D      	MOVWF       R13, 0
L_game_over_mult62:
0x1514	0x2E0D      	DECFSZ      R13, 1, 0
0x1516	0xD7FE      	BRA         L_game_over_mult62
0x1518	0x2E0C      	DECFSZ      R12, 1, 0
0x151A	0xD7FC      	BRA         L_game_over_mult62
0x151C	0x2E0B      	DECFSZ      R11, 1, 0
0x151E	0xD7FA      	BRA         L_game_over_mult62
0x1520	0x0000      	NOP
0x1522	0x0000      	NOP
;space.c,261 :: 		while(1){
L_game_over_mult63:
;space.c,262 :: 		if(Button(&PORTC,1,1,0)){ //Quiero volver a la portada como si acabara de encender la consola
0x1524	0x0E82      	MOVLW       PORTC
0x1526	0x6F81      	MOVWF       FARG_Button_port, 1
0x1528	0x0E0F      	MOVLW       hi_addr(PORTC)
0x152A	0x6F82      	MOVWF       FARG_Button_port+1, 1
0x152C	0x0E01      	MOVLW       1
0x152E	0x6F83      	MOVWF       FARG_Button_pin, 1
0x1530	0x0E01      	MOVLW       1
0x1532	0x6F84      	MOVWF       FARG_Button_time_ms, 1
0x1534	0x6B85      	CLRF        FARG_Button_active_state, 1
0x1536	0xF002EC48  	CALL        _Button, 0
0x153A	0x5200      	MOVF        R0, 1 
0x153C	0xE004      	BZ          L_game_over_mult65
;space.c,263 :: 		Glcd_Fill(0x00);
0x153E	0x6B81      	CLRF        FARG_Glcd_Fill_pattern, 1
0x1540	0xF002EC80  	CALL        _Glcd_Fill, 0
;space.c,264 :: 		break;
0x1544	0xD001      	BRA         L_game_over_mult64
;space.c,265 :: 		}
L_game_over_mult65:
;space.c,266 :: 		}
0x1546	0xD7EE      	BRA         L_game_over_mult63
L_game_over_mult64:
;space.c,267 :: 		}
0x1548	0xD05F      	BRA         L_game_over_mult66
L_game_over_mult61:
;space.c,268 :: 		else if(score[0] < score[1]){
0x154A	0x504B      	MOVF        _score+1, 0 
0x154C	0x5C4A      	SUBWF       _score, 0 
0x154E	0xE22D      	BC          L_game_over_mult67
;space.c,269 :: 		Glcd_Write_Text("PLAYER 2 WINS",35,0,1);
0x1550	0x0101      	MOVLB       1
0x1552	0x0E26      	MOVLW       ?lstr5_space
0x1554	0x6F81      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x1556	0x0E00      	MOVLW       hi_addr(?lstr5_space)
0x1558	0x6F82      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x155A	0x0E23      	MOVLW       35
0x155C	0x6F83      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x155E	0x6B84      	CLRF        FARG_Glcd_Write_Text_page_num, 1
0x1560	0x0E01      	MOVLW       1
0x1562	0x6F85      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x1564	0xF002ECAA  	CALL        _Glcd_Write_Text, 0
;space.c,270 :: 		delay_ms(5000);
0x1568	0x0E33      	MOVLW       51
0x156A	0x6E0B      	MOVWF       R11, 0
0x156C	0x0EBB      	MOVLW       187
0x156E	0x6E0C      	MOVWF       R12, 0
0x1570	0x0EDF      	MOVLW       223
0x1572	0x6E0D      	MOVWF       R13, 0
L_game_over_mult68:
0x1574	0x2E0D      	DECFSZ      R13, 1, 0
0x1576	0xD7FE      	BRA         L_game_over_mult68
0x1578	0x2E0C      	DECFSZ      R12, 1, 0
0x157A	0xD7FC      	BRA         L_game_over_mult68
0x157C	0x2E0B      	DECFSZ      R11, 1, 0
0x157E	0xD7FA      	BRA         L_game_over_mult68
0x1580	0x0000      	NOP
0x1582	0x0000      	NOP
;space.c,272 :: 		while(1){
L_game_over_mult69:
;space.c,273 :: 		if(Button(&PORTC,1,1,0)){ //Quiero volver a la portada como si acabara de encender la consola
0x1584	0x0E82      	MOVLW       PORTC
0x1586	0x6F81      	MOVWF       FARG_Button_port, 1
0x1588	0x0E0F      	MOVLW       hi_addr(PORTC)
0x158A	0x6F82      	MOVWF       FARG_Button_port+1, 1
0x158C	0x0E01      	MOVLW       1
0x158E	0x6F83      	MOVWF       FARG_Button_pin, 1
0x1590	0x0E01      	MOVLW       1
0x1592	0x6F84      	MOVWF       FARG_Button_time_ms, 1
0x1594	0x6B85      	CLRF        FARG_Button_active_state, 1
0x1596	0xF002EC48  	CALL        _Button, 0
0x159A	0x5200      	MOVF        R0, 1 
0x159C	0xE004      	BZ          L_game_over_mult71
;space.c,274 :: 		Glcd_Fill(0x00);
0x159E	0x6B81      	CLRF        FARG_Glcd_Fill_pattern, 1
0x15A0	0xF002EC80  	CALL        _Glcd_Fill, 0
;space.c,275 :: 		break;
0x15A4	0xD001      	BRA         L_game_over_mult70
;space.c,276 :: 		}
L_game_over_mult71:
;space.c,277 :: 		}
0x15A6	0xD7EE      	BRA         L_game_over_mult69
L_game_over_mult70:
;space.c,278 :: 		}
0x15A8	0xD02F      	BRA         L_game_over_mult72
L_game_over_mult67:
;space.c,279 :: 		else if(score[0] == score[1]){
0x15AA	0x504A      	MOVF        _score, 0 
0x15AC	0x184B      	XORWF       _score+1, 0 
0x15AE	0xE12C      	BNZ         L_game_over_mult73
;space.c,280 :: 		Glcd_Write_Text("IT\'S A TIE",35,0,1);
0x15B0	0x0101      	MOVLB       1
0x15B2	0x0E35      	MOVLW       ?lstr6_space
0x15B4	0x6F81      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x15B6	0x0E00      	MOVLW       hi_addr(?lstr6_space)
0x15B8	0x6F82      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x15BA	0x0E23      	MOVLW       35
0x15BC	0x6F83      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x15BE	0x6B84      	CLRF        FARG_Glcd_Write_Text_page_num, 1
0x15C0	0x0E01      	MOVLW       1
0x15C2	0x6F85      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x15C4	0xF002ECAA  	CALL        _Glcd_Write_Text, 0
;space.c,281 :: 		delay_ms(5000);
0x15C8	0x0E33      	MOVLW       51
0x15CA	0x6E0B      	MOVWF       R11, 0
0x15CC	0x0EBB      	MOVLW       187
0x15CE	0x6E0C      	MOVWF       R12, 0
0x15D0	0x0EDF      	MOVLW       223
0x15D2	0x6E0D      	MOVWF       R13, 0
L_game_over_mult74:
0x15D4	0x2E0D      	DECFSZ      R13, 1, 0
0x15D6	0xD7FE      	BRA         L_game_over_mult74
0x15D8	0x2E0C      	DECFSZ      R12, 1, 0
0x15DA	0xD7FC      	BRA         L_game_over_mult74
0x15DC	0x2E0B      	DECFSZ      R11, 1, 0
0x15DE	0xD7FA      	BRA         L_game_over_mult74
0x15E0	0x0000      	NOP
0x15E2	0x0000      	NOP
;space.c,283 :: 		while(1){
L_game_over_mult75:
;space.c,284 :: 		if(Button(&PORTC,1,1,0)){ //Quiero volver a la portada como si acabara de encender la consola
0x15E4	0x0E82      	MOVLW       PORTC
0x15E6	0x6F81      	MOVWF       FARG_Button_port, 1
0x15E8	0x0E0F      	MOVLW       hi_addr(PORTC)
0x15EA	0x6F82      	MOVWF       FARG_Button_port+1, 1
0x15EC	0x0E01      	MOVLW       1
0x15EE	0x6F83      	MOVWF       FARG_Button_pin, 1
0x15F0	0x0E01      	MOVLW       1
0x15F2	0x6F84      	MOVWF       FARG_Button_time_ms, 1
0x15F4	0x6B85      	CLRF        FARG_Button_active_state, 1
0x15F6	0xF002EC48  	CALL        _Button, 0
0x15FA	0x5200      	MOVF        R0, 1 
0x15FC	0xE004      	BZ          L_game_over_mult77
;space.c,285 :: 		Glcd_Fill(0x00);
0x15FE	0x6B81      	CLRF        FARG_Glcd_Fill_pattern, 1
0x1600	0xF002EC80  	CALL        _Glcd_Fill, 0
;space.c,286 :: 		break;
0x1604	0xD001      	BRA         L_game_over_mult76
;space.c,287 :: 		}
L_game_over_mult77:
;space.c,288 :: 		}
0x1606	0xD7EE      	BRA         L_game_over_mult75
L_game_over_mult76:
;space.c,289 :: 		}
L_game_over_mult73:
L_game_over_mult72:
L_game_over_mult66:
;space.c,290 :: 		}
L_end_game_over_mult:
0x1608	0x0012      	RETURN      0
; end of _game_over_mult
_main:
0x160A	0xF00FEC17  	CALL        7726, 0
;space.c,438 :: 		void main(){
;space.c,440 :: 		unsigned short Master = 0;
0x160E	0x0101      	MOVLB       1
0x1610	0x6B75      	CLRF        main_Master_L0, 1
0x1612	0x0E30      	MOVLW       48
0x1614	0x6F76      	MOVWF       main_Master_slave_L0, 1
0x1616	0x6B77      	CLRF        main_move_other_L0, 1
0x1618	0x0E39      	MOVLW       57
0x161A	0x6F78      	MOVWF       main_win_L0, 1
;space.c,449 :: 		PORTC = 0;      //Establecemos las entradas en 0 para evitar conflictos
0x161C	0x6A82      	CLRF        PORTC 
;space.c,450 :: 		TRISC.F0 = 1;   //Entrada para el eje y
0x161E	0x8094      	BSF         TRISC, 0 
;space.c,451 :: 		TRISC.F1 = 1;   // Entrada para el boton del joystick
0x1620	0x8294      	BSF         TRISC, 1 
;space.c,453 :: 		Glcd_Init();
0x1622	0xF005EC20  	CALL        _Glcd_Init, 0
;space.c,454 :: 		Glcd_Fill(0x00);
0x1626	0x6B81      	CLRF        FARG_Glcd_Fill_pattern, 1
0x1628	0xF002EC80  	CALL        _Glcd_Fill, 0
;space.c,456 :: 		UART1_Init(9600);
0x162C	0x86B8      	BSF         BAUDCON, 3, 0
0x162E	0x6AB0      	CLRF        SPBRGH 
0x1630	0x0ECF      	MOVLW       207
0x1632	0x6EAF      	MOVWF       SPBRG 
0x1634	0x84AC      	BSF         TXSTA, 2, 0
0x1636	0xF004ECF4  	CALL        _UART1_Init, 0
;space.c,457 :: 		Delay_ms(1000);
0x163A	0x0E0B      	MOVLW       11
0x163C	0x6E0B      	MOVWF       R11, 0
0x163E	0x0E26      	MOVLW       38
0x1640	0x6E0C      	MOVWF       R12, 0
0x1642	0x0E5D      	MOVLW       93
0x1644	0x6E0D      	MOVWF       R13, 0
L_main87:
0x1646	0x2E0D      	DECFSZ      R13, 1, 0
0x1648	0xD7FE      	BRA         L_main87
0x164A	0x2E0C      	DECFSZ      R12, 1, 0
0x164C	0xD7FC      	BRA         L_main87
0x164E	0x2E0B      	DECFSZ      R11, 1, 0
0x1650	0xD7FA      	BRA         L_main87
0x1652	0x0000      	NOP
0x1654	0x0000      	NOP
;space.c,468 :: 		init();
0x1656	0xF005ECD2  	CALL        _init, 0
;space.c,470 :: 		while(1){
L_main88:
;space.c,471 :: 		switch(flag){
0x165A	0xD2A2      	BRA         L_main90
;space.c,472 :: 		case 0:
L_main92:
0x165C	0x0101      	MOVLB       1
;space.c,473 :: 		Glcd_Fill(0x00);
0x165E	0x6B81      	CLRF        FARG_Glcd_Fill_pattern, 1
0x1660	0xF002EC80  	CALL        _Glcd_Fill, 0
;space.c,474 :: 		while(1){
L_main93:
0x1664	0x0101      	MOVLB       1
;space.c,475 :: 		y = ADC_Read(0);
0x1666	0x6B79      	CLRF        FARG_ADC_Read_channel, 1
0x1668	0xF005ECB2  	CALL        _ADC_Read, 0
0x166C	0xF060C000  	MOVFF       R0, _y
;space.c,476 :: 		if(y <= 5){
0x1670	0x5000      	MOVF        R0, 0 
0x1672	0x0805      	SUBLW       5
0x1674	0xE33C      	BNC         L_main95
;space.c,477 :: 		Glcd_Write_Text("one player",15,0,1);
0x1676	0x0E63      	MOVLW       ?lstr7_space
0x1678	0x0101      	MOVLB       1
0x167A	0x6F81      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x167C	0x0E00      	MOVLW       hi_addr(?lstr7_space)
0x167E	0x6F82      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x1680	0x0E0F      	MOVLW       15
0x1682	0x6F83      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x1684	0x6B84      	CLRF        FARG_Glcd_Write_Text_page_num, 1
0x1686	0x0E01      	MOVLW       1
0x1688	0x6F85      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x168A	0xF002ECAA  	CALL        _Glcd_Write_Text, 0
;space.c,478 :: 		delay_ms(1000);
0x168E	0x0E0B      	MOVLW       11
0x1690	0x6E0B      	MOVWF       R11, 0
0x1692	0x0E26      	MOVLW       38
0x1694	0x6E0C      	MOVWF       R12, 0
0x1696	0x0E5D      	MOVLW       93
0x1698	0x6E0D      	MOVWF       R13, 0
L_main96:
0x169A	0x2E0D      	DECFSZ      R13, 1, 0
0x169C	0xD7FE      	BRA         L_main96
0x169E	0x2E0C      	DECFSZ      R12, 1, 0
0x16A0	0xD7FC      	BRA         L_main96
0x16A2	0x2E0B      	DECFSZ      R11, 1, 0
0x16A4	0xD7FA      	BRA         L_main96
0x16A6	0x0000      	NOP
0x16A8	0x0000      	NOP
;space.c,479 :: 		while(1){
L_main97:
0x16AA	0x0101      	MOVLB       1
;space.c,480 :: 		y = ADC_Read(0);
0x16AC	0x6B79      	CLRF        FARG_ADC_Read_channel, 1
0x16AE	0xF005ECB2  	CALL        _ADC_Read, 0
0x16B2	0xF060C000  	MOVFF       R0, _y
;space.c,481 :: 		if(Button(&PORTC,1,1,0)){
0x16B6	0x0E82      	MOVLW       PORTC
0x16B8	0x0101      	MOVLB       1
0x16BA	0x6F81      	MOVWF       FARG_Button_port, 1
0x16BC	0x0E0F      	MOVLW       hi_addr(PORTC)
0x16BE	0x6F82      	MOVWF       FARG_Button_port+1, 1
0x16C0	0x0E01      	MOVLW       1
0x16C2	0x6F83      	MOVWF       FARG_Button_pin, 1
0x16C4	0x0E01      	MOVLW       1
0x16C6	0x6F84      	MOVWF       FARG_Button_time_ms, 1
0x16C8	0x6B85      	CLRF        FARG_Button_active_state, 1
0x16CA	0xF002EC48  	CALL        _Button, 0
0x16CE	0x5200      	MOVF        R0, 1 
0x16D0	0xE003      	BZ          L_main99
;space.c,482 :: 		flag = 1;
0x16D2	0x0E01      	MOVLW       1
0x16D4	0x6E34      	MOVWF       _flag 
;space.c,483 :: 		break;
0x16D6	0xD006      	BRA         L_main98
;space.c,484 :: 		}
L_main99:
;space.c,485 :: 		else if(y >= 200){
0x16D8	0x0EC8      	MOVLW       200
0x16DA	0x0100      	MOVLB       0
0x16DC	0x5D60      	SUBWF       _y, 0, 1
0x16DE	0xE301      	BNC         L_main101
;space.c,486 :: 		break;
0x16E0	0xD001      	BRA         L_main98
;space.c,487 :: 		}
L_main101:
;space.c,488 :: 		}Glcd_Fill(0x00);
0x16E2	0xD7E3      	BRA         L_main97
L_main98:
0x16E4	0x0101      	MOVLB       1
0x16E6	0x6B81      	CLRF        FARG_Glcd_Fill_pattern, 1
0x16E8	0xF002EC80  	CALL        _Glcd_Fill, 0
;space.c,489 :: 		}
0x16EC	0xD04F      	BRA         L_main102
L_main95:
;space.c,490 :: 		else if(y >= 250){
0x16EE	0x0EFA      	MOVLW       250
0x16F0	0x0100      	MOVLB       0
0x16F2	0x5D60      	SUBWF       _y, 0, 1
0x16F4	0xE343      	BNC         L_main103
;space.c,491 :: 		Glcd_Write_Text("multiplayer",15,0,1);
0x16F6	0x0E6E      	MOVLW       ?lstr8_space
0x16F8	0x0101      	MOVLB       1
0x16FA	0x6F81      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x16FC	0x0E00      	MOVLW       hi_addr(?lstr8_space)
0x16FE	0x6F82      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x1700	0x0E0F      	MOVLW       15
0x1702	0x6F83      	MOVWF       FARG_Glcd_Write_Text_x_pos, 1
0x1704	0x6B84      	CLRF        FARG_Glcd_Write_Text_page_num, 1
0x1706	0x0E01      	MOVLW       1
0x1708	0x6F85      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x170A	0xF002ECAA  	CALL        _Glcd_Write_Text, 0
;space.c,492 :: 		delay_ms(1000);
0x170E	0x0E0B      	MOVLW       11
0x1710	0x6E0B      	MOVWF       R11, 0
0x1712	0x0E26      	MOVLW       38
0x1714	0x6E0C      	MOVWF       R12, 0
0x1716	0x0E5D      	MOVLW       93
0x1718	0x6E0D      	MOVWF       R13, 0
L_main104:
0x171A	0x2E0D      	DECFSZ      R13, 1, 0
0x171C	0xD7FE      	BRA         L_main104
0x171E	0x2E0C      	DECFSZ      R12, 1, 0
0x1720	0xD7FC      	BRA         L_main104
0x1722	0x2E0B      	DECFSZ      R11, 1, 0
0x1724	0xD7FA      	BRA         L_main104
0x1726	0x0000      	NOP
0x1728	0x0000      	NOP
;space.c,493 :: 		while(1){
L_main105:
0x172A	0x0101      	MOVLB       1
;space.c,494 :: 		y = ADC_Read(0);
0x172C	0x6B79      	CLRF        FARG_ADC_Read_channel, 1
0x172E	0xF005ECB2  	CALL        _ADC_Read, 0
0x1732	0xF060C000  	MOVFF       R0, _y
;space.c,495 :: 		if(Button(&PORTC,1,1,0)){
0x1736	0x0E82      	MOVLW       PORTC
0x1738	0x0101      	MOVLB       1
0x173A	0x6F81      	MOVWF       FARG_Button_port, 1
0x173C	0x0E0F      	MOVLW       hi_addr(PORTC)
0x173E	0x6F82      	MOVWF       FARG_Button_port+1, 1
0x1740	0x0E01      	MOVLW       1
0x1742	0x6F83      	MOVWF       FARG_Button_pin, 1
0x1744	0x0E01      	MOVLW       1
0x1746	0x6F84      	MOVWF       FARG_Button_time_ms, 1
0x1748	0x6B85      	CLRF        FARG_Button_active_state, 1
0x174A	0xF002EC48  	CALL        _Button, 0
0x174E	0x5200      	MOVF        R0, 1 
0x1750	0xE006      	BZ          L_main107
;space.c,496 :: 		flag = 2;
0x1752	0x0E02      	MOVLW       2
0x1754	0x6E34      	MOVWF       _flag 
;space.c,497 :: 		Glcd_Fill(0x00);
0x1756	0x6B81      	CLRF        FARG_Glcd_Fill_pattern, 1
0x1758	0xF002EC80  	CALL        _Glcd_Fill, 0
;space.c,498 :: 		break;
0x175C	0xD00A      	BRA         L_main106
;space.c,499 :: 		}
L_main107:
;space.c,500 :: 		else if(y <= 20){
0x175E	0x0100      	MOVLB       0
0x1760	0x5160      	MOVF        _y, 0, 1
0x1762	0x0814      	SUBLW       20
0x1764	0xE305      	BNC         L_main109
;space.c,501 :: 		Glcd_Fill(0x00);
0x1766	0x0101      	MOVLB       1
0x1768	0x6B81      	CLRF        FARG_Glcd_Fill_pattern, 1
0x176A	0xF002EC80  	CALL        _Glcd_Fill, 0
;space.c,502 :: 		break;
0x176E	0xD001      	BRA         L_main106
;space.c,503 :: 		}
L_main109:
;space.c,504 :: 		}
0x1770	0xD7DC      	BRA         L_main105
L_main106:
0x1772	0x0101      	MOVLB       1
;space.c,505 :: 		Glcd_Fill(0x00);
0x1774	0x6B81      	CLRF        FARG_Glcd_Fill_pattern, 1
0x1776	0xF002EC80  	CALL        _Glcd_Fill, 0
;space.c,506 :: 		}
0x177A	0xD008      	BRA         L_main110
L_main103:
;space.c,507 :: 		else if(flag == 1 || flag == 2){
0x177C	0x5034      	MOVF        _flag, 0 
0x177E	0x0A01      	XORLW       1
0x1780	0xE004      	BZ          L__main167
0x1782	0x5034      	MOVF        _flag, 0 
0x1784	0x0A02      	XORLW       2
0x1786	0xE001      	BZ          L__main167
0x1788	0xD001      	BRA         L_main113
L__main167:
;space.c,508 :: 		break;
0x178A	0xD001      	BRA         L_main94
;space.c,509 :: 		}
L_main113:
L_main110:
L_main102:
;space.c,510 :: 		}
0x178C	0xD76B      	BRA         L_main93
L_main94:
0x178E	0x0101      	MOVLB       1
;space.c,511 :: 		Master = 0;
0x1790	0x6B75      	CLRF        main_Master_L0, 1
;space.c,512 :: 		break;
0x1792	0xD212      	BRA         L_main91
;space.c,514 :: 		case 1:
L_main114:
;space.c,515 :: 		delay_ms(100);
0x1794	0x0E02      	MOVLW       2
0x1796	0x6E0B      	MOVWF       R11, 0
0x1798	0x0E04      	MOVLW       4
0x179A	0x6E0C      	MOVWF       R12, 0
0x179C	0x0EBA      	MOVLW       186
0x179E	0x6E0D      	MOVWF       R13, 0
L_main115:
0x17A0	0x0101      	MOVLB       1
0x17A2	0x2E0D      	DECFSZ      R13, 1, 0
0x17A4	0xD7FD      	BRA         L_main115
0x17A6	0x2E0C      	DECFSZ      R12, 1, 0
0x17A8	0xD7FB      	BRA         L_main115
0x17AA	0x2E0B      	DECFSZ      R11, 1, 0
0x17AC	0xD7F9      	BRA         L_main115
0x17AE	0x0000      	NOP
;space.c,516 :: 		Glcd_Fill(0x00);
0x17B0	0x6B81      	CLRF        FARG_Glcd_Fill_pattern, 1
0x17B2	0xF002EC80  	CALL        _Glcd_Fill, 0
;space.c,517 :: 		init();
0x17B6	0xF005ECD2  	CALL        _init, 0
;space.c,518 :: 		gen_debris();
0x17BA	0xF005EC56  	CALL        _gen_debris, 0
;space.c,519 :: 		while(1){
L_main116:
0x17BE	0x0101      	MOVLB       1
;space.c,520 :: 		y = ADC_Read(0);
0x17C0	0x6B79      	CLRF        FARG_ADC_Read_channel, 1
0x17C2	0xF005ECB2  	CALL        _ADC_Read, 0
0x17C6	0xF060C000  	MOVFF       R0, _y
;space.c,522 :: 		if(y >= 250){//HACIA ABAJO
0x17CA	0x0EFA      	MOVLW       250
0x17CC	0x5C00      	SUBWF       R0, 0 
0x17CE	0xE319      	BNC         L_main118
;space.c,523 :: 		draw_player(ship[0].x, ship[0].y, 0);//erase_player(x,  y,direction) 1 arriba / 2 abajo
0x17D0	0xF188C0FE  	MOVFF       _ship, FARG_draw_player_x
0x17D4	0xF189C0FF  	MOVFF       _ship+1, FARG_draw_player_y
0x17D8	0x0101      	MOVLB       1
0x17DA	0x6B8A      	CLRF        FARG_draw_player_color, 1
0x17DC	0xF001ECAE  	CALL        _draw_player, 0
;space.c,524 :: 		move_player(0,2,1);//move_player(i, direction) 1 arriba / 2 abajo
0x17E0	0x6B81      	CLRF        FARG_move_player_i, 1
0x17E2	0x0E02      	MOVLW       2
0x17E4	0x6F82      	MOVWF       FARG_move_player_direction, 1
0x17E6	0x0E01      	MOVLW       1
0x17E8	0x6F83      	MOVWF       FARG_move_player_a, 1
0x17EA	0xF002ECDC  	CALL        _move_player, 0
;space.c,525 :: 		draw_player(ship[0].x, ship[0].y, 1);//draw_player(x, y, color)
0x17EE	0xF188C0FE  	MOVFF       _ship, FARG_draw_player_x
0x17F2	0xF189C0FF  	MOVFF       _ship+1, FARG_draw_player_y
0x17F6	0x0E01      	MOVLW       1
0x17F8	0x0101      	MOVLB       1
0x17FA	0x6F8A      	MOVWF       FARG_draw_player_color, 1
0x17FC	0xF001ECAE  	CALL        _draw_player, 0
;space.c,526 :: 		}
0x1800	0xD01C      	BRA         L_main119
L_main118:
;space.c,527 :: 		else if( y <= 20){//HACIA ARRIBA
0x1802	0x0100      	MOVLB       0
0x1804	0x5160      	MOVF        _y, 0, 1
0x1806	0x0814      	SUBLW       20
0x1808	0xE318      	BNC         L_main120
;space.c,528 :: 		draw_player(ship[0].x, ship[0].y, 0);//erase_player(x,  y,direction) 1 arriba / 2 abajo
0x180A	0xF188C0FE  	MOVFF       _ship, FARG_draw_player_x
0x180E	0xF189C0FF  	MOVFF       _ship+1, FARG_draw_player_y
0x1812	0x0101      	MOVLB       1
0x1814	0x6B8A      	CLRF        FARG_draw_player_color, 1
0x1816	0xF001ECAE  	CALL        _draw_player, 0
;space.c,529 :: 		move_player(0,1,1);//move_player(i, direction) 1 arriba / 2 abajo
0x181A	0x6B81      	CLRF        FARG_move_player_i, 1
0x181C	0x0E01      	MOVLW       1
0x181E	0x6F82      	MOVWF       FARG_move_player_direction, 1
0x1820	0x0E01      	MOVLW       1
0x1822	0x6F83      	MOVWF       FARG_move_player_a, 1
0x1824	0xF002ECDC  	CALL        _move_player, 0
;space.c,530 :: 		draw_player(ship[0].x, ship[0].y, 1);//draw_player(x, y, color)
0x1828	0xF188C0FE  	MOVFF       _ship, FARG_draw_player_x
0x182C	0xF189C0FF  	MOVFF       _ship+1, FARG_draw_player_y
0x1830	0x0E01      	MOVLW       1
0x1832	0x0101      	MOVLB       1
0x1834	0x6F8A      	MOVWF       FARG_draw_player_color, 1
0x1836	0xF001ECAE  	CALL        _draw_player, 0
;space.c,531 :: 		}
L_main120:
L_main119:
;space.c,533 :: 		move_ia();
0x183A	0xF004EC04  	CALL        _move_ia, 0
;space.c,534 :: 		move_debris(1);
0x183E	0x0E01      	MOVLW       1
0x1840	0x6F79      	MOVWF       FARG_move_debris_a, 1
0x1842	0xF006EC05  	CALL        _move_debris, 0
;space.c,535 :: 		draw_time();
0x1846	0xF005ECF1  	CALL        _draw_time, 0
;space.c,538 :: 		if(seconds > 15){
0x184A	0x0100      	MOVLB       0
0x184C	0x5161      	MOVF        _seconds, 0, 1
0x184E	0x080F      	SUBLW       15
0x1850	0xE202      	BC          L_main121
;space.c,539 :: 		seconds = 0;
0x1852	0x6B61      	CLRF        _seconds, 1
;space.c,540 :: 		minutes -=1;
0x1854	0x0640      	DECF        _minutes, 1 
;space.c,541 :: 		}
L_main121:
;space.c,542 :: 		if(minutes == 0){
0x1856	0x5040      	MOVF        _minutes, 0 
0x1858	0x0A00      	XORLW       0
0x185A	0xE103      	BNZ         L_main122
;space.c,543 :: 		game_over();
0x185C	0xDC9E      	RCALL       _game_over
;space.c,544 :: 		flag = 0;
0x185E	0x6A34      	CLRF        _flag 
;space.c,545 :: 		break;
0x1860	0xD006      	BRA         L_main117
;space.c,546 :: 		}
L_main122:
;space.c,547 :: 		seconds ++;
0x1862	0x0100      	MOVLB       0
0x1864	0x2B61      	INCF        _seconds, 1, 1
;space.c,548 :: 		debris_turn ++;
0x1866	0x2A54      	INCF        _debris_turn, 1 
;space.c,549 :: 		turn ++;
0x1868	0x2BA5      	INCF        _turn, 1, 1
;space.c,550 :: 		turn2 ++;
0x186A	0x2B62      	INCF        _turn2, 1, 1
;space.c,551 :: 		}
0x186C	0xD7A8      	BRA         L_main116
L_main117:
;space.c,552 :: 		break;
0x186E	0xD1A4      	BRA         L_main91
;space.c,554 :: 		case 2:
L_main123:
;space.c,555 :: 		init();
0x1870	0xF005ECD2  	CALL        _init, 0
;space.c,556 :: 		delay_ms(100);
0x1874	0x0E02      	MOVLW       2
0x1876	0x6E0B      	MOVWF       R11, 0
0x1878	0x0E04      	MOVLW       4
0x187A	0x6E0C      	MOVWF       R12, 0
0x187C	0x0EBA      	MOVLW       186
0x187E	0x6E0D      	MOVWF       R13, 0
L_main124:
0x1880	0x2E0D      	DECFSZ      R13, 1, 0
0x1882	0xD7FE      	BRA         L_main124
0x1884	0x2E0C      	DECFSZ      R12, 1, 0
0x1886	0xD7FC      	BRA         L_main124
0x1888	0x2E0B      	DECFSZ      R11, 1, 0
0x188A	0xD7FA      	BRA         L_main124
0x188C	0x0000      	NOP
;space.c,557 :: 		if(UART1_Data_Ready()==0){//Espera a que se conecte la otra consola
0x188E	0xF002EC43  	CALL        _UART1_Data_Ready, 0
0x1892	0x5000      	MOVF        R0, 0 
0x1894	0x0A00      	XORLW       0
0x1896	0xE11B      	BNZ         L_main125
;space.c,558 :: 		while(1){        //Manda constantemente un 1, siempre y cuando no detecte la otra consola
L_main126:
0x1898	0x0101      	MOVLB       1
;space.c,559 :: 		Glcd_Write_Text("Waiting for other player",0,0,1);
0x189A	0x0E7A      	MOVLW       ?lstr9_space
0x189C	0x6F81      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x189E	0x0E00      	MOVLW       hi_addr(?lstr9_space)
0x18A0	0x6F82      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x18A2	0x6B83      	CLRF        FARG_Glcd_Write_Text_x_pos, 1
0x18A4	0x6B84      	CLRF        FARG_Glcd_Write_Text_page_num, 1
0x18A6	0x0E01      	MOVLW       1
0x18A8	0x6F85      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x18AA	0xF002ECAA  	CALL        _Glcd_Write_Text, 0
;space.c,560 :: 		UART1_Write('1');
0x18AE	0x0E31      	MOVLW       49
0x18B0	0x6F88      	MOVWF       FARG_UART1_Write_data_, 1
0x18B2	0xF002EC23  	CALL        _UART1_Write, 0
;space.c,561 :: 		if(UART1_Data_Ready() ==1){
0x18B6	0xF002EC43  	CALL        _UART1_Data_Ready, 0
0x18BA	0x5000      	MOVF        R0, 0 
0x18BC	0x0A01      	XORLW       1
0x18BE	0xE101      	BNZ         L_main128
;space.c,562 :: 		break;
0x18C0	0xD001      	BRA         L_main127
;space.c,563 :: 		}
L_main128:
;space.c,564 :: 		}
0x18C2	0xD7EA      	BRA         L_main126
L_main127:
;space.c,565 :: 		Glcd_Fill(0x00);
0x18C4	0x0101      	MOVLB       1
0x18C6	0x6B81      	CLRF        FARG_Glcd_Fill_pattern, 1
0x18C8	0xF002EC80  	CALL        _Glcd_Fill, 0
;space.c,566 :: 		}
0x18CC	0xD032      	BRA         L_main129
L_main125:
;space.c,568 :: 		Glcd_Write_Text("Press to start",0,0,1);//Una vez que se conecta,
0x18CE	0x0E94      	MOVLW       ?lstr10_space
0x18D0	0x6F81      	MOVWF       FARG_Glcd_Write_Text_text, 1
0x18D2	0x0E00      	MOVLW       hi_addr(?lstr10_space)
0x18D4	0x6F82      	MOVWF       FARG_Glcd_Write_Text_text+1, 1
0x18D6	0x6B83      	CLRF        FARG_Glcd_Write_Text_x_pos, 1
0x18D8	0x6B84      	CLRF        FARG_Glcd_Write_Text_page_num, 1
0x18DA	0x0E01      	MOVLW       1
0x18DC	0x6F85      	MOVWF       FARG_Glcd_Write_Text_color, 1
0x18DE	0xF002ECAA  	CALL        _Glcd_Write_Text, 0
;space.c,570 :: 		while(1){
L_main130:
;space.c,571 :: 		UART1_Write('1');
0x18E2	0x0E31      	MOVLW       49
0x18E4	0x6F88      	MOVWF       FARG_UART1_Write_data_, 1
0x18E6	0xF002EC23  	CALL        _UART1_Write, 0
;space.c,572 :: 		Master_slave = UART1_Read();//Asi el primero que presione, sera el maestro
0x18EA	0xF002EC3A  	CALL        _UART1_Read, 0
0x18EE	0xF176C000  	MOVFF       R0, main_Master_slave_L0
;space.c,573 :: 		if(Button(&PORTC,1,1,0)){ //Y el que no presiono se le manda la senal para que
0x18F2	0x0E82      	MOVLW       PORTC
0x18F4	0x0101      	MOVLB       1
0x18F6	0x6F81      	MOVWF       FARG_Button_port, 1
0x18F8	0x0E0F      	MOVLW       hi_addr(PORTC)
0x18FA	0x6F82      	MOVWF       FARG_Button_port+1, 1
0x18FC	0x0E01      	MOVLW       1
0x18FE	0x6F83      	MOVWF       FARG_Button_pin, 1
0x1900	0x0E01      	MOVLW       1
0x1902	0x6F84      	MOVWF       FARG_Button_time_ms, 1
0x1904	0x6B85      	CLRF        FARG_Button_active_state, 1
0x1906	0xF002EC48  	CALL        _Button, 0
0x190A	0x5200      	MOVF        R0, 1 
0x190C	0xE008      	BZ          L_main132
;space.c,574 :: 		UART1_Write('3');
0x190E	0x0E33      	MOVLW       51
0x1910	0x6F88      	MOVWF       FARG_UART1_Write_data_, 1
0x1912	0xF002EC23  	CALL        _UART1_Write, 0
;space.c,575 :: 		Master = 1;
0x1916	0x0E01      	MOVLW       1
0x1918	0x0101      	MOVLB       1
0x191A	0x6F75      	MOVWF       main_Master_L0, 1
;space.c,576 :: 		break;
0x191C	0xD007      	BRA         L_main131
;space.c,577 :: 		}
L_main132:
;space.c,578 :: 		else if(Master_slave == '3'){
0x191E	0x5176      	MOVF        main_Master_slave_L0, 0, 1
0x1920	0x0A33      	XORLW       51
0x1922	0xE103      	BNZ         L_main134
;space.c,579 :: 		Master = 2;
0x1924	0x0E02      	MOVLW       2
0x1926	0x6F75      	MOVWF       main_Master_L0, 1
;space.c,580 :: 		break;
0x1928	0xD001      	BRA         L_main131
;space.c,581 :: 		}
L_main134:
;space.c,582 :: 		}
0x192A	0xD7DB      	BRA         L_main130
L_main131:
;space.c,584 :: 		Glcd_Fill(0x00);
0x192C	0x6B81      	CLRF        FARG_Glcd_Fill_pattern, 1
0x192E	0xF002EC80  	CALL        _Glcd_Fill, 0
;space.c,585 :: 		}
L_main129:
;space.c,586 :: 		delay_ms(1000);
0x1932	0x0E0B      	MOVLW       11
0x1934	0x6E0B      	MOVWF       R11, 0
0x1936	0x0E26      	MOVLW       38
0x1938	0x6E0C      	MOVWF       R12, 0
0x193A	0x0E5D      	MOVLW       93
0x193C	0x6E0D      	MOVWF       R13, 0
L_main135:
0x193E	0x2E0D      	DECFSZ      R13, 1, 0
0x1940	0xD7FE      	BRA         L_main135
0x1942	0x2E0C      	DECFSZ      R12, 1, 0
0x1944	0xD7FC      	BRA         L_main135
0x1946	0x2E0B      	DECFSZ      R11, 1, 0
0x1948	0xD7FA      	BRA         L_main135
0x194A	0x0000      	NOP
0x194C	0x0000      	NOP
;space.c,588 :: 		if(Master == 1){
0x194E	0x5175      	MOVF        main_Master_L0, 0, 1
0x1950	0x0A01      	XORLW       1
0x1952	0xA4D8      	BTFSS       STATUS, 2 
0x1954	0xD0B8      	BRA         L_main136
;space.c,589 :: 		gen_debris();
0x1956	0xF005EC56  	CALL        _gen_debris, 0
;space.c,590 :: 		draw_player(ship[0].x, ship[0].y, 1);
0x195A	0xF188C0FE  	MOVFF       _ship, FARG_draw_player_x
0x195E	0xF189C0FF  	MOVFF       _ship+1, FARG_draw_player_y
0x1962	0x0E01      	MOVLW       1
0x1964	0x6F8A      	MOVWF       FARG_draw_player_color, 1
0x1966	0xF001ECAE  	CALL        _draw_player, 0
;space.c,591 :: 		draw_player(ship[1].x, ship[1].y, 1);
0x196A	0xF188C100  	MOVFF       _ship+2, FARG_draw_player_x
0x196E	0xF189C101  	MOVFF       _ship+3, FARG_draw_player_y
0x1972	0x0E01      	MOVLW       1
0x1974	0x6F8A      	MOVWF       FARG_draw_player_color, 1
0x1976	0xF001ECAE  	CALL        _draw_player, 0
;space.c,592 :: 		while(1){
L_main137:
0x197A	0x0101      	MOVLB       1
;space.c,593 :: 		y = ADC_Read(0);
0x197C	0x6B79      	CLRF        FARG_ADC_Read_channel, 1
0x197E	0xF005ECB2  	CALL        _ADC_Read, 0
0x1982	0xF060C000  	MOVFF       R0, _y
;space.c,595 :: 		if(y >= 250){
0x1986	0x0EFA      	MOVLW       250
0x1988	0x5C00      	SUBWF       R0, 0 
0x198A	0xE319      	BNC         L_main139
;space.c,596 :: 		draw_player(ship[0].x, ship[0].y, 0); //2 hacia abajo
0x198C	0xF188C0FE  	MOVFF       _ship, FARG_draw_player_x
0x1990	0xF189C0FF  	MOVFF       _ship+1, FARG_draw_player_y
0x1994	0x0101      	MOVLB       1
0x1996	0x6B8A      	CLRF        FARG_draw_player_color, 1
0x1998	0xF001ECAE  	CALL        _draw_player, 0
;space.c,597 :: 		move_player(0,2,1);
0x199C	0x6B81      	CLRF        FARG_move_player_i, 1
0x199E	0x0E02      	MOVLW       2
0x19A0	0x6F82      	MOVWF       FARG_move_player_direction, 1
0x19A2	0x0E01      	MOVLW       1
0x19A4	0x6F83      	MOVWF       FARG_move_player_a, 1
0x19A6	0xF002ECDC  	CALL        _move_player, 0
;space.c,598 :: 		draw_player(ship[0].x, ship[0].y,1);
0x19AA	0xF188C0FE  	MOVFF       _ship, FARG_draw_player_x
0x19AE	0xF189C0FF  	MOVFF       _ship+1, FARG_draw_player_y
0x19B2	0x0E01      	MOVLW       1
0x19B4	0x0101      	MOVLB       1
0x19B6	0x6F8A      	MOVWF       FARG_draw_player_color, 1
0x19B8	0xF001ECAE  	CALL        _draw_player, 0
;space.c,600 :: 		}
0x19BC	0xD01C      	BRA         L_main140
L_main139:
;space.c,601 :: 		else if(y <= 5){
0x19BE	0x0100      	MOVLB       0
0x19C0	0x5160      	MOVF        _y, 0, 1
0x19C2	0x0805      	SUBLW       5
0x19C4	0xE318      	BNC         L_main141
;space.c,602 :: 		draw_player(ship[0].x, ship[0].y, 0); //1 hacia arriba
0x19C6	0xF188C0FE  	MOVFF       _ship, FARG_draw_player_x
0x19CA	0xF189C0FF  	MOVFF       _ship+1, FARG_draw_player_y
0x19CE	0x0101      	MOVLB       1
0x19D0	0x6B8A      	CLRF        FARG_draw_player_color, 1
0x19D2	0xF001ECAE  	CALL        _draw_player, 0
;space.c,603 :: 		move_player(0,1,1);
0x19D6	0x6B81      	CLRF        FARG_move_player_i, 1
0x19D8	0x0E01      	MOVLW       1
0x19DA	0x6F82      	MOVWF       FARG_move_player_direction, 1
0x19DC	0x0E01      	MOVLW       1
0x19DE	0x6F83      	MOVWF       FARG_move_player_a, 1
0x19E0	0xF002ECDC  	CALL        _move_player, 0
;space.c,604 :: 		draw_player(ship[0].x, ship[0].y,1);
0x19E4	0xF188C0FE  	MOVFF       _ship, FARG_draw_player_x
0x19E8	0xF189C0FF  	MOVFF       _ship+1, FARG_draw_player_y
0x19EC	0x0E01      	MOVLW       1
0x19EE	0x0101      	MOVLB       1
0x19F0	0x6F8A      	MOVWF       FARG_draw_player_color, 1
0x19F2	0xF001ECAE  	CALL        _draw_player, 0
;space.c,605 :: 		}
L_main141:
L_main140:
;space.c,606 :: 		while(UART1_Data_Ready()==0);
L_main142:
0x19F6	0xF002EC43  	CALL        _UART1_Data_Ready, 0
0x19FA	0x5000      	MOVF        R0, 0 
0x19FC	0x0A00      	XORLW       0
0x19FE	0xE101      	BNZ         L_main143
0x1A00	0xD7FA      	BRA         L_main142
L_main143:
;space.c,608 :: 		if(UART1_Read() == '1'){
0x1A02	0xF002EC3A  	CALL        _UART1_Read, 0
0x1A06	0x5000      	MOVF        R0, 0 
0x1A08	0x0A31      	XORLW       49
0x1A0A	0xE11A      	BNZ         L_main144
;space.c,609 :: 		draw_player(ship[1].x, ship[1].y, 0); //2 hacia abajo
0x1A0C	0xF188C100  	MOVFF       _ship+2, FARG_draw_player_x
0x1A10	0xF189C101  	MOVFF       _ship+3, FARG_draw_player_y
0x1A14	0x0101      	MOVLB       1
0x1A16	0x6B8A      	CLRF        FARG_draw_player_color, 1
0x1A18	0xF001ECAE  	CALL        _draw_player, 0
;space.c,610 :: 		move_player(1,2,1);
0x1A1C	0x0E01      	MOVLW       1
0x1A1E	0x6F81      	MOVWF       FARG_move_player_i, 1
0x1A20	0x0E02      	MOVLW       2
0x1A22	0x6F82      	MOVWF       FARG_move_player_direction, 1
0x1A24	0x0E01      	MOVLW       1
0x1A26	0x6F83      	MOVWF       FARG_move_player_a, 1
0x1A28	0xF002ECDC  	CALL        _move_player, 0
;space.c,611 :: 		draw_player(ship[1].x, ship[1].y,1);
0x1A2C	0xF188C100  	MOVFF       _ship+2, FARG_draw_player_x
0x1A30	0xF189C101  	MOVFF       _ship+3, FARG_draw_player_y
0x1A34	0x0E01      	MOVLW       1
0x1A36	0x0101      	MOVLB       1
0x1A38	0x6F8A      	MOVWF       FARG_draw_player_color, 1
0x1A3A	0xF001ECAE  	CALL        _draw_player, 0
;space.c,612 :: 		}
0x1A3E	0xD01E      	BRA         L_main145
L_main144:
;space.c,613 :: 		else if(UART1_Read ()== '2'){
0x1A40	0xF002EC3A  	CALL        _UART1_Read, 0
0x1A44	0x5000      	MOVF        R0, 0 
0x1A46	0x0A32      	XORLW       50
0x1A48	0xE119      	BNZ         L_main146
;space.c,614 :: 		draw_player(ship[1].x, ship[1].y, 0); //2 hacia abajo
0x1A4A	0xF188C100  	MOVFF       _ship+2, FARG_draw_player_x
0x1A4E	0xF189C101  	MOVFF       _ship+3, FARG_draw_player_y
0x1A52	0x0101      	MOVLB       1
0x1A54	0x6B8A      	CLRF        FARG_draw_player_color, 1
0x1A56	0xF001ECAE  	CALL        _draw_player, 0
;space.c,615 :: 		move_player(1,1,1);
0x1A5A	0x0E01      	MOVLW       1
0x1A5C	0x6F81      	MOVWF       FARG_move_player_i, 1
0x1A5E	0x0E01      	MOVLW       1
0x1A60	0x6F82      	MOVWF       FARG_move_player_direction, 1
0x1A62	0x0E01      	MOVLW       1
0x1A64	0x6F83      	MOVWF       FARG_move_player_a, 1
0x1A66	0xF002ECDC  	CALL        _move_player, 0
;space.c,616 :: 		draw_player(ship[1].x, ship[1].y,1);
0x1A6A	0xF188C100  	MOVFF       _ship+2, FARG_draw_player_x
0x1A6E	0xF189C101  	MOVFF       _ship+3, FARG_draw_player_y
0x1A72	0x0E01      	MOVLW       1
0x1A74	0x0101      	MOVLB       1
0x1A76	0x6F8A      	MOVWF       FARG_draw_player_color, 1
0x1A78	0xF001ECAE  	CALL        _draw_player, 0
;space.c,617 :: 		}
L_main146:
L_main145:
0x1A7C	0x0101      	MOVLB       1
;space.c,619 :: 		move_debris(1); //para no usar retrasos
0x1A7E	0x0E01      	MOVLW       1
0x1A80	0x6F79      	MOVWF       FARG_move_debris_a, 1
0x1A82	0xF006EC05  	CALL        _move_debris, 0
;space.c,620 :: 		draw_time();
0x1A86	0xF005ECF1  	CALL        _draw_time, 0
;space.c,621 :: 		data_pack();
0x1A8A	0xDC24      	RCALL       _data_pack
;space.c,622 :: 		output_data(info);
0x1A8C	0x0E56      	MOVLW       _info
0x1A8E	0x6F79      	MOVWF       FARG_output_data_serial_dir, 1
0x1A90	0x0E01      	MOVLW       hi_addr(_info)
0x1A92	0x6F7A      	MOVWF       FARG_output_data_serial_dir+1, 1
0x1A94	0xDC12      	RCALL       _output_data
;space.c,627 :: 		while (UART1_Tx_Idle() != 1);
L_main147:
0x1A96	0xF002EC35  	CALL        _UART1_Tx_Idle, 0
0x1A9A	0x5000      	MOVF        R0, 0 
0x1A9C	0x0A01      	XORLW       1
0x1A9E	0xE001      	BZ          L_main148
0x1AA0	0xD7FA      	BRA         L_main147
L_main148:
;space.c,629 :: 		if(seconds > 5){
0x1AA2	0x0100      	MOVLB       0
0x1AA4	0x5161      	MOVF        _seconds, 0, 1
0x1AA6	0x0805      	SUBLW       5
0x1AA8	0xE202      	BC          L_main149
;space.c,630 :: 		seconds = 0;
0x1AAA	0x6B61      	CLRF        _seconds, 1
;space.c,631 :: 		minutes -=1;
0x1AAC	0x0640      	DECF        _minutes, 1 
;space.c,632 :: 		}
L_main149:
;space.c,633 :: 		if(minutes == 0){
0x1AAE	0x5040      	MOVF        _minutes, 0 
0x1AB0	0x0A00      	XORLW       0
0x1AB2	0xE106      	BNZ         L_main150
;space.c,634 :: 		output_character(win);
0x1AB4	0xF179C178  	MOVFF       main_win_L0, FARG_output_character_charValue
0x1AB8	0xDD0D      	RCALL       _output_character
;space.c,635 :: 		game_over_mult();
0x1ABA	0xDD17      	RCALL       _game_over_mult
;space.c,636 :: 		flag = 0;
0x1ABC	0x6A34      	CLRF        _flag 
;space.c,637 :: 		break;
0x1ABE	0xD003      	BRA         L_main138
;space.c,638 :: 		}
L_main150:
;space.c,639 :: 		seconds ++;
0x1AC0	0x0100      	MOVLB       0
0x1AC2	0x2B61      	INCF        _seconds, 1, 1
;space.c,643 :: 		}
0x1AC4	0xD75A      	BRA         L_main137
L_main138:
;space.c,644 :: 		}
L_main136:
;space.c,646 :: 		if(Master == 2){
0x1AC6	0x0101      	MOVLB       1
0x1AC8	0x5175      	MOVF        main_Master_L0, 0, 1
0x1ACA	0x0A02      	XORLW       2
0x1ACC	0xE168      	BNZ         L_main151
;space.c,647 :: 		gen_debris();
0x1ACE	0xF005EC56  	CALL        _gen_debris, 0
;space.c,648 :: 		while(1){
L_main152:
0x1AD2	0x0101      	MOVLB       1
;space.c,649 :: 		y = ADC_Read(0);
0x1AD4	0x6B79      	CLRF        FARG_ADC_Read_channel, 1
0x1AD6	0xF005ECB2  	CALL        _ADC_Read, 0
0x1ADA	0xF060C000  	MOVFF       R0, _y
;space.c,650 :: 		save_old_data();
0x1ADE	0xDC6C      	RCALL       _save_old_data
;space.c,652 :: 		if(y >= 250){        //Mover hacia abajo
0x1AE0	0x0EFA      	MOVLW       250
0x1AE2	0x0100      	MOVLB       0
0x1AE4	0x5D60      	SUBWF       _y, 0, 1
0x1AE6	0xE304      	BNC         L_main154
;space.c,653 :: 		move_other = '1';
0x1AE8	0x0E31      	MOVLW       49
0x1AEA	0x0101      	MOVLB       1
0x1AEC	0x6F77      	MOVWF       main_move_other_L0, 1
;space.c,654 :: 		}
0x1AEE	0xD00B      	BRA         L_main155
L_main154:
;space.c,655 :: 		else if(y <= 5){         //Mover hacia arriba
0x1AF0	0x0100      	MOVLB       0
0x1AF2	0x5160      	MOVF        _y, 0, 1
0x1AF4	0x0805      	SUBLW       5
0x1AF6	0xE304      	BNC         L_main156
;space.c,656 :: 		move_other = '2';
0x1AF8	0x0E32      	MOVLW       50
0x1AFA	0x0101      	MOVLB       1
0x1AFC	0x6F77      	MOVWF       main_move_other_L0, 1
;space.c,657 :: 		}
0x1AFE	0xD003      	BRA         L_main157
L_main156:
0x1B00	0x0101      	MOVLB       1
;space.c,658 :: 		else{move_other = '0';}
0x1B02	0x0E30      	MOVLW       48
0x1B04	0x6F77      	MOVWF       main_move_other_L0, 1
L_main157:
L_main155:
;space.c,660 :: 		if(UART1_Read() == '9'){
0x1B06	0xF002EC3A  	CALL        _UART1_Read, 0
0x1B0A	0x5000      	MOVF        R0, 0 
0x1B0C	0x0A39      	XORLW       57
0x1B0E	0xE103      	BNZ         L_main158
;space.c,661 :: 		game_over_mult();
0x1B10	0xDCEC      	RCALL       _game_over_mult
;space.c,662 :: 		flag = 0;
0x1B12	0x6A34      	CLRF        _flag 
;space.c,663 :: 		break;
0x1B14	0xD044      	BRA         L_main153
;space.c,664 :: 		}
L_main158:
;space.c,666 :: 		output_character(move_other);
0x1B16	0xF179C177  	MOVFF       main_move_other_L0, FARG_output_character_charValue
0x1B1A	0xDCDC      	RCALL       _output_character
;space.c,667 :: 		move_debris(1);
0x1B1C	0x0E01      	MOVLW       1
0x1B1E	0x0101      	MOVLB       1
0x1B20	0x6F79      	MOVWF       FARG_move_debris_a, 1
0x1B22	0xF006EC05  	CALL        _move_debris, 0
;space.c,669 :: 		while(UART1_Data_Ready()==0);
L_main159:
0x1B26	0xF002EC43  	CALL        _UART1_Data_Ready, 0
0x1B2A	0x5000      	MOVF        R0, 0 
0x1B2C	0x0A00      	XORLW       0
0x1B2E	0xE101      	BNZ         L_main160
0x1B30	0xD7FA      	BRA         L_main159
L_main160:
0x1B32	0x0101      	MOVLB       1
;space.c,670 :: 		UART1_Read_Text(info, "P", 255);
0x1B34	0x0E56      	MOVLW       _info
0x1B36	0x6F79      	MOVWF       FARG_UART1_Read_Text_Output, 1
0x1B38	0x0E01      	MOVLW       hi_addr(_info)
0x1B3A	0x6F7A      	MOVWF       FARG_UART1_Read_Text_Output+1, 1
0x1B3C	0x0EA3      	MOVLW       ?lstr11_space
0x1B3E	0x6F7B      	MOVWF       FARG_UART1_Read_Text_Delimiter, 1
0x1B40	0x0E00      	MOVLW       hi_addr(?lstr11_space)
0x1B42	0x6F7C      	MOVWF       FARG_UART1_Read_Text_Delimiter+1, 1
0x1B44	0x0EFF      	MOVLW       255
0x1B46	0x6F7D      	MOVWF       FARG_UART1_Read_Text_Attempts, 1
0x1B48	0xF009EC7B  	CALL        _UART1_Read_Text, 0
;space.c,672 :: 		draw_player(ship[0].x, ship[0].y, 0);
0x1B4C	0xF188C0FE  	MOVFF       _ship, FARG_draw_player_x
0x1B50	0xF189C0FF  	MOVFF       _ship+1, FARG_draw_player_y
0x1B54	0x6B8A      	CLRF        FARG_draw_player_color, 1
0x1B56	0xF001ECAE  	CALL        _draw_player, 0
;space.c,673 :: 		draw_player(ship[1].x, ship[1].y, 0);
0x1B5A	0xF188C100  	MOVFF       _ship+2, FARG_draw_player_x
0x1B5E	0xF189C101  	MOVFF       _ship+3, FARG_draw_player_y
0x1B62	0x6B8A      	CLRF        FARG_draw_player_color, 1
0x1B64	0xF001ECAE  	CALL        _draw_player, 0
;space.c,674 :: 		desdata_pack();
0x1B68	0xDC15      	RCALL       _desdata_pack
;space.c,675 :: 		draw_player(ship[0].x, ship[0].y, 1);
0x1B6A	0xF188C0FE  	MOVFF       _ship, FARG_draw_player_x
0x1B6E	0xF189C0FF  	MOVFF       _ship+1, FARG_draw_player_y
0x1B72	0x0E01      	MOVLW       1
0x1B74	0x6F8A      	MOVWF       FARG_draw_player_color, 1
0x1B76	0xF001ECAE  	CALL        _draw_player, 0
;space.c,676 :: 		draw_player(ship[1].x, ship[1].y, 1);
0x1B7A	0xF188C100  	MOVFF       _ship+2, FARG_draw_player_x
0x1B7E	0xF189C101  	MOVFF       _ship+3, FARG_draw_player_y
0x1B82	0x0E01      	MOVLW       1
0x1B84	0x6F8A      	MOVWF       FARG_draw_player_color, 1
0x1B86	0xF001ECAE  	CALL        _draw_player, 0
;space.c,681 :: 		draw_time();
0x1B8A	0xF005ECF1  	CALL        _draw_time, 0
;space.c,683 :: 		if(seconds > 5){
0x1B8E	0x0100      	MOVLB       0
0x1B90	0x5161      	MOVF        _seconds, 0, 1
0x1B92	0x0805      	SUBLW       5
0x1B94	0xE202      	BC          L_main161
;space.c,684 :: 		seconds = 0;
0x1B96	0x6B61      	CLRF        _seconds, 1
;space.c,685 :: 		minutes -=1;
0x1B98	0x0640      	DECF        _minutes, 1 
;space.c,686 :: 		}
L_main161:
;space.c,687 :: 		seconds ++;
0x1B9A	0x2B61      	INCF        _seconds, 1, 1
;space.c,688 :: 		}
0x1B9C	0xD79A      	BRA         L_main152
L_main153:
;space.c,689 :: 		}
L_main151:
;space.c,690 :: 		break;
0x1B9E	0xD00C      	BRA         L_main91
;space.c,691 :: 		}
L_main90:
0x1BA0	0x5034      	MOVF        _flag, 0 
0x1BA2	0x0A00      	XORLW       0
0x1BA4	0xB4D8      	BTFSC       STATUS, 2 
0x1BA6	0xD55A      	BRA         L_main92
0x1BA8	0x5034      	MOVF        _flag, 0 
0x1BAA	0x0A01      	XORLW       1
0x1BAC	0xB4D8      	BTFSC       STATUS, 2 
0x1BAE	0xD5F2      	BRA         L_main114
0x1BB0	0x5034      	MOVF        _flag, 0 
0x1BB2	0x0A02      	XORLW       2
0x1BB4	0xB4D8      	BTFSC       STATUS, 2 
0x1BB6	0xD65C      	BRA         L_main123
L_main91:
;space.c,692 :: 		}
0x1BB8	0xD550      	BRA         L_main88
;space.c,693 :: 		}
L_end_main:
0x1BBA	0xD7FF      	BRA         $+0
; end of _main
0x1E2E	0xF015EE10  	LFSR        1, 21
0x1E32	0x0E91      	MOVLW       145
0x1E34	0x6E00      	MOVWF       R0 
0x1E36	0x0E01      	MOVLW       1
0x1E38	0x6E01      	MOVWF       R1 
0x1E3A	0x0E9C      	MOVLW       156
0x1E3C	0x6EF6      	MOVWF       4086 
0x1E3E	0x0E1D      	MOVLW       29
0x1E40	0x6EF7      	MOVWF       TBLPTRH 
0x1E42	0x0E00      	MOVLW       0
0x1E44	0x6EF8      	MOVWF       TBLPTRU 
0x1E46	0xF005EC4E  	CALL        2716, 0
0x1E4A	0x0012      	RETURN      0
;__Lib_GlcdFonts.c,612 :: _font5x7
0x1BBC	0x0000 ;_font5x7+0
0x1BBE	0x0000 ;_font5x7+2
0x1BC0	0x0000 ;_font5x7+4
0x1BC2	0x5F00 ;_font5x7+6
0x1BC4	0x0000 ;_font5x7+8
0x1BC6	0x0700 ;_font5x7+10
0x1BC8	0x0700 ;_font5x7+12
0x1BCA	0x1400 ;_font5x7+14
0x1BCC	0x147F ;_font5x7+16
0x1BCE	0x147F ;_font5x7+18
0x1BD0	0x2A24 ;_font5x7+20
0x1BD2	0x2A7F ;_font5x7+22
0x1BD4	0x2312 ;_font5x7+24
0x1BD6	0x0813 ;_font5x7+26
0x1BD8	0x6264 ;_font5x7+28
0x1BDA	0x4936 ;_font5x7+30
0x1BDC	0x2255 ;_font5x7+32
0x1BDE	0x0050 ;_font5x7+34
0x1BE0	0x0305 ;_font5x7+36
0x1BE2	0x0000 ;_font5x7+38
0x1BE4	0x1C00 ;_font5x7+40
0x1BE6	0x4122 ;_font5x7+42
0x1BE8	0x0000 ;_font5x7+44
0x1BEA	0x2241 ;_font5x7+46
0x1BEC	0x001C ;_font5x7+48
0x1BEE	0x2A08 ;_font5x7+50
0x1BF0	0x2A1C ;_font5x7+52
0x1BF2	0x0808 ;_font5x7+54
0x1BF4	0x3E08 ;_font5x7+56
0x1BF6	0x0808 ;_font5x7+58
0x1BF8	0x5000 ;_font5x7+60
0x1BFA	0x0030 ;_font5x7+62
0x1BFC	0x0800 ;_font5x7+64
0x1BFE	0x0808 ;_font5x7+66
0x1C00	0x0808 ;_font5x7+68
0x1C02	0x3000 ;_font5x7+70
0x1C04	0x0030 ;_font5x7+72
0x1C06	0x2000 ;_font5x7+74
0x1C08	0x0810 ;_font5x7+76
0x1C0A	0x0204 ;_font5x7+78
0x1C0C	0x513E ;_font5x7+80
0x1C0E	0x4549 ;_font5x7+82
0x1C10	0x003E ;_font5x7+84
0x1C12	0x7F42 ;_font5x7+86
0x1C14	0x0040 ;_font5x7+88
0x1C16	0x6142 ;_font5x7+90
0x1C18	0x4951 ;_font5x7+92
0x1C1A	0x2146 ;_font5x7+94
0x1C1C	0x4541 ;_font5x7+96
0x1C1E	0x314B ;_font5x7+98
0x1C20	0x1418 ;_font5x7+100
0x1C22	0x7F12 ;_font5x7+102
0x1C24	0x2710 ;_font5x7+104
0x1C26	0x4545 ;_font5x7+106
0x1C28	0x3945 ;_font5x7+108
0x1C2A	0x4A3C ;_font5x7+110
0x1C2C	0x4949 ;_font5x7+112
0x1C2E	0x0130 ;_font5x7+114
0x1C30	0x0971 ;_font5x7+116
0x1C32	0x0305 ;_font5x7+118
0x1C34	0x4936 ;_font5x7+120
0x1C36	0x4949 ;_font5x7+122
0x1C38	0x0636 ;_font5x7+124
0x1C3A	0x4949 ;_font5x7+126
0x1C3C	0x1E29 ;_font5x7+128
0x1C3E	0x3600 ;_font5x7+130
0x1C40	0x0036 ;_font5x7+132
0x1C42	0x0000 ;_font5x7+134
0x1C44	0x3656 ;_font5x7+136
0x1C46	0x0000 ;_font5x7+138
0x1C48	0x0800 ;_font5x7+140
0x1C4A	0x2214 ;_font5x7+142
0x1C4C	0x1441 ;_font5x7+144
0x1C4E	0x1414 ;_font5x7+146
0x1C50	0x1414 ;_font5x7+148
0x1C52	0x2241 ;_font5x7+150
0x1C54	0x0814 ;_font5x7+152
0x1C56	0x0200 ;_font5x7+154
0x1C58	0x5101 ;_font5x7+156
0x1C5A	0x0609 ;_font5x7+158
0x1C5C	0x4932 ;_font5x7+160
0x1C5E	0x4179 ;_font5x7+162
0x1C60	0x7E3E ;_font5x7+164
0x1C62	0x1111 ;_font5x7+166
0x1C64	0x7E11 ;_font5x7+168
0x1C66	0x497F ;_font5x7+170
0x1C68	0x4949 ;_font5x7+172
0x1C6A	0x3E36 ;_font5x7+174
0x1C6C	0x4141 ;_font5x7+176
0x1C6E	0x2241 ;_font5x7+178
0x1C70	0x417F ;_font5x7+180
0x1C72	0x2241 ;_font5x7+182
0x1C74	0x7F1C ;_font5x7+184
0x1C76	0x4949 ;_font5x7+186
0x1C78	0x4149 ;_font5x7+188
0x1C7A	0x097F ;_font5x7+190
0x1C7C	0x0109 ;_font5x7+192
0x1C7E	0x3E01 ;_font5x7+194
0x1C80	0x4141 ;_font5x7+196
0x1C82	0x3251 ;_font5x7+198
0x1C84	0x087F ;_font5x7+200
0x1C86	0x0808 ;_font5x7+202
0x1C88	0x007F ;_font5x7+204
0x1C8A	0x7F41 ;_font5x7+206
0x1C8C	0x0041 ;_font5x7+208
0x1C8E	0x4020 ;_font5x7+210
0x1C90	0x3F41 ;_font5x7+212
0x1C92	0x7F01 ;_font5x7+214
0x1C94	0x1408 ;_font5x7+216
0x1C96	0x4122 ;_font5x7+218
0x1C98	0x407F ;_font5x7+220
0x1C9A	0x4040 ;_font5x7+222
0x1C9C	0x7F40 ;_font5x7+224
0x1C9E	0x0402 ;_font5x7+226
0x1CA0	0x7F02 ;_font5x7+228
0x1CA2	0x047F ;_font5x7+230
0x1CA4	0x1008 ;_font5x7+232
0x1CA6	0x3E7F ;_font5x7+234
0x1CA8	0x4141 ;_font5x7+236
0x1CAA	0x3E41 ;_font5x7+238
0x1CAC	0x097F ;_font5x7+240
0x1CAE	0x0909 ;_font5x7+242
0x1CB0	0x3E06 ;_font5x7+244
0x1CB2	0x5141 ;_font5x7+246
0x1CB4	0x5E21 ;_font5x7+248
0x1CB6	0x097F ;_font5x7+250
0x1CB8	0x2919 ;_font5x7+252
0x1CBA	0x4646 ;_font5x7+254
0x1CBC	0x4949 ;_font5x7+256
0x1CBE	0x3149 ;_font5x7+258
0x1CC0	0x0101 ;_font5x7+260
0x1CC2	0x017F ;_font5x7+262
0x1CC4	0x3F01 ;_font5x7+264
0x1CC6	0x4040 ;_font5x7+266
0x1CC8	0x3F40 ;_font5x7+268
0x1CCA	0x201F ;_font5x7+270
0x1CCC	0x2040 ;_font5x7+272
0x1CCE	0x7F1F ;_font5x7+274
0x1CD0	0x1820 ;_font5x7+276
0x1CD2	0x7F20 ;_font5x7+278
0x1CD4	0x1463 ;_font5x7+280
0x1CD6	0x1408 ;_font5x7+282
0x1CD8	0x0363 ;_font5x7+284
0x1CDA	0x7804 ;_font5x7+286
0x1CDC	0x0304 ;_font5x7+288
0x1CDE	0x5161 ;_font5x7+290
0x1CE0	0x4549 ;_font5x7+292
0x1CE2	0x0043 ;_font5x7+294
0x1CE4	0x7F00 ;_font5x7+296
0x1CE6	0x4141 ;_font5x7+298
0x1CE8	0x0402 ;_font5x7+300
0x1CEA	0x1008 ;_font5x7+302
0x1CEC	0x4120 ;_font5x7+304
0x1CEE	0x7F41 ;_font5x7+306
0x1CF0	0x0000 ;_font5x7+308
0x1CF2	0x0204 ;_font5x7+310
0x1CF4	0x0201 ;_font5x7+312
0x1CF6	0x4004 ;_font5x7+314
0x1CF8	0x4040 ;_font5x7+316
0x1CFA	0x4040 ;_font5x7+318
0x1CFC	0x0100 ;_font5x7+320
0x1CFE	0x0402 ;_font5x7+322
0x1D00	0x2000 ;_font5x7+324
0x1D02	0x5454 ;_font5x7+326
0x1D04	0x7854 ;_font5x7+328
0x1D06	0x487F ;_font5x7+330
0x1D08	0x4444 ;_font5x7+332
0x1D0A	0x3838 ;_font5x7+334
0x1D0C	0x4444 ;_font5x7+336
0x1D0E	0x2044 ;_font5x7+338
0x1D10	0x4438 ;_font5x7+340
0x1D12	0x4844 ;_font5x7+342
0x1D14	0x387F ;_font5x7+344
0x1D16	0x5454 ;_font5x7+346
0x1D18	0x1854 ;_font5x7+348
0x1D1A	0x7E08 ;_font5x7+350
0x1D1C	0x0109 ;_font5x7+352
0x1D1E	0x0802 ;_font5x7+354
0x1D20	0x5414 ;_font5x7+356
0x1D22	0x3C54 ;_font5x7+358
0x1D24	0x087F ;_font5x7+360
0x1D26	0x0404 ;_font5x7+362
0x1D28	0x0078 ;_font5x7+364
0x1D2A	0x7D44 ;_font5x7+366
0x1D2C	0x0040 ;_font5x7+368
0x1D2E	0x4020 ;_font5x7+370
0x1D30	0x3D44 ;_font5x7+372
0x1D32	0x0000 ;_font5x7+374
0x1D34	0x107F ;_font5x7+376
0x1D36	0x4428 ;_font5x7+378
0x1D38	0x4100 ;_font5x7+380
0x1D3A	0x407F ;_font5x7+382
0x1D3C	0x7C00 ;_font5x7+384
0x1D3E	0x1804 ;_font5x7+386
0x1D40	0x7804 ;_font5x7+388
0x1D42	0x087C ;_font5x7+390
0x1D44	0x0404 ;_font5x7+392
0x1D46	0x3878 ;_font5x7+394
0x1D48	0x4444 ;_font5x7+396
0x1D4A	0x3844 ;_font5x7+398
0x1D4C	0x147C ;_font5x7+400
0x1D4E	0x1414 ;_font5x7+402
0x1D50	0x0808 ;_font5x7+404
0x1D52	0x1414 ;_font5x7+406
0x1D54	0x7C18 ;_font5x7+408
0x1D56	0x087C ;_font5x7+410
0x1D58	0x0404 ;_font5x7+412
0x1D5A	0x4808 ;_font5x7+414
0x1D5C	0x5454 ;_font5x7+416
0x1D5E	0x2054 ;_font5x7+418
0x1D60	0x3F04 ;_font5x7+420
0x1D62	0x4044 ;_font5x7+422
0x1D64	0x3C20 ;_font5x7+424
0x1D66	0x4040 ;_font5x7+426
0x1D68	0x7C20 ;_font5x7+428
0x1D6A	0x201C ;_font5x7+430
0x1D6C	0x2040 ;_font5x7+432
0x1D6E	0x3C1C ;_font5x7+434
0x1D70	0x3040 ;_font5x7+436
0x1D72	0x3C40 ;_font5x7+438
0x1D74	0x2844 ;_font5x7+440
0x1D76	0x2810 ;_font5x7+442
0x1D78	0x0C44 ;_font5x7+444
0x1D7A	0x5050 ;_font5x7+446
0x1D7C	0x3C50 ;_font5x7+448
0x1D7E	0x6444 ;_font5x7+450
0x1D80	0x4C54 ;_font5x7+452
0x1D82	0x0044 ;_font5x7+454
0x1D84	0x3608 ;_font5x7+456
0x1D86	0x0041 ;_font5x7+458
0x1D88	0x0000 ;_font5x7+460
0x1D8A	0x007F ;_font5x7+462
0x1D8C	0x0000 ;_font5x7+464
0x1D8E	0x3641 ;_font5x7+466
0x1D90	0x0008 ;_font5x7+468
0x1D92	0x0808 ;_font5x7+470
0x1D94	0x1C2A ;_font5x7+472
0x1D96	0x0808 ;_font5x7+474
0x1D98	0x2A1C ;_font5x7+476
0x1D9A	0x0808 ;_font5x7+478
; end of _font5x7
;space.c,0 :: ?ICS_centerShip
0x1D9C	0x00 ;?ICS_centerShip+0
; end of ?ICS_centerShip
;space.c,0 :: ?ICS?lstr4_space
0x1D9D	0x4C50 ;?ICS?lstr4_space+0
0x1D9F	0x5941 ;?ICS?lstr4_space+2
0x1DA1	0x5245 ;?ICS?lstr4_space+4
0x1DA3	0x3120 ;?ICS?lstr4_space+6
0x1DA5	0x5720 ;?ICS?lstr4_space+8
0x1DA7	0x4E49 ;?ICS?lstr4_space+10
0x1DA9	0x0053 ;?ICS?lstr4_space+12
; end of ?ICS?lstr4_space
;space.c,0 :: ?ICS_areaX
0x1DAB	0x00 ;?ICS_areaX+0
; end of ?ICS_areaX
;space.c,0 :: ?ICS_areaY
0x1DAC	0x00 ;?ICS_areaY+0
; end of ?ICS_areaY
;space.c,0 :: ?ICS?lstr5_space
0x1DAD	0x4C50 ;?ICS?lstr5_space+0
0x1DAF	0x5941 ;?ICS?lstr5_space+2
0x1DB1	0x5245 ;?ICS?lstr5_space+4
0x1DB3	0x3220 ;?ICS?lstr5_space+6
0x1DB5	0x5720 ;?ICS?lstr5_space+8
0x1DB7	0x4E49 ;?ICS?lstr5_space+10
0x1DB9	0x0053 ;?ICS?lstr5_space+12
; end of ?ICS?lstr5_space
;space.c,0 :: ?ICS_flag
0x1DBB	0x00 ;?ICS_flag+0
; end of ?ICS_flag
;space.c,0 :: ?ICS?lstr6_space
0x1DBC	0x5449 ;?ICS?lstr6_space+0
0x1DBE	0x5327 ;?ICS?lstr6_space+2
0x1DC0	0x4120 ;?ICS?lstr6_space+4
0x1DC2	0x5420 ;?ICS?lstr6_space+6
0x1DC4	0x4549 ;?ICS?lstr6_space+8
0x1DC6	0x00 ;?ICS?lstr6_space+10
; end of ?ICS?lstr6_space
;space.c,0 :: ?ICS_minutes
0x1DC7	0x40 ;?ICS_minutes+0
; end of ?ICS_minutes
;space.c,0 :: ?ICS?lstr1_space
0x1DC8	0x4F59 ;?ICS?lstr1_space+0
0x1DCA	0x2055 ;?ICS?lstr1_space+2
0x1DCC	0x4957 ;?ICS?lstr1_space+4
0x1DCE	0x534E ;?ICS?lstr1_space+6
0x1DD0	0x00 ;?ICS?lstr1_space+8
; end of ?ICS?lstr1_space
;space.c,0 :: ?ICS_score
0x1DD1	0x0000 ;?ICS_score+0
; end of ?ICS_score
;space.c,0 :: ?ICS?lstr2_space
0x1DD3	0x4350 ;?ICS?lstr2_space+0
0x1DD5	0x5720 ;?ICS?lstr2_space+2
0x1DD7	0x4E49 ;?ICS?lstr2_space+4
0x1DD9	0x0053 ;?ICS?lstr2_space+6
; end of ?ICS?lstr2_space
;space.c,0 :: ?ICS_debris_turn
0x1DDB	0x00 ;?ICS_debris_turn+0
; end of ?ICS_debris_turn
;space.c,0 :: ?ICS?lstr3_space
0x1DDC	0x5449 ;?ICS?lstr3_space+0
0x1DDE	0x5327 ;?ICS?lstr3_space+2
0x1DE0	0x4120 ;?ICS?lstr3_space+4
0x1DE2	0x5420 ;?ICS?lstr3_space+6
0x1DE4	0x4549 ;?ICS?lstr3_space+8
0x1DE6	0x00 ;?ICS?lstr3_space+10
; end of ?ICS?lstr3_space
;space.c,0 :: ?ICS_y
0x1DE7	0x00 ;?ICS_y+0
; end of ?ICS_y
;space.c,0 :: ?ICS_seconds
0x1DE8	0x00 ;?ICS_seconds+0
; end of ?ICS_seconds
;space.c,0 :: ?ICS_turn2
0x1DE9	0x00 ;?ICS_turn2+0
; end of ?ICS_turn2
;space.c,0 :: ?ICS?lstr7_space
0x1DEA	0x6E6F ;?ICS?lstr7_space+0
0x1DEC	0x2065 ;?ICS?lstr7_space+2
0x1DEE	0x6C70 ;?ICS?lstr7_space+4
0x1DF0	0x7961 ;?ICS?lstr7_space+6
0x1DF2	0x7265 ;?ICS?lstr7_space+8
0x1DF4	0x00 ;?ICS?lstr7_space+10
; end of ?ICS?lstr7_space
;space.c,0 :: ?ICS?lstr8_space
0x1DF5	0x756D ;?ICS?lstr8_space+0
0x1DF7	0x746C ;?ICS?lstr8_space+2
0x1DF9	0x7069 ;?ICS?lstr8_space+4
0x1DFB	0x616C ;?ICS?lstr8_space+6
0x1DFD	0x6579 ;?ICS?lstr8_space+8
0x1DFF	0x0072 ;?ICS?lstr8_space+10
; end of ?ICS?lstr8_space
;space.c,0 :: ?ICS?lstr9_space
0x1E01	0x6157 ;?ICS?lstr9_space+0
0x1E03	0x7469 ;?ICS?lstr9_space+2
0x1E05	0x6E69 ;?ICS?lstr9_space+4
0x1E07	0x2067 ;?ICS?lstr9_space+6
0x1E09	0x6F66 ;?ICS?lstr9_space+8
0x1E0B	0x2072 ;?ICS?lstr9_space+10
0x1E0D	0x746F ;?ICS?lstr9_space+12
0x1E0F	0x6568 ;?ICS?lstr9_space+14
0x1E11	0x2072 ;?ICS?lstr9_space+16
0x1E13	0x6C70 ;?ICS?lstr9_space+18
0x1E15	0x7961 ;?ICS?lstr9_space+20
0x1E17	0x7265 ;?ICS?lstr9_space+22
0x1E19	0x00 ;?ICS?lstr9_space+24
; end of ?ICS?lstr9_space
;__Lib_ADC_A_D.c,0 :: ?ICS_vref_mask
0x1E1A	0x30 ;?ICS_vref_mask+0
; end of ?ICS_vref_mask
;space.c,0 :: ?ICS?lstr10_space
0x1E1B	0x7250 ;?ICS?lstr10_space+0
0x1E1D	0x7365 ;?ICS?lstr10_space+2
0x1E1F	0x2073 ;?ICS?lstr10_space+4
0x1E21	0x6F74 ;?ICS?lstr10_space+6
0x1E23	0x7320 ;?ICS?lstr10_space+8
0x1E25	0x6174 ;?ICS?lstr10_space+10
0x1E27	0x7472 ;?ICS?lstr10_space+12
0x1E29	0x00 ;?ICS?lstr10_space+14
; end of ?ICS?lstr10_space
;space.c,0 :: ?ICS?lstr11_space
0x1E2A	0x0050 ;?ICS?lstr11_space+0
; end of ?ICS?lstr11_space
;space.c,0 :: ?ICS_turn
0x1E2C	0x00 ;?ICS_turn+0
; end of ?ICS_turn
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [12]    _Delay_10us
0x0028      [10]    __Lib_Glcd_Strobe
0x0032       [6]    _Delay_1us
0x0038      [78]    _Glcd_Read_Data
0x0086      [14]    _Glcd_Write_Data
0x0094      [28]    _Glcd_Set_Side
0x00B0      [16]    _Glcd_Set_Page
0x00C0      [38]    _Glcd_Set_X
0x00E6     [180]    _Glcd_Dot
0x019A      [98]    _Glcd_V_Line
0x01FC      [80]    _Mul_16X16_U
0x024C     [272]    _Glcd_Write_Char
0x035C     [234]    _draw_player
0x0446      [14]    _UART1_Write
0x0454      [22]    _Delay_500us
0x046A      [10]    _UART1_Tx_Idle
0x0474      [18]    _UART1_Read
0x0486      [10]    _UART1_Data_Ready
0x0490     [112]    _Button
0x0500      [84]    _Glcd_Fill
0x0554     [100]    _Glcd_Write_Text
0x05B8     [528]    _move_player
0x07C8      [12]    _Delay_22us
0x07D4      [52]    _UART1_Write_Text
0x0808     [480]    _move_ia
0x09E8      [88]    _UART1_Init
0x0A40      [92]    _Glcd_Init
0x0A9C      [16]    ___CC2DW
0x0AAC     [184]    _gen_debris
0x0B64      [64]    _ADC_Read
0x0BA4      [62]    _init
0x0BE2      [40]    _draw_time
0x0C0A    [1424]    _move_debris
0x119A     [288]    _game_over
0x12BA      [26]    _output_data
0x12D4      [34]    _data_pack
0x12F6     [158]    _UART1_Read_Text
0x1394      [36]    _desdata_pack
0x13B8     [284]    _save_old_data
0x14D4      [22]    _output_character
0x14EA     [288]    _game_over_mult
0x160A    [1458]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    R0
0x0000       [1]    UART1_Init_tmp_L0
0x0001       [1]    R1
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0001       [1]    __Lib_USB_genHID_?FLOC____Lib_USB_genHID_USB_Handle_BusyT1
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0002       [1]    __Lib_USB_genHID_USB_CtrlTrf_Rx_Service_byteToRead_L0
0x0002       [2]    memset_pp_L0
0x0002       [1]    R2
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memchr_s_L0
0x0002       [2]    strlen_cp_L0
0x0003       [1]    __Lib_USB_genHID_USB_CtrlTrf_Rx_Service_i_L0
0x0003       [2]    memmove_tt_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [1]    R3
0x0003       [2]    __Lib_USB_genHID_USB_CtrlTrf_Tx_Service_byteToSend_L0
0x0003       [1]    MM_Init_i_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0004       [1]    R4
0x0004       [2]    frexp_pom_L0
0x0004       [2]    __Lib_USB_genHID_USB_Std_Feature_Req_Handler_p_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    __Lib_USB_genHID_USB_Transfer_Packet_handle_L0
0x0004       [1]    __Lib_USB_genHID_GetMaxIndexInDevDsc_index_L0
0x0004       [2]    __Lib_USB_genHID_USB_Get_Status_Handler_p_L2
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strcpy_cp_L0
0x0005       [1]    R5
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0006       [2]    __Lib_USB_genHID_GetMaxIndexInConfigDsc_totalLen_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [3]    __Lib_USB_genHID_GetMaxIndexInConfigDsc_ptr_L0
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    _centerShip
0x0016      [14]    ?lstr4_space
0x0024       [1]    _areaX
0x0025       [1]    _areaY
0x0026      [14]    ?lstr5_space
0x0034       [1]    _flag
0x0035      [11]    ?lstr6_space
0x0040       [1]    _minutes
0x0041       [9]    ?lstr1_space
0x004A       [2]    _score
0x004C       [8]    ?lstr2_space
0x0054       [1]    _debris_turn
0x0055      [11]    ?lstr3_space
0x0060       [1]    _y
0x0061       [1]    _seconds
0x0062       [1]    _turn2
0x0063      [11]    ?lstr7_space
0x006E      [12]    ?lstr8_space
0x007A      [25]    ?lstr9_space
0x0093       [1]    _vref_mask
0x0094      [15]    ?lstr10_space
0x00A3       [2]    ?lstr11_space
0x00A5       [1]    _turn
0x00A6      [84]    _old_debris
0x00FA       [4]    _old_ship
0x00FE       [4]    _ship
0x0102      [84]    _debris
0x0156       [5]    _info
0x015B       [1]    __Lib_Glcd_FontInitialized
0x015C       [1]    __Lib_Glcd_fontH
0x015D       [1]    __Lib_Glcd_fontW
0x015E       [3]    __Lib_Glcd_fontDef
0x0161       [2]    __Lib_Glcd_ExternalFontSet
0x0163       [4]    _UART_Rdy_Ptr
0x0167       [4]    _UART_Tx_Idle_Ptr
0x016B       [4]    _UART_Wr_Ptr
0x016F       [4]    _UART_Rd_Ptr
0x0173       [2]    __Lib_Glcd_fontOffset
0x0175       [1]    main_Master_L0
0x0176       [1]    main_Master_slave_L0
0x0177       [1]    main_move_other_L0
0x0178       [1]    main_win_L0
0x0179       [1]    save_old_data_i_L0
0x0179       [1]    move_ia_j_L0
0x0179       [1]    FARG_move_debris_a
0x0179       [2]    FARG_output_data_serial_dir
0x0179       [1]    FARG_output_character_charValue
0x0179       [1]    FARG_ADC_Read_channel
0x0179       [2]    FARG_UART1_Read_Text_Output
0x017A       [1]    move_debris_i_L0
0x017B       [1]    move_debris_j_L0
0x017B       [2]    FARG_UART1_Read_Text_Delimiter
0x017D       [1]    FARG_UART1_Read_Text_Attempts
0x017E       [1]    UART1_Read_Text_r_data_L0
0x017F       [1]    UART1_Read_Text_out_idx_L0
0x0180       [1]    UART1_Read_Text_delim_idx_L0
0x0181       [2]    FARG_Button_port
0x0181       [2]    FARG_Glcd_Write_Text_text
0x0181       [2]    FARG_UART1_Write_Text_uart_text
0x0181       [1]    FARG_Glcd_Fill_pattern
0x0181       [1]    FARG_move_player_i
0x0182       [1]    Glcd_Fill_yy_L0
0x0182       [1]    FARG_move_player_direction
0x0183       [1]    FARG_Glcd_Write_Text_x_pos
0x0183       [1]    UART1_Write_Text_data__L0
0x0183       [1]    FARG_move_player_a
0x0183       [1]    FARG_Button_pin
0x0183       [1]    Glcd_Fill_page_L0
0x0184       [1]    UART1_Write_Text_counter_L0
0x0184       [1]    FARG_Glcd_Write_Text_page_num
0x0184       [1]    FARG_Button_time_ms
0x0185       [1]    FARG_Button_active_state
0x0185       [1]    FARG_Glcd_Write_Text_color
0x0186       [1]    Button_pMask_L0
0x0186       [1]    Glcd_Write_Text_i_L0
0x0187       [1]    Button_rslt_L0
0x0188       [1]    FARG_UART1_Write_data_
0x0188       [1]    FARG_draw_player_x
0x0188       [1]    FARG_Glcd_Write_Char_chr
0x0189       [1]    FARG_draw_player_y
0x0189       [1]    FARG_Glcd_Write_Char_x_pos
0x018A       [1]    FARG_draw_player_color
0x018A       [1]    FARG_Glcd_Write_Char_page_num
0x018B       [1]    FARG_Glcd_Write_Char_color
0x018C       [1]    Glcd_Write_Char_ii_L0
0x018D       [1]    Glcd_Write_Char_data_read_L0
0x018E       [1]    Glcd_Write_Char_font_ch_L0
0x018F       [1]    Glcd_Write_Char_font_ch_inv_L0
0x0190       [2]    Glcd_Write_Char_pointer_L0
0x0192       [1]    FARG_Glcd_V_Line_y_start
0x0193       [1]    FARG_Glcd_V_Line_y_end
0x0194       [1]    FARG_Glcd_V_Line_x_pos
0x0195       [1]    FARG_Glcd_V_Line_color
0x0196       [1]    Glcd_V_Line_loc_L0
0x0197       [1]    FARG_Glcd_Dot_x_pos
0x0198       [1]    FARG_Glcd_Dot_y_pos
0x0199       [1]    FARG_Glcd_Dot_color
0x019A       [1]    Glcd_Dot_bit_mask1_L0
0x019B       [1]    Glcd_Dot_bit_mask0_L0
0x019C       [1]    Glcd_Dot_ddata_L0
0x019D       [1]    FARG_Glcd_Set_Page_page
0x019D       [1]    FARG_Glcd_Set_Side_x_pos
0x019D       [1]    FARG_Glcd_Set_X_x_pos
0x019D       [1]    FARG_Glcd_Write_Data_ddata
0x019D       [1]    Glcd_Read_Data_local_L0
0x0F82       [1]    PORTC
0x0F83       [1]    GLCD_DataPort
0x0F83       [1]    PORTD
0x0F8A       [0]    LATB5_bit
0x0F8A       [0]    LATB1_bit
0x0F8A       [0]    LATB0_bit
0x0F8A       [0]    LATB2_bit
0x0F8A       [0]    LATB4_bit
0x0F8A       [0]    LATB3_bit
0x0F8A       [0]    GLCD_RS
0x0F8A       [0]    GLCD_CS2
0x0F8A       [0]    GLCD_CS1
0x0F8A       [0]    GLCD_RST
0x0F8A       [0]    GLCD_EN
0x0F8A       [0]    GLCD_RW
0x0F93       [0]    GLCD_CS1_Direction
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    TRISB3_bit
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    TRISB1_bit
0x0F93       [0]    TRISB2_bit
0x0F93       [0]    GLCD_EN_Direction
0x0F93       [0]    GLCD_CS2_Direction
0x0F93       [0]    GLCD_RST_Direction
0x0F93       [0]    GLCD_RW_Direction
0x0F93       [0]    GLCD_RS_Direction
0x0F94       [1]    TRISC
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    TRISC6_bit
0x0F9E       [1]    PIR1
0x0FAB       [1]    RCSTA
0x0FAC       [1]    TXSTA
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB8       [1]    BAUDCON
0x0FC0       [1]    ADCON2
0x0FC1       [1]    ADCON1
0x0FC2       [1]    ADCON0
0x0FC3       [1]    ADRESL
0x0FC4       [1]    ADRESH
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x1BBC     [480]    _font5x7
0x1D9C       [1]    ?ICS_centerShip
0x1D9D      [14]    ?ICS?lstr4_space
0x1DAB       [1]    ?ICS_areaX
0x1DAC       [1]    ?ICS_areaY
0x1DAD      [14]    ?ICS?lstr5_space
0x1DBB       [1]    ?ICS_flag
0x1DBC      [11]    ?ICS?lstr6_space
0x1DC7       [1]    ?ICS_minutes
0x1DC8       [9]    ?ICS?lstr1_space
0x1DD1       [2]    ?ICS_score
0x1DD3       [8]    ?ICS?lstr2_space
0x1DDB       [1]    ?ICS_debris_turn
0x1DDC      [11]    ?ICS?lstr3_space
0x1DE7       [1]    ?ICS_y
0x1DE8       [1]    ?ICS_seconds
0x1DE9       [1]    ?ICS_turn2
0x1DEA      [11]    ?ICS?lstr7_space
0x1DF5      [12]    ?ICS?lstr8_space
0x1E01      [25]    ?ICS?lstr9_space
0x1E1A       [1]    ?ICS_vref_mask
0x1E1B      [15]    ?ICS?lstr10_space
0x1E2A       [2]    ?ICS?lstr11_space
0x1E2C       [1]    ?ICS_turn
